<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CheckEngine</name>
    </assembly>
    <members>
        <member name="T:ECMPS.Checks.CheckEngine.cCategory">
            <summary>
            Category base class
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.#ctor(ECMPS.Checks.CheckEngine.cCheckEngine,ECMPS.Checks.CheckEngine.cProcess,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="checkEngine"></param>
            <param name="process"></param>
            <param name="categoryCd"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.#ctor(ECMPS.Checks.CheckEngine.cCheckEngine,ECMPS.Checks.CheckEngine.cProcess,System.String,System.Data.DataTable)">
            <summary>
            Constructor
            </summary>
            <param name="checkEngine"></param>
            <param name="process"></param>
            <param name="categoryCd"></param>
            <param name="thisTable"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.#ctor(ECMPS.Checks.CheckEngine.cCheckEngine,ECMPS.Checks.CheckEngine.cProcess,ECMPS.Checks.CheckEngine.cCategory,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="checkEngine"></param>
            <param name="process"></param>
            <param name="parentCategory"></param>
            <param name="categoryCd"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.#ctor(ECMPS.Checks.CheckEngine.cCheckEngine,ECMPS.Checks.CheckEngine.cProcess,ECMPS.Checks.CheckEngine.cCategory,System.String,System.Data.DataTable)">
            <summary>
            Constructor
            </summary>
            <param name="checkEngine"></param>
            <param name="process"></param>
            <param name="parentCategory"></param>
            <param name="categoryCd"></param>
            <param name="thisTable"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.#ctor(ECMPS.Checks.CheckEngine.cCategory,System.String)">
            <summary>
            Created a category object based on its category code and parent category object.
            </summary>
            <param name="parentCategory">Category object for the parent category.</param>
            <param name="categoryCd">Category code for the child category object to construct.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.#ctor">
            <summary>
            Instantiates a cCategory object primarily for unit testing purposes.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.Initialize(ECMPS.Checks.CheckEngine.cCheckEngine,ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Groups initialiation every constructor must perform
            </summary>
            <param name="checkEngine"></param>
            <param name="process"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.InitializeCurrent(System.String)">
            <summary>
            Initializes the current properties corresponding to the passed values.
            </summary>
            <param name="monLocId">The monitor location id to initialize.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.InitializeCurrent(System.String,System.String)">
            <summary>
            Initializes the current properties corresponding to the passed values.
            </summary>
            <param name="monLocId">The monitor location id to initialize.</param>
            <param name="testSumId">The test summary id to initialize.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CheckCatalogResult">
            <summary>
            Check Catalog Result setting for the previously executed check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CheckEngine">
            <summary>
            the check engine object
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CheckParameters">
            <summary>
            check parameters hashtable
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CurrentMonLocId">
            <summary>
            current MON_LOC_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CurrentMonLocName">
            <summary>
            Location name of the monitor location record begin processed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CurrentMonLocPos">
            <summary>
            Current location position
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CurrentOpDate">
            <summary>
            Current OP_DATE
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CurrentOpHour">
            <summary>
            Current OP_HOUR
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CurrentRowId">
            <summary>
            Current ROW_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.CurrentTestSumId">
            <summary>
            Current TEST_SUM_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.ErrorSuppressValues">
            <summary>
            The Error Suppression Values for the Category.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.ExecuteSeverity">
            <summary>
            The execute severity
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.LogDateHour">
            <summary>
            The date/hour to use when logging errors instead of the current date and hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.Process">
            <summary>
            Process object
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.SeverityCd">
            <summary>
            Severity code resulting from running the category's checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.StopWatchFilterData">
            <summary>
            The StopWatch to get the timing for the FilterData() method
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.StopWatchProcessChecksDo">
            <summary>
            The Stopwatch to get the timing for the ProcessChecksDo() method
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.MissingDataBorders">
            <summary>
            Missing data borders?
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.ModcHourCounts">
            <summary>
            MODC Hour Count Object
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.ThisTable">
            <summary>
            this table
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.RecordIdentifier">
            <summary>
            The record id
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCategory.TableName">
            <summary>
            the table name
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ProcessChecks">
            <summary>
            Sets the current record identifier, filters the data and proecesses the checks for this 
            category by looping through the check band levels' checks.  Check for failed check conditions 
            and un-set required parameters for the checks and prevents the checks from executing that fail 
            conditions or are missing required parameters.
            </summary>
            <returns>Returns true if each check executed without problems.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ProcessChecks(System.String)">
            <summary>
            Sets the current record identifier, filters the data and proecesses the checks for this 
            category by looping through the check band levels' checks.  Check for failed check conditions 
            and un-set required parameters for the checks and prevents the checks from executing that fail 
            conditions or are missing required parameters.
            </summary>
            <param name="AMonitorLocationId">The current monitor locaiton id.</param>
            <returns>Returns true if each check executed without problems.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ProcessChecks(System.String,System.String)">
            <summary>
            Sets the current record identifier, filters the data and proecesses the checks for this 
            category by looping through the check band levels' checks.  Check for failed check conditions 
            and un-set required parameters for the checks and prevents the checks from executing that fail 
            conditions or are missing required parameters.
            </summary>
            <param name="AMonitorLocationId">The current monitor locaiton id.</param>
            <param name="ATestSummaryId">The current test summary id.</param>
            <returns>Returns true if each check executed without problems.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ProcessChecksDo_WithPrep">
            <summary>
            Sets the current record identifier, filters the data and proecesses the checks for this 
            category by looping through the check band levels' checks.  Check for failed check conditions 
            and un-set required parameters for the checks and prevents the checks from executing that fail 
            conditions or are missing required parameters.
            </summary>
            
            <returns>Returns true if each check executed without problems.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ProcessChecksDo">
            <summary>
            Proecesses the checks for this category by looping through the check band levels' checks.
            Check for failed check conditions and un-set required parameters for the checks and prevents
            the checks from executing that fail conditions or are missing required parameters.
            </summary>
            
            <returns>Returns true if each check executed without problems.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.Run(ECMPS.Checks.Parameters.cParameterizedCheck,System.String@)">
            <summary>
            Run the category
            </summary>
            <param name="ARuleCheck">rule check object</param>
            <param name="AErrorMessage">any error messages produced</param>
            <returns>true if successful, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.UpdateSeverity(ECMPS.Definitions.SeverityCode.eSeverityCd)">
            <summary>
            Update the severity
            </summary>
            <param name="ASeverityCd">The Severity Code to merge.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.EraseParameters">
            <summary>
            Resets the check parameters for the category.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to return.</param>
            <returns>Returns the parameter or null if not found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter specified by the passed parameter name.
            
            This is the primary Set Check Parameter method.
            </summary>
            <param name="AParameterName">The name of the parameter to set.</param>
            <param name="AParameterValue">The value to set.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetCheckParameter(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType,System.Boolean,System.Boolean)">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="ParameterName">The name of the parameter to set.</param>
            <param name="ParameterValue">The value to set.</param>
            <param name="ParameterType">The type of the parameter. (obsolete and ignored)</param>
            <param name="IsAccumulator">True if the parameter is an accumulator. (obsolete and ignored)</param>
            <param name="IsArray">True if the parameter is an array. (obsolete and ignored)</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetCheckParameter(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType)">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="ParameterName">The name of the parameter to set.</param>
            <param name="ParameterValue">The value to set.</param>
            <param name="ParameterType">The type of the parameter. (obsolete and ignored)</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetDataRowCheckParameter(System.String,System.Data.DataTable,System.String,System.String)">
            <summary>
            Sets a data row view parameter to the first row returned by applying the passed filter and sort 
            information to the passed table.
            </summary>
            <param name="ParameterName">The name of the parameter</param>
            <param name="Table">The table to apply the filter and sort informaiton against.</param>
            <param name="RowFilter">The filter to apply.</param>
            <param name="Sort">The sort to apply.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetDataViewCheckParameter(System.String,System.Data.DataTable,System.String,System.String)">
            <summary>
            Sets a data view parameterview returned by applying the passed filter and sort information 
            to the passed table.
            </summary>
            <param name="ParameterName">The name of the parameter</param>
            <param name="Table">The table to apply the filter and sort informaiton against.</param>
            <param name="RowFilter">The filter to apply.</param>
            <param name="Sort">The sort to apply.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.AccumCheckAggregate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Aggregates the additional value into the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AAdditionalValue">The value to aggregate.</param>
            <param name="AOrTogether">Or to existing value if true, otherwise and.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.AccumCheckAggregate(System.String,System.Decimal)">
            <summary>
            Aggregates the additional value into the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to remove.</param>
            <param name="AAdditionalValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.AccumCheckAggregate(System.String,System.Int32)">
            <summary>
            Aggregates the additional value into the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AAdditionalValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.AccumCheckAggregate(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AAdditionalValue">The value to aggregate.</param>
            <param name="AOrTogether">Or to existing value if true, otherwise and.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.AccumCheckAggregate(System.String,System.Int32,System.Decimal)">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AAdditionalValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.AccumCheckAggregate(System.String,System.Int32,System.Int32)">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AAdditionalValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameterDo(System.String,System.Object)">
            <summary>
            Sets the array parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to set.</param>
            <param name="AParameterValue">The array to set.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameter(System.String,System.Boolean[])">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to set.</param>
            <param name="AArray">The value to set.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameter(System.String,System.Decimal[])">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to set.</param>
            <param name="AArray">The value to set.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameter(System.String,System.Int32[])">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to set.</param>
            <param name="AArray">The value to set.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameter(System.String,System.String[])">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to set.</param>
            <param name="AArray">The value to set.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameter(System.String,System.Int32,System.Boolean)">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AParameterValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameter(System.String,System.Int32,System.Decimal)">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AParameterValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetDecimalArrayParameter(System.String,System.Int32,System.Nullable{System.Decimal})">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AParameterValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetIntegerArrayParameter(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AParameterValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameter(System.String,System.Int32,System.Int32)">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AParameterValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetArrayParameter(System.String,System.Int32,System.String)">
            <summary>
            Aggregates the additional value into the element of the array parameter specified by the 
            passed parameter name and array index.
            </summary>
            <param name="AParameterName">The name of the parameter to aggregate.</param>
            <param name="AArrayIndex">The index of the elmement in the array to aggregate</param>
            <param name="AParameterValue">The value to aggregate.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.InitCheckBands(ECMPS.Checks.DatabaseAccess.cDatabase,System.String@)">
            <summary>
            Populates the check bands for the category.
            </summary>
            <param name="ADatabaseAux">The AUX database object to use for the update.</param>
            <param name="AErrorMessage">The error message returned on failure.</param>
            <returns>True if the population is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetCheckBands(ECMPS.Checks.Parameters.cCheckParameterBands)">
            <summary>
            Populates the check bands for the category.
            </summary>
            <param name="ACheckBands">The category code of the checks bands to load.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.HandleSetErrorSuppressValues">
            <summary>
            Resets ErrorSupressValues to null and calls the child SetErrorSuppressValues method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SourceTable(System.Int32)">
            <summary>
            Returns the source table in the Source Tables at the specified index.
            </summary>
            <param name="index">The index of the table in Source Tables.</param>
            <returns>The table at the specified index or null if the index position does not exist.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SourceTable(System.String)">
            <summary>
            Returns the source table in the Source Tables with the specified table name.
            </summary>
            <param name="tableName">The name of the table to return.</param>
            <returns>The table of the specifed name or null if the table does not exist.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterData">
            <summary>
            Filter the data
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetRecordIdentifier">
            <summary>
            Set the record identifier
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SetErrorSuppressValues">
            <summary>
            Set the error suppression values used to apply error suppression.
            </summary>
            <returns>Returns false if the setting fails.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.SourceTables">
            <summary>
            The source tables
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.RowPosition(System.String)">
            <summary>
            the row position
            </summary>
            <param name="ABaseInternalTableName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.Int32,System.String,System.String,System.String)">
            <summary>
            Filter Ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="AOpHour"></param>
            <param name="AMonLocId"></param>
            <param name="ABeganDateName"></param>
            <param name="AEndedDateName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>
            Filter Ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>    
            <param name="AMonLocId"></param>
            <param name="ABeganDateName1"></param>
            <param name="ABeganDateName2"></param>
            <param name="AEndedDateName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="AOpHour"></param>
            <param name="AMonLocId"></param>
            <param name="ABeganDateName"></param>
            <param name="ABeganHourName"></param>
            <param name="AEndedDateName"></param>
            <param name="AEndedHourName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.Int32,System.String)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="AOpHour"></param>
            <param name="AMonLocId"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.Int32,System.String,System.String)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="AOpHour"></param>
            <param name="ABeganDateName"></param>
            <param name="AEndedDateName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="AOpHour"></param>
            <param name="ABeganDateName"></param>
            <param name="ABeganHourName"></param>
            <param name="AEndedDateName"></param>
            <param name="AEndedHourName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.Int32)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="AOpHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="AMonLocId"></param>
            <param name="ABeganDateName"></param>
            <param name="AEndedDateName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.String)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="AMonLocId"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime,System.String,System.String)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <param name="ABeganDateName"></param>
            <param name="AEndedDateName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterRanged(System.String,System.Data.DataTable,System.DateTime)">
            <summary>
            Filter ranged
            </summary>
            <param name="ASourceName"></param>
            <param name="AFilterTable"></param>
            <param name="AOpDate"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterView(System.String,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Applies the row filter to the default view of the table associated with the source name. 
            </summary>
            <param name="ASourceName">The name of the table to filter</param>
            <param name="ARowFilter">The filter to apply to the table's default view</param>
            <returns>A view containing the filtered data</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterLocation(System.String,System.Data.DataTable,System.String)">
            <summary>
            Filter on location
            </summary>
            <param name="ASourceName">table name</param>
            <param name="AFilterTable">the table to filter</param>
            <param name="AMonLocId">the MON_LOC_ID to filter on</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterLocation(System.String,System.String)">
            <summary>
            Filter on location
            </summary>
            <param name="sourceName">table name</param>
            <param name="filterMonLocId">the MON_LOC_ID to filter on</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.FilterTable_Init(System.String)">
            <summary>
            Initialize a FilterTable
            </summary>
            <param name="ASourceName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ValidateDate_End1(System.Object,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory)">
            <summary>
            Valiate an END_DATE
            </summary>
            <param name="TestDate"></param>
            <param name="ValidParameterName"></param>
            <param name="OutOfRangeResult"></param>
            <param name="Category"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ValidateDate_End1(System.String,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory,System.String)">
            <summary>
            Valiate an END_DATE
            </summary>
            <param name="CurrentParameterName"></param>
            <param name="DateFieldName"></param>
            <param name="ValidParameterName"></param>
            <param name="OutOfRangeResult"></param>
            <param name="Category"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ValidateDate_Start1(System.Object,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory)">
            <summary>
            validate a BEGIN_DATE
            </summary>
            <param name="TestDate"></param>
            <param name="ValidParameterName"></param>
            <param name="NullResult"></param>
            <param name="OutOfRangeResult"></param>
            <param name="Category"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ValidateDate_Start1(System.String,System.String,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory,System.String)">
            <summary>
            validate a BEGIN_DATE
            </summary>
            <param name="CurrentParameterName"></param>
            <param name="DateFieldName"></param>
            <param name="ValidParameterName"></param>
            <param name="NullResult"></param>
            <param name="OutOfRangeResult"></param>
            <param name="Category"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ValidateHour_End1(System.Object,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory)">
            <summary>
            validate a END_HOUR
            </summary>
            <param name="TestHour"></param>
            <param name="ValidParameterName"></param>
            <param name="OutOfRangeResult"></param>
            <param name="Category"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ValidateHour_End1(System.String,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory,System.String)">
            <summary>
            validate a END_HOUR
            </summary>
            <param name="CurrentParameterName"></param>
            <param name="HourFieldName"></param>
            <param name="ValidParameterName"></param>
            <param name="OutOfRangeResult"></param>
            <param name="Category"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ValidateHour_Start1(System.Object,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory)">
            <summary>
            validate a BEGIN_HOUR
            </summary>
            <param name="TestHour"></param>
            <param name="ValidParameterName"></param>
            <param name="NullResult"></param>
            <param name="OutOfRangeResult"></param>
            <param name="Category"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.ValidateHour_Start1(System.String,System.String,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory,System.String)">
            <summary>
            validate a BEGIN_HOUR
            </summary>
            <param name="CurrentParameterName"></param>
            <param name="HourFieldName"></param>
            <param name="ValidParameterName"></param>
            <param name="NullResult"></param>
            <param name="OutOfRangeResult"></param>
            <param name="Category"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.OverrideCategoryCd(System.String)">
            <summary>
            Used by Direct Check Tester to override the category code of the category object.
            </summary>
            <param name="ACategoryCd">The override value.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.OverrideCurrentMonitorLocation(System.String,System.Int32)">
            <summary>
            Used by Direct Check Tester to override the current monitor location id and position
            of the category object.
            </summary>
            <param name="AMonLocId">The override monitor lcoation id.</param>
            <param name="ALocationPos">The override lcoation position.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCategory.OverrideCurrentOpHour(System.DateTime,System.Int32)">
            <summary>
            Used by Direct Check Tester to override the current operating date and hour
            of the category object.
            </summary>
            <param name="AOpDate">The override operating date.</param>
            <param name="AOpHour">The override operating hour.</param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.CheckDataRow">
            <summary>
            Base class for all typed check data rows.
            
            Descendents of this class are used by the generic CheckDataView to implement a typed
            DataView with key DataView functionality.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor accepts and saves the DataRowView containing the data accessed through this class.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the class.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.CheckDataRow.SourceRow">
            <summary>
            The underlying DataRowView containing the data for the class.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataRow.InitDataSource">
            <summary>
            
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.CheckDataView`1">
            <summary>
            Implements a generic wrapper around a DataView the returns typed rows for the data in the view.
            </summary>
            <typeparam name="T">A descendent of CheckDataRow that implements a particular typed row.</typeparam>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.#ctor(System.Data.DataView)">
            <summary>
            his constructor accepts and saves the DataView containing the data accessed through this class.
            </summary>
            <param name="sourceView"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.#ctor(`0[])">
            <summary>
            This constructor creates and instance of the class with a zero row view.
            </summary>
            <param name="checkDataRowList"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.#ctor(System.Data.DataTable,System.String,System.String)">
            <summary>
            This constructor accepts and saves a DataView for the passed table, row filter and sort information.
            </summary>
            <param name="Table">The table to apply the filter and sort informaiton against.</param>
            <param name="RowFilter">The filter to apply.</param>
            <param name="Sort">The sort to apply.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.CheckDataView`1.Count">
            <summary>
            Returns the number of rows in the view.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.CheckDataView`1.SourceView">
            <summary>
            The source DataView wrapped by this class.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.CheckDataView`1.Item(System.Int32)">
            <summary>
            This indexer returns a typed version of the DataView row specified by rowIndex.
            </summary>
            <param name="rowIndex">The position of the row to return in SourceView.</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.Add(`0[])">
            <summary>
            Adds the list of check data rows to the view.
            </summary>
            <param name="checkDataRowList"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.GetRow(System.Int32)">
            <summary>
            Returns the row at the index indicated.
            </summary>
            <param name="row">The index of the row to return.</param>
            <returns>The row at the index indicated.  Returns null if a row does not exists that matches the index.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.CountRows(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean)">
            <summary>
            Returns a count of the rows in the view where the boolean value of the row filter
            evaluation does not equal the ANotFilter flag.
            </summary>
            <param name="rowFilter">The row filter to apply</param>
            <param name="notFilter">Whether to negate the value returned by the filter</param>
            <returns>The number of rows matching the row filter and not filter.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.CountRows(ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns a count of the rows in the view where the boolean value of the row filter
            evaluation is true.
            </summary>
            <param name="rowFilter">The row filter to apply</param>
            <returns>The number of rows matching the row filter and not filter.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindRow(ECMPS.Checks.TypeUtilities.cFilterCondition[],`0@)">
            <summary>
            Finds the first row that matches the filter specification and return true if the rwo is found.
            </summary>
            <param name="rowFilter">The row filter to apply against the rows being tested.</param>
            <param name="filteredRow">Out parameter of the first row found through filtering</param>
            <returns>True if a row was found otherwise false.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindRow(ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns the first row that matches the filter specification.
            </summary>
            <param name="rowFilter">The row filter to apply against the rows being tested.</param>
            <returns>The first row that matches the filter specification, or null if no row matches</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindRow(ECMPS.Checks.TypeUtilities.cFilterCondition[][])">
            <summary>
            Returns the first row that matches the filter specification.
            </summary>
            <param name="rowFilterList">A list of row filters that are or'd together to produce na evaluation</param>
            <returns>The data view of active rows that match the filter specifications</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindFirstRow(System.String,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns the first row after applying the row filter and sort order.
            </summary>
            <param name="sortOrder">The sort to apply.</param>
            <param name="rowFilter">The filter to apply.</param>
            <returns>The first row after applying the filter and sort.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindLastRow(System.String,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns the last row after applying the row filter and sort order.
            </summary>
            <param name="sortOrder">The sort to apply.</param>
            <param name="rowFilter">The filter to apply.</param>
            <returns>The last row after applying the filter and sort.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindRows(System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns the rows that match the filter specification.
            </summary>
            <param name="notFilter">Indicates whether to negate the result of evaluating the row filter.</param>
            <param name="rowFilter">The row filter to apply against the rows being tested.</param>
            <returns>Data view of the rows that match the filter specification</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindRows(ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns the rows that match the filter specification.
            </summary>
            <param name="rowFilter">The row filter to apply against the rows being tested.</param>
            <returns>Data view of the rows that match the filter specification</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindRows(System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[][])">
            <summary>
            Returns a data view of the rows whose date range fields overlap the passed date range values
            and matching the filter conditions.
            </summary>
            <param name="notFilter">Indicates whether to negate the result of evaluating the row filter.</param>
            <param name="rowFilterList">A list of row filters that are or'd together to produce na evaluation</param>
            <returns>The data view of active rows that match the filter specifications</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindRows(ECMPS.Checks.TypeUtilities.cFilterCondition[][])">
            <summary>
            Returns a data view of the rows whose date range fields overlap the passed date range values
            and matching the filter conditions.
            </summary>
            <param name="rowFilterList">A list of row filters that are or'd together to produce na evaluation</param>
            <returns>The data view of active rows that match the filter specifications</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindActiveRows(System.DateTime,System.DateTime,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns data where date range fields overlap the passed date range values and matching the filter conditions.
            </summary>
            <param name="beganDate">The beginning of the active date range.</param>
            <param name="endedDate">The end of the active date range.</param>
            <param name="rowFilter">Filter conditions to apply.</param>
            <returns>Returns the active data that matches the filter critera.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindActiveRowsByHour(System.DateTime,System.DateTime,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns data where date range fields overlap the passed date range values and matching the filter conditions.
            </summary>
            <param name="beganHour">The beginning of the active hour range.</param>
            <param name="endedHour">The end of the active hour range.</param>
            <param name="rowFilter">Filter conditions to apply.</param>
            <returns>Returns the active data that matches the filter critera.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindActiveRows(System.DateTime,System.DateTime,ECMPS.Checks.TypeUtilities.cFilterCondition[][])">
            <summary>
            Returns data where date range fields overlap the passed date range values and matching the filter conditions.
            </summary>
            <param name="beganDate">The beginning of the active date range.</param>
            <param name="endedDate">The end of the active date range.</param>
            <param name="rowFilter">Filter conditions to apply.</param>
            <returns>Returns the active data that matches the filter critera.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindActiveRowsByHour(System.DateTime,System.DateTime,ECMPS.Checks.TypeUtilities.cFilterCondition[][])">
            <summary>
            Returns data where date range fields overlap the passed date range values and matching the filter conditions.
            </summary>
            <param name="beganHour">The beginning of the active hour range.</param>
            <param name="endedHour">The end of the active hour range.</param>
            <param name="rowFilter">Filter conditions to apply.</param>
            <returns>Returns the active data that matches the filter critera.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindEarliestRow(ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns the earliest row after applying the row filter.
            </summary>
            <param name="rowFilter">The filter to apply to the data.</param>
            <returns>Returns the earliest row if any rows match the condition.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindEarliestRowByDate(System.String,System.String,ECMPS.Checks.TypeUtilities.cFilterCondition[][])">
            <summary>
            Returns the earliest row with the latest end date.
            </summary>
            <param name="beginDateColumnName">The column of the begin/earliest date.</param>
            <param name="endDateColumnName">The column to use as the end date.</param>
            <param name="rowFilterList">Or row filtering used to select rows to check for the earliest date.</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.FindMostRecentRow(System.DateTime,System.String,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Finds the row with an ended date and hour closest but not after to the specified 
            began date and hour and matching the filter specifications.
            </summary>
            <param name="referenceDateTime">The began date of the date and hour range to test rows against</param>
            <param name="dataDateTimeField">The ended datetime field name of the rows</param>
            <param name="rowFilterList">The row filter to apply against each row.</param>
            <returns>The most recent row based on its end date and hour</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataView`1.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.CheckDataEnum`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataEnum`1.#ctor(ECMPS.Checks.CheckEngine.CheckDataView{`0})">
            <summary>
            
            </summary>
            <param name="checkDataView"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataEnum`1.MoveNext">
            <summary>
            Moves to the next item in the enumeration.
            </summary>
            <returns>Return true if the next item exists, otherwise returns false.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataEnum`1.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.CheckDataEnum`1.Current">
            <summary>
            
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataEnum`1.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.CheckDataEnum`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cCheckEngine">
            <summary>
            The ECMPS Check Engine 
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a cCheckEngine object and initialized the UserId, DataConnectionString,
            AuxConnectionString, WsConnectionString, DllPath and SystemStateDumpPath properties.
            </summary>
            <param name="userId">The current user id.</param>
            <param name="dataConnectionString">The ECMPS database connection string.</param>
            <param name="auxConnectionString">The ECMPS_AUX database conneciton string.</param>
            <param name="workspaceConnectionString">The ECMPS_WS database connection string.</param>
            <param name="checksDllPath">The path of the checks DLLs.</param>
            <param name="systemStateDumpFilePath">The path in which to dump system state information.</param>
            <param name="commandTimeout">The timeout to use on SQL commands.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.#ctor">
            <summary>
            Instantiates a cCheckEngine object primarily for unit testing purposes.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_EmGenerate(System.String,System.Int32,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'EMGEN' process.
            </summary>
            <param name="monPlanId">The MON_PLAN_ID of the emissions report.</param>
            <param name="rptPeriodId">The RPT_PERIOD_ID of the emissions report.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_EmImport(System.String,System.Decimal,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'EMIMPRT' process.
            </summary>
            <param name="sORISCode">The ORIS_CODE for the import</param>
            <param name="nSessionID">The SESSION_ID for the import</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_EmReport(System.String,System.Int32,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'HOURLY' process.
            </summary>
            <param name="monPlanId">The MON_PLAN_ID of the emissions report.</param>
            <param name="rptPeriodId">The RPT_PERIOD_ID of the emissions report.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_LmeGenerate(System.String,System.Int32,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'LMEGEN' process.
            </summary>
            <param name="monPlanId">The MON_PLAN_ID of the emissions report.</param>
            <param name="rptPeriodId">The RPT_PERIOD_ID of the emissions report.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_LmeImport(System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'LMEIMPT' process.
            </summary>
            <param name="sORISCode">The ORIS_CODE for the import</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_LmeScreen(System.String,System.Data.DataTable,System.String,System.Int32,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'LMESCRN' process.
            </summary>
            <param name="categoryCd">The category code for which to evaluate.</param>
            <param name="thisTable">The table of data to evaluate.</param>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="rptPeriodId">The RPT_PERIOD_ID of the emissions report.</param>
            <param name="monLocId">The MON_LOC_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_MpImport(System.String,System.Decimal,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'MPIMPRT' process.
            </summary>
            <param name="sORISCode">The ORIS_CODE for the import</param>
            <param name="nSessionID">The SESSION_ID for the import</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_MpReport(System.String,System.DateTime,System.DateTime,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'MP' process.
            </summary>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="evaluationBeganDate">The began date of the evaluation period.</param>
            <param name="evaluationEndedDate">The ended date of the evaluation period.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_MpScreen(System.String,System.Data.DataTable,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'MPSCRN' process.
            </summary>
            <param name="categoryCd">The category code for which to evaluate.</param>
            <param name="thisTable">The table of data to evaluate.</param>
            <param name="monLocId">The MON_LOC_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_QaImport(System.String,System.Decimal,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'QAIMPRT' process.
            </summary>
            <param name="sORISCode">The ORIS_CODE for the import</param>
            <param name="nSessionID">The SESSION_ID for the import</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_QaReport_Qce(System.String,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'OTHERQA' process and 'EVENT' category.
            </summary>
            <param name="qaCertEventId">The QA_CERT_EVENT_ID to evaluate.</param>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_QaReport_Tee(System.String,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'OTHERQA' process and 'TEE' category.
            </summary>
            <param name="testExtensionExemptionId">The TEST_EXTENSION_EXEMPTION_ID to evaluate.</param>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_QaReport_Test(System.String,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'TEST' process.
            </summary>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="testSumId">The TEST_SUM_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_QaScreen_Qce(System.Data.DataTable,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'QASCRN' process and 'SCREVNT' category.
            </summary>
            <param name="thisTable">The table of data to evaluate.</param>
            <param name="qaCertEventId">The QA_CERT_EVENT_ID to evaluate.</param>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="monLocId">The MON_LOC_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_QaScreen_Tee(System.Data.DataTable,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'QASCRN' process and 'SCRTEE' category.
            </summary>
            <param name="thisTable">The table of data to evaluate.</param>
            <param name="testExtensionExemptionId">The TEST_EXTENSION_EXEMPTION_ID to evaluate.</param>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="monLocId">The MON_LOC_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_QaScreen_Test(System.String,System.Data.DataTable,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'QASCRN' process.
            </summary>
            <param name="categoryCd">The category code for which to evaluate.</param>
            <param name="thisTable">The table of data to evaluate.</param>
            <param name="testSumId">The TEST_SUM_ID to evaluate.</param>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="monLocId">The MON_LOC_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_Comment(System.String,System.Data.DataTable,System.String,System.String,ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Runs the evaluation for an 'MPSCRN' process.
            </summary>
            <param name="categoryCd">The category code for which to evaluate.</param>
            <param name="thisTable">The table of data to evaluate.</param>
            <param name="monPlanId">The MON_PLAN_ID to evaluate.</param>
            <param name="monLocId">The MON_LOC_ID to evaluate.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>True if the evaluation completed without processing errors.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_Process(System.String,System.String,System.String,System.String,System.String,System.Object[],ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode,ECMPS.Checks.CheckEngine.Definitions.dAdditionalInitialization)">
            <summary>
            Handles the actual running of the checks.
            </summary>
            <param name="processCd">The process code for which to process.</param>
            <param name="categoryCd">The category code for which to process.</param>
            <param name="processDllName">The name of the process DLL.</param>
            <param name="processNameSpace">The name space of the process.</param>
            <param name="processClassName">The class name of the process.</param>
            <param name="processConstructorArgements">The constructor arguments of the process.</param>
            <param name="runMode">The type of run to perform.</param>
            <param name="additionalInitialization">Delegate for additional initialization that should occur before running checks.</param>
            <returns>Return true if processing is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_Process(System.String,System.String,System.String,System.String,System.String,System.Object[],ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode)">
            <summary>
            Handles the actual running of the checks.
            </summary>
            <param name="processCd">The process code for which to process.</param>
            <param name="categoryCd">The category code for which to process.</param>
            <param name="processDllName">The name of the process DLL.</param>
            <param name="processNameSpace">The name space of the process.</param>
            <param name="processClassName">The class name of the process.</param>
            <param name="processConstructorArgements">The constructor arguments of the process.</param>
            <param name="runMode">The type of run to perform.</param>
            <returns>Return true if processing is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.CheckSessionCompleted(ECMPS.Definitions.SeverityCode.eSeverityCd)">
            <summary>
            Completes a Check Session
            </summary>
            <param name="severityCd">The severity code resulting from processing the check session</param>
            <returns>Returns true if the session was successfully updated.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.CheckSessionFailed(System.String)">
            <summary>
            Fails a Check Session
            </summary>
            <returns>Returns true if the session was successfully updates.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.CheckSessionInit">
            <summary>
            Initializes a Check Session
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.WorkspaceSessionInit">
            <summary>
            Sets WorkspaceSessionId
            </summary>
            <returns>Returns true if the Workspace Session was initialized.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessInit(System.String,System.String,ECMPS.Checks.CheckEngine.Definitions.dAdditionalInitialization)">
            <summary>
            Initializes the running of checks for the given process.
            </summary>
            <param name="processCd">The process code for which to initialize processing.</param>
            <param name="categoryCd">The category code for which to initialize processing.</param>
            <param name="additionalInitialization">Delegate for additional initialization that should occur before running checks.</param>
            <returns>Return true if initialization is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessInit_Connections(System.String,System.String)">
            <summary>
            Opens the ECMPS, ECMPS_AUX and ECMPS_WS database connections and data contexts.
            </summary>
            <param name="processCd">The process code of the checks to run.</param>
            <param name="categoryCd">The category code of the checks to run.</param>
            <returns>Returns true it the connections where opened.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessInit_FacilityInfo">
            <summary>
            Sets Facility and First ECMPS Reporting Period information
            </summary>
            <returns>Return true if processing is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessInit_GetFacilityInfo(ECMPS.Checks.DatabaseAccess.eFacilityLookupType,System.String,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,ECMPS.Checks.TypeUtilities.cReportingPeriod@)">
            <summary>
            Sets Facility and First ECMPS Reporting Period information
            </summary>
            <param name="facilityLookupType">The type of the facility lookup.</param>
            <param name="facilityLookupId">The id to use for the facility lookup.</param>
            <param name="facilityId">The FAC_ID of the facility.</param>
            <param name="firstEcmpsReportingPeriodId">The first reporting period id of the facility.</param>
            <param name="firstEcmpsReportingPeriod">The first reporting period object for the facility.</param>
            <returns>Return true if processing is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessInit_GetFacilityInfo(ECMPS.Checks.DatabaseAccess.eFacilityLookupType,System.String)">
            <summary>
            Sets Facility and First ECMPS Reporting Period information
            </summary>
            <param name="facilityLookupType">The type of the facility lookup.</param>
            <param name="facilityLookupId">The id to use for the facility lookup.</param>
            <returns>Return true if processing is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessInit_ReportingPeriod">
            <summary>
            Sets Reporting Period information
            
            Also resets the evaluation date range if a Reporting Period was found.
            </summary>
            <returns>Return true if processing is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessInit_ResultCatalog">
            <summary>
            Loads the Result Catalog object's data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessFini">
            <summary>
            Uninitializes processing.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_ProcessFini_Connections">
            <summary>
            Uninitializes connections.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.RunChecks_PropertiesClear">
            <summary>
            Clears all properties associated with particular types of runs.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.HandleProcessingError(System.String)">
            <summary>
            Handles processing errors generated during a check session.
            </summary>
            <param name="message">The message to handle.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.AuxConnectionString">
            <summary>
            The ECMPS_AUX database connection string.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.ChecksDllPath">
            <summary>
            The path of the checks DLLs.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.CommandTimeout">
            <summary>
            The command timeout used by CheckEngine SQL commands.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.DataConnectionString">
            <summary>
            The ECMPS database connection string.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.UserId">
            <summary>
            The current user id.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.WorkspaceConnectionString">
            <summary>
            The ECMPS_WS database connection string.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.CategoryCd">
            <summary>
            The current category
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.EvaluationBeganDate">
            <summary>
            the evaluation BEGIN_DATE
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.EvaluationEndedDate">
            <summary>
            the evaluation END_DATE
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.MaximumFutureDate">
            <summary>
            Used to limit this distance of dates in the future.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.MonLocId">
            <summary>
            The current MON_LOC_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.MonPlanId">
            <summary>
            The MON_PLAN_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.QaCertEventId">
            <summary>
            The QA_CERT_EVENT_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.ProcessCd">
            <summary>
            The current process
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.RptPeriodId">
            <summary>
            The current RPT_PERIOD_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.TestExtensionExemptionId">
            <summary>
            TEST_EXTENSION_EXEMPTION_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.TestSumId">
            <summary>
            The TEST_SUM_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.ORISCode">
            <summary>
            The ORIS_CODE (for Import Processes)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.ThisTable">
            <summary>
            ThisTable?
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.CheckEngineErrors">
            <summary>
            The message indicating why a run failed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.ChkSessionId">
            <summary>
            The CHK_SESSION_ID for last evaluation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.FacilityID">
            <summary>
            The FAC_ID
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.FirstEcmpsReportingPeriod">
            <summary>
            The First ECMPS Reporting Period for the facility.
            Null if one does not exist.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.FirstEcmpsReportingPeriodId">
            <summary>
            The First ECMPS Reporting Period Id for the facility.
            Null if one does not exist.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.Process">
            <summary>
            The cProcess object for a Check Engine run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.ReportingPeriod">
            <summary>
            Reporting Period for an evaluation run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.ResultCatalog">
            <summary>
            The cResultCatalog object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.RunMode">
            <summary>
            Indicates the type of check run to perform
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.WorkspaceSessionId">
            <summary>
            The session id used in workspace rows populated by an evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.SeverityCd">
            <summary>
            The SEVERITY_CD as determined by the checks
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.CheckTestMode">
            <summary>
            Determines whether run is for a Direct Check Test
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.DebugMode">
            <summary>
            Is Check Engine running in debug mode?
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.EvalDefaultedBeganDate">
            <summary>
            The defaulted evaluation BEGIN_DATE
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.EvalDefaultedEndedDate">
            <summary>
            The defaulted evaluation END_DATE
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.RptPeriodQuarter">
            <summary>
            The report period quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.RptPeriodYear">
            <summary>
            The report period year.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.DbAuxConnection">
            <summary>
            Connection to the ECMPS_AUX database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.DbAuxContext">
            <summary>
            Data context for the ECMPS_AUX database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.DbDataConnection">
            <summary>
            Connection to ECMPS database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.DbDataContext">
            <summary>
            Data context for the ECMPS database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.DbWsConnection">
            <summary>
            Connection to the ECMPS_WS database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.NowDate">
            <summary>
            Returns the current date, which testing may override.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cCheckEngine.NowDateTime">
            <summary>
            Returns the current time, which testing may override.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.SetNowOffset(System.DateTime)">
            <summary>
            Sets the NowOffset ticks based on the difference between the passed date and the current date.
            </summary>
            <param name="newNowDateTime">The base new date/time to use as a reference in generating NowDateTime</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.FormatError(System.Exception,System.String)">
            <summary>
            Format an exception nicely
            </summary>
            <param name="ex">the exception in question</param>
            <param name="CheckProcedure">the check procedure that threw/caught the exception</param>
            <returns>the nicely formated error message</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckEngine.FormatError(System.Exception)">
            <summary>
            Format an exception nicely
            </summary>
            <param name="ex">the exception in question</param>
            <returns>the nicely formated error message</returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cCheckParametersDefault">
            <summary>
            Implements a check parameter object used by CHET
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckParametersDefault.#ctor(ECMPS.Checks.CheckEngine.cProcess,ECMPS.Checks.DatabaseAccess.cDatabase)">
            <summary>
            Instantiates an instance of cChetProcess
            </summary>
            <param name="AProcess">The parent process object.</param>
            <param name="ADatabaseAux">Connection to the aux database</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cCheckParametersDefault.InstantiateCheckParameterProperties">
            <summary>
            Instantiate the check parameter properties
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cChecks">
            <summary>
            Helper methods for writing a check
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.#ctor">
            <summary>
            Constructors
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum">
            <summary>
            Compare ranges enumeration
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum.EndedBefore">
            <summary>
            ended before
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum.EndedIn">
            <summary>
            ended in
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum.Contains">
            <summary>
            contains
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum.Same">
            <summary>
            same as
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum.Subset">
            <summary>
            subset of
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum.BeganIn">
            <summary>
            began in
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum.BeganAfter">
            <summary>
            began after
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.CompareRangesEnum.RangeError">
            <summary>
            range error
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cChecks.dCheckProcedure">
            <summary>
            Check procedure delegate
            </summary>
            <param name="Category"></param>
            <param name="Log"></param>
            <returns></returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cChecks.CheckProcedures">
            <summary>
            array of check procedures
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetCheckProcedure(System.Int64)">
            <summary>
            GetCheckProcedure
            </summary>
            <param name="ACheckNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetCheckProcedures">
            <summary>
            Returns the list of Check Procedures for the current checks object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.ListContains(System.String,System.String,System.String)">
            <summary>
            ListContains
            </summary>
            <param name="AValue"></param>
            <param name="AList"></param>
            <param name="ADelim"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ActiveDateRange(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ActiveDateRange
            </summary>
            <param name="Category"></param>
            <param name="ActiveParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="EvaluationBeginDateParameterName"></param>
            <param name="EvaluationEndDateParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ActiveDateRange(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ActiveDateRange
            </summary>
            <param name="Category"></param>
            <param name="ActiveParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="EvaluationBeginDateParameterName"></param>
            <param name="EvaluationEndDateParameterName"></param>
            <param name="BeginDateField"></param>
            <param name="EndDateField"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ActiveHourRange(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ActiveHourRange
            </summary>
            <param name="Category"></param>
            <param name="ActiveParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="EvaluationBeginDateParameterName"></param>
            <param name="EvaluationBeginHourParameterName"></param>
            <param name="EvaluationEndDateParameterName"></param>
            <param name="EvaluationEndHourParameterName"></param>
            <param name="BeginDateField"></param>
            <param name="BeginHourField"></param>
            <param name="EndDateField"></param>
            <param name="EndHourField"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ActiveHourRange(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ActiveHourRange
            </summary>
            <param name="Category"></param>
            <param name="ActiveParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="EvaluationBeginDateParameterName"></param>
            <param name="EvaluationBeginHourParameterName"></param>
            <param name="EvaluationEndDateParameterName"></param>
            <param name="EvaluationEndHourParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ConsistentDateRange(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ConsistentDateRange
            </summary>
            <param name="Category"></param>
            <param name="ConsistentParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="StartDateValidParameterName"></param>
            <param name="EndDateValidParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ConsistentDateRange(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ConsistentDateRange
            </summary>
            <param name="Category"></param>
            <param name="ConsistentParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="BeginDateValidParameterName"></param>
            <param name="EndDateValidParameterName"></param>
            <param name="BeginDateFieldName"></param>
            <param name="EndDateFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ConsistentHourRange(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ConsistentHourRange
            </summary>
            <param name="Category"></param>
            <param name="ConsistentParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="BeginDateValidParameterName"></param>
            <param name="BeginHourValidParameterName"></param>
            <param name="EndDateValidParameterName"></param>
            <param name="EndHourValidParameterName"></param>
            <param name="BeginDateFieldName"></param>
            <param name="BeginHourFieldName"></param>
            <param name="EndDateFieldName"></param>
            <param name="EndHourFieldName"></param>
            <param name="EndHourMissingResult"></param>
            <param name="EndDateMissingResult"></param>
            <param name="BadDateRangeResult"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ConsistentHourRange(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ConsistentHourRange
            </summary>
            <param name="Category"></param>
            <param name="ConsistentParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="BeginDateValidParameterName"></param>
            <param name="BeginHourValidParameterName"></param>
            <param name="EndDateValidParameterName"></param>
            <param name="EndHourValidParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidEndDate(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ValidEndDate
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="EndDateFieldName"></param>
            <param name="OutOfRangeResult"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidEndDate(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String)">
            <summary>
            Check_ValidEndDate
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="EndDateFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidEndDate(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String)">
            <summary>
            Check_ValidEndDate
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidEndHour(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ValidEndHour
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="EndHourFieldName"></param>
            <param name="OutOfRangeResult"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidEndHour(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String)">
            <summary>
            Check_ValidEndHour
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidStartDate(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Check_ValidStartDate
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="BeginDateFieldName"></param>
            <param name="MinBeginDateValue"></param>
            <param name="NullResult"></param>
            <param name="OutOfRangeResult"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidStartDate(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ValidStartDate
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="BeginDateFieldName"></param>
            <param name="NullResult"></param>
            <param name="OutOfRangeResult"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidStartDate(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String)">
            <summary>
            Check_ValidStartDate
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="StartDateFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidStartDate(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String)">
            <summary>
            Check_ValidStartDate
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidStartHour(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Check_ValidStartHour
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <param name="BeginDateFieldName"></param>
            <param name="NullResult"></param>
            <param name="OutOfRangeResult"></param>
            <param name="CheckCd"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Check_ValidStartHour(ECMPS.Checks.CheckEngine.cCategory,System.String,System.String)">
            <summary>
            Check_ValidStartHour
            </summary>
            <param name="Category"></param>
            <param name="ValidParameterName"></param>
            <param name="CurrentRecordParameterName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.InRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            InRange
            </summary>
            <param name="Value"></param>
            <param name="Low"></param>
            <param name="High"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.InRange(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            InRange
            </summary>
            <param name="Value"></param>
            <param name="Low"></param>
            <param name="High"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.InRange(System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            InRange
            </summary>
            <param name="ACheckDate"></param>
            <param name="ACheckHour"></param>
            <param name="AGaugeBeganDate"></param>
            <param name="AGaugeBeganHour"></param>
            <param name="AGaugeEndedDate"></param>
            <param name="AGaugeEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.InDateRange(ECMPS.Checks.CheckEngine.cCategory,System.DateTime,System.Int32,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            InDateRange
            </summary>
            <param name="Category"></param>
            <param name="ACheckDate"></param>
            <param name="ACheckHour"></param>
            <param name="AGaugeBeganDate"></param>
            <param name="AGaugeBeganHour"></param>
            <param name="AGaugeEndedDate"></param>
            <param name="AGaugeEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.RangesCompare(System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            RangesCompare
            </summary>
            <param name="ACheckBeganDate"></param>
            <param name="ACheckBeganHour"></param>
            <param name="ACheckEndedDate"></param>
            <param name="ACheckEndedHour"></param>
            <param name="AGaugeBeganDate"></param>
            <param name="AGaugeBeganHour"></param>
            <param name="AGaugeEndedDate"></param>
            <param name="AGaugeEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.RangesIntersect(System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            RangesIntersect
            </summary>
            <param name="ACheckBeganDate"></param>
            <param name="ACheckBeganHour"></param>
            <param name="ACheckEndedDate"></param>
            <param name="ACheckEndedHour"></param>
            <param name="AGaugeBeganDate"></param>
            <param name="AGaugeBeganHour"></param>
            <param name="AGaugeEndedDate"></param>
            <param name="AGaugeEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.RangesIntersect(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            RangesIntersect
            </summary>
            <param name="ACheckBeganDate"></param>
            <param name="ACheckEndedDate"></param>
            <param name="AGaugeBeganDate"></param>
            <param name="AGaugeEndedDate"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetActiveRange(System.Data.DataView,System.DateTime@,System.Int32@,System.DateTime@,System.Int32@)">
            <summary>
            GetActiveRange
            </summary>
            <param name="ADataView"></param>
            <param name="ARangeBeginDate"></param>
            <param name="ARangeBeginHour"></param>
            <param name="ARangeEndDate"></param>
            <param name="ARangeEndHour"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.AddToDataViewFilter(System.String,System.String)">
            <summary>
            AddToDataViewFilter
            </summary>
            <param name="OldFilter"></param>
            <param name="NewFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.AddToDataViewFilter(System.String,System.String,System.Boolean)">
            <summary>
            AddToDataViewFilter
            </summary>
            <param name="OldFilter"></param>
            <param name="NewFilter"></param>
            <param name="Or"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.AddEvaluationDateHourRangeToDataViewFilter(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            AddEvaluationDateHourRangeToDataViewFilter
            </summary>
            <param name="OldFilter"></param>
            <param name="BeginDateField"></param>
            <param name="EndDateField"></param>
            <param name="BeginHourField"></param>
            <param name="EndHourField"></param>
            <param name="EvaluationBeginDate"></param>
            <param name="EvaluationEndDate"></param>
            <param name="EvaluationBeginHour"></param>
            <param name="EvaluationEndHour"></param>
            <param name="All"></param>
            <param name="On"></param>
            <param name="IncludeNullBeginDate"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.AddEvaluationDateHourRangeToDataViewFilter(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            AddEvaluationDateHourRangeToDataViewFilter
            </summary>
            <param name="OldFilter"></param>
            <param name="BeginDateField"></param>
            <param name="EndDateField"></param>
            <param name="BeginHourField"></param>
            <param name="EndHourField"></param>
            <param name="EvaluationBeginDate"></param>
            <param name="EvaluationEndDate"></param>
            <param name="EvaluationBeginHour"></param>
            <param name="EvaluationEndHour"></param>
            <param name="All"></param>
            <param name="On"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.AddEvaluationDateHourRangeToDataViewFilter(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            AddEvaluationDateHourRangeToDataViewFilter
            </summary>
            <param name="OldFilter"></param>
            <param name="EvaluationBeginDate"></param>
            <param name="EvaluationEndDate"></param>
            <param name="EvaluationBeginHour"></param>
            <param name="EvaluationEndHour"></param>
            <param name="All"></param>
            <param name="On"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.AddEvaluationDateHourRangeToDataViewFilter(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            AddEvaluationDateHourRangeToDataViewFilter
            </summary>
            <param name="OldFilter"></param>
            <param name="EvaluationBeginDate"></param>
            <param name="EvaluationEndDate"></param>
            <param name="EvaluationBeginHour"></param>
            <param name="EvaluationEndHour"></param>
            <param name="All"></param>
            <param name="On"></param>
            <param name="IncludeNullBeginDate"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.AddEvaluationDateRangeToDataViewFilter(System.String,System.String,System.String,System.DateTime,System.DateTime,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            AddEvaluationDateRangeToDataViewFilter
            </summary>
            <param name="OldFilter"></param>
            <param name="BeginDateField"></param>
            <param name="EndDateField"></param>
            <param name="EvaluationBeginDate"></param>
            <param name="EvaluationEndDate"></param>
            <param name="All"></param>
            <param name="On"></param>
            <param name="IncludeNullBeginDate"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.AddEvaluationDateRangeToDataViewFilter(System.String,System.DateTime,System.DateTime,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            AddEvaluationDateRangeToDataViewFilter
            </summary>
            <param name="OldFilter"></param>
            <param name="EvaluationBeginDate"></param>
            <param name="EvaluationEndDate"></param>
            <param name="All"></param>
            <param name="On"></param>
            <param name="IncludeNullBeginDate"></param>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare">
            <summary>
            FilterPair Compare enumeration
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.Equals">
            <summary>
            equals
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.BeginsWith">
            <summary>
            begins with
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.Contains">
            <summary>
            contains
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.EndsWith">
            <summary>
            ends with
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.InList">
            <summary>
            in the list
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.LessThan">
            <summary>
            less than
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.LessThanOrEqual">
            <summary>
            less than or equal to
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.GreaterThanOrEqual">
            <summary>
            greather than or equal to
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairCompare.GreaterThan">
            <summary>
            greater than
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare">
            <summary>
            FilterPair string compare enumeration
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare.Equals">
            <summary>
            equals
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare.BeginsWith">
            <summary>
            begins with
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare.Contains">
            <summary>
            contains
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare.EndsWith">
            <summary>
            ends with
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare.InList">
            <summary>
            in the list
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cChecks.eFilterPairRelativeCompare">
            <summary>
            FilterPair relative compare enumeration
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairRelativeCompare.Equals">
            <summary>
            equals
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairRelativeCompare.LessThan">
            <summary>
            less than
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairRelativeCompare.LessThanOrEqual">
            <summary>
            less than or equal to
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairRelativeCompare.GreaterThanOrEqual">
            <summary>
            greater than or equal to
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.eFilterPairRelativeCompare.GreaterThan">
            <summary>
            greater than
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cChecks.sFilterPair">
            <summary>
            Filter pair structure
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Field">
            <summary>
            Field
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.DataType">
            <summary>
            date type
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Value">
            <summary>
            value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Compare">
            <summary>
            compare
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Not">
            <summary>
            not or not
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.SubstrPos">
            <summary>
            substring position
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.SubstrLen">
            <summary>
            substring length
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.String)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.String,System.Boolean)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ANot"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ASubstrPos"></param>
            <param name="ASubstrLen"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ANot"></param>
            <param name="ASubstrPos"></param>
            <param name="ASubstrLen"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ACompare"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare,System.Boolean)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ACompare"></param>
            <param name="ANot"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare,System.Int32,System.Int32)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ACompare"></param>
            <param name="ASubstrPos"></param>
            <param name="ASubstrLen"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.eFilterPairStringCompare,System.Boolean,System.Int32,System.Int32)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ACompare"></param>
            <param name="ANot"></param>
            <param name="ASubstrPos"></param>
            <param name="ASubstrLen"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.Object,ECMPS.Checks.TypeUtilities.eFilterDataType)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ADataType"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.Object,ECMPS.Checks.TypeUtilities.eFilterDataType,ECMPS.Checks.CheckEngine.cChecks.eFilterPairRelativeCompare)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ADataType"></param>
            <param name="ACompare"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.Object,ECMPS.Checks.TypeUtilities.eFilterDataType,ECMPS.Checks.CheckEngine.cChecks.eFilterPairRelativeCompare,System.Boolean)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ADataType"></param>
            <param name="ACompare"></param>
            <param name="ANot"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.Set(System.String,System.Object,ECMPS.Checks.TypeUtilities.eFilterDataType,System.Boolean)">
            <summary>
            set
            </summary>
            <param name="AField"></param>
            <param name="AValue"></param>
            <param name="ADataType"></param>
            <param name="ANot"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.sFilterPair.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountRows(System.Data.DataView,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[],System.Boolean)">
            <summary>
            CountRows
            </summary>
            <param name="ASourceView"></param>
            <param name="AFilterPairs"></param>
            <param name="ANotFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountRows(System.Data.DataView,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountRows
            </summary>
            <param name="AView"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="ANotFilter"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime)">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="ANotFilter"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ANotFilter"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[][])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterList"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CountActiveRows(System.Data.DataView,System.DateTime,System.DateTime,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[][])">
            <summary>
            CountActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="AFilterList"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindRow(System.Data.DataView,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[],System.Data.DataRowView@)">
            <summary>
            FindRow
            </summary>
            <param name="ASourceView"></param>
            <param name="AFilterPairs"></param>
            <param name="AFilterRow"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindRow(System.Data.DataView,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindRow
            </summary>
            <param name="ASourceView"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindRows(System.Data.DataView,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[],System.Boolean)">
            <summary>
            FindRows
            </summary>
            <param name="ASourceView"></param>
            <param name="AFilterPairs"></param>
            <param name="ANotFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindRows(System.Data.DataView,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindRows
            </summary>
            <param name="ASourceView"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            FindRows
            </summary>
            <param name="ASourceView"></param>
            <param name="EvaluationBeganDate"></param>
            <param name="EvaluationEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.Int32,System.DateTime,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="ABeganMin"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="AEndedMin"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="ABeganMinField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="AEndedMinField"></param>
            <param name="ANotFilter"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.Int32,System.DateTime,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="ABeganMin"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="AEndedMin"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="ABeganMinField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="AEndedMinField"></param>        
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.Int32,System.DateTime,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="ABeganMin"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="AEndedMin"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="ABeganMinField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="AEndedMinField"></param>        
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>        
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="ABeganDateField"></param>
            <param name="ABeganHourField"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="ANotFilter"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime)">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="ANotFilter"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ANotFilter"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="AFilter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[][])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="ABeganDateField"></param>
            <param name="AEndedDateField"></param>
            <param name="ABeganDateInclusive"></param>
            <param name="AEndedDateInclusive"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterList"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindActiveRows(System.Data.DataView,System.DateTime,System.DateTime,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[][])">
            <summary>
            FindActiveRows
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
            <param name="AFilterList"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindMostRecentRow(System.Data.DataView,System.DateTime,System.Int32,System.String,System.String,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindMostRecentRow
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindMostRecentRow(System.Data.DataView,System.DateTime,System.Int32,System.String,System.String,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindMostRecentRow
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDateField"></param>
            <param name="AEndedHourField"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindMostRecentRow(System.Data.DataView,System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindMostRecentRow
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="ANotFilter"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.FindMostRecentRow(System.Data.DataView,System.DateTime,System.Int32,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            FindMostRecentRow
            </summary>
            <param name="ASourceView"></param>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AFilterPairs"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.DuplicateRecordCheck(System.Data.DataRowView,System.Data.DataView,System.String,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Duplicate Record Check: 
            Filtering on the IDFieldName is not necessary. This procedure will ensure that the row in question is not erroneously flagged as a duplicate
            </summary>
            <param name="currentRecord">The current record</param>
            <param name="allRecords">The DataView to check for duplicates in</param>
            <param name="idColumnName">The name of the current records _ID field</param>
            <param name="condition">The criteria to use to determine a duplicate</param>
            <returns>true if a duplicate is found, false otherwise</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.DuplicateRecordCheck(System.Data.DataRowView,System.Data.DataView,System.String,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            Duplicate Record Check: 
            Filtering on the IDFieldName is not necessary. This procedure will ensure that the row in question is not erroneously flagged as a duplicate
            </summary>
            <param name="CurrentRecord">The current record</param>
            <param name="dvRecords2Check">The DataView to check for duplicates in</param>
            <param name="IDFieldName">The name of the current records _ID field</param>
            <param name="criteria">The criteria to use to determine a duplicate</param>
            <returns>true if a duplicate is found, false otherwise</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.DuplicateRecordCheck(System.Data.DataRowView,System.Data.DataView,System.String,ECMPS.Checks.CheckEngine.cChecks.sFilterPair[],ECMPS.Checks.CheckEngine.cChecks.sFilterPair[])">
            <summary>
            Duplicate Record Check: 
            Filtering on the IDFieldName is not necessary. This procedure will ensure that the row in question is not erroneously flagged as a duplicate
            </summary>
            <param name="CurrentRecord">The current record</param>
            <param name="dvRecords2Check">The DataView to check for duplicates in</param>
            <param name="IDFieldName">The name of the current records _ID field</param>
            <param name="criteria1">The 1st criteria to use to determine a duplicate</param>
            <param name="criteria2">The 2nd criteria to use to determine a duplicate</param>
            <returns>true if a duplicate is found, false otherwise</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDuplicateRecords(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.DateTime)">
            <summary>
            Check to see if duplicate/overlapping records exist for the date range - returns false if duplicates exist, true if no duplicates
            </summary>
            <param name="Category">the cCatagory object</param>
            <param name="dv">a DataView to check</param>
            <param name="BeginDate">The begin_date</param>
            <param name="EndDate">The ehd_date</param>
            <returns>FALSE if duplicate records exist, TRUE if no duplicates/overlapping records exist</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDuplicateRecords(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            Check to see if duplicate/overlapping records exist for the date range - returns false if duplicates exist, true if no duplicates
            </summary>
            <param name="Category">the cCatagory object</param>
            <param name="dv">a DataView to check</param>
            <param name="BeginDate">The begin_date</param>
            <param name="EndDate">The end_date</param>
            <param name="BeginHour">The begin_hour</param>
            <param name="EndHour">The end_hour</param>
            <returns>FALSE if duplicate records exist, TRUE if no duplicates/overlapping records exist</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.String,System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            CheckForHourRangeCovered
            </summary>
            <param name="Category"></param>
            <param name="View"></param>
            <param name="FieldBeganDateHour"></param>
            <param name="FieldEndedDateHour"></param>
            <param name="RangeBeganDateHour"></param>
            <param name="RangeEndedDateHour"></param>
            <param name="RangeCount"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            CheckForHourRangeCovered
            </summary>
            <param name="Category"></param>
            <param name="View"></param>
            <param name="FieldBeganDateHour"></param>
            <param name="FieldEndedDateHour"></param>
            <param name="RangeBeganDateHour"></param>
            <param name="RangeEndedDateHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            CheckForHourRangeCovered
            </summary>
            <param name="Category"></param>
            <param name="View"></param>
            <param name="RangeBeganDateHour"></param>
            <param name="RangeEndedDateHour"></param>
            <param name="RangeCount"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.DateTime)">
            <summary>
            CheckForHourRangeCovered
            </summary>
            <param name="Category"></param>
            <param name="View"></param>
            <param name="RangeBeganDateHour"></param>
            <param name="RangeEndedDateHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForRangeCoveredUnitStackConfig(System.String,System.Data.DataView,System.Data.DataView,System.DateTime,System.DateTime,System.Data.DataView@)">
            <summary>
            Special method for checking records against UnitStackConfiguration records
            </summary>
            <param name="unitMonLocId"></param>
            <param name="genericView">The set of records to check for coverage</param> 
            <param name="uscView">The configuration that needs to be covered</param> 
            <param name="StartDate">The begin date of the range to check</param> 
            <param name="EndDate">The end date of the range to check</param> 
            <param name="resultView">Resulting view</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32@)">
            <summary>
            CheckForHourRangeCovered
            </summary>
            <param name="Category"></param>
            <param name="View"></param>
            <param name="FieldBeganDate"></param>
            <param name="FieldBeganHour"></param>
            <param name="FieldEndedDate"></param>
            <param name="FieldEndedHour"></param>
            <param name="RangeBeganDate"></param>
            <param name="RangeBeganHour"></param>
            <param name="RangeEndedDate"></param>
            <param name="RangeEndedHour"></param>
            <param name="RangeCount"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(System.Data.DataView,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32@)">
            <summary>
            CheckForHourRangeCovered; no category required
            </summary>
            <param name="View"></param>
            <param name="FieldBeganDate"></param>
            <param name="FieldBeganHour"></param>
            <param name="FieldEndedDate"></param>
            <param name="FieldEndedHour"></param>
            <param name="RangeBeganDate"></param>
            <param name="RangeBeganHour"></param>
            <param name="RangeEndedDate"></param>
            <param name="RangeEndedHour"></param>
            <param name="RangeCount"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            CheckForHourRangeCovered
            </summary>
            <param name="Category"></param>
            <param name="View"></param>
            <param name="FieldBeganDate"></param>
            <param name="FieldBeganHour"></param>
            <param name="FieldEndedDate"></param>
            <param name="FieldEndedHour"></param>
            <param name="RangeBeganDate"></param>
            <param name="RangeBeganHour"></param>
            <param name="RangeEndedDate"></param>
            <param name="RangeEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Int32@)">
            <summary>
            CheckForHourRangeCovered
            </summary>
            <param name="Category"></param>
            <param name="View"></param>
            <param name="RangeBeganDate"></param>
            <param name="RangeBeganHour"></param>
            <param name="RangeEndedDate"></param>
            <param name="RangeEndedHour"></param>
            <param name="RangeCount"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            CheckForHourRangeCovered
            </summary>
            <param name="Category"></param>
            <param name="View"></param>
            <param name="RangeBeganDate"></param>
            <param name="RangeBeganHour"></param>
            <param name="RangeEndedDate"></param>
            <param name="RangeEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForHourRangeCovered(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            CheckForHourRangeCovered; no category required
            </summary>
            <param name="View"></param>
            <param name="RangeBeganDate"></param>
            <param name="RangeBeganHour"></param>
            <param name="RangeEndedDate"></param>
            <param name="RangeEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.String,System.DateTime,System.DateTime,System.Boolean,System.Int32@)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View">The view to process</param>
            <param name="FieldBeganDate">The name of the BEGIN_DATE field</param>
            <param name="FieldEndedDate">The name of the END_DATE field</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <param name="AllowBeginDateNull">Are null BEGIN_DATEs allowed or not</param>
            <param name="RangeCount">the range count?</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(System.Data.DataView,System.String,System.String,System.DateTime,System.DateTime,System.Boolean,System.Int32@)">
            <summary>
            Check to see if the date range is covered by the view(s), no Category required
            </summary>
            <param name="View">The view to process</param>
            <param name="FieldBeganDate">The name of the BEGIN_DATE field</param>
            <param name="FieldEndedDate">The name of the END_DATE field</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <param name="AllowBeginDateNull">Are null BEGIN_DATEs allowed or not</param>
            <param name="RangeCount">the range count?</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.Data.DataView,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Boolean,System.Int32@)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View1">The first view to process</param>
            <param name="View2">The second view to process</param>
            <param name="View1BeganDate">View1's BEGIN_DATE field name</param>
            <param name="View1EndedDate">View1's END_DATE field name</param>
            <param name="View2BeganDate">View2's BEGIN_DATE field name</param>
            <param name="View2EndedDate">View2's END_DATE field name</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <param name="AllowBeginDateNull">Are null BEGIN_DATEs allowed or not</param>
            <param name="RangeCount">the range count?</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.DateTime,System.Boolean,System.Int32@)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View">The view to process</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <param name="AllowBeginDateNull">Are null BEGIN_DATEs allowed or not</param>
            <param name="RangeCount">the range count?</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.String,System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View">The view to process</param>
            <param name="FieldBeganDate">The name of the BEGIN_DATE field</param>
            <param name="FieldEndedDate">The name of the END_DATE field</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <param name="RangeCount">the range count?</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View">The view to process</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <param name="RangeCount">the range count?</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View">The view to process</param>
            <param name="FieldBeganDate">The name of the BEGIN_DATE field</param>
            <param name="FieldEndedDate">The name of the END_DATE field</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View">The view to process</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <param name="AllowBeginDateNull">Are null BEGIN_DATEs allowed or not</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime,System.DateTime)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View">The view to process</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(System.Data.DataView,System.DateTime,System.DateTime)">
            <summary>
            Check to see if the date range is covered by the view(s), no Category required
            </summary>
            <param name="View">The view to process</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckForDateRangeCovered(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.Data.DataView,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Check to see if the date range is covered by the view(s)
            </summary>
            <param name="Category">The category</param>
            <param name="View1">The first view to process</param>
            <param name="View2">The second view to process</param>
            <param name="RangeBeganDate">The BEGIN_DATE</param>
            <param name="RangeEndedDate">The END_DATE</param>
            <param name="AllowBeginDateNull">Are null BEGIN_DATEs allowed or not</param>
            <returns>true if covered, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckEndDateForRetrievedRecords(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.DateTime)">
            <summary>
            Check that the END_DATE for the retrieved records are all NOT NULL and latest is after the Evaluation End Date
            </summary>
            <param name="Category">The category</param>
            <param name="dvView">The retrieved records</param>
            <param name="EvalEndDate">The Evaluation End Date</param>
            <returns>true if all END_DATE records are NOT NULL and latest is after the Evaluation End Date</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckEndDateForRetrievedRecords(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.DateTime)">
            <summary>
            Check that the END_DATE for the retrieved records are all NOT NULL and latest is after the Evaluation End Date
            </summary>
            <param name="Category">The category</param>
            <param name="dvView">The retrieved records</param>
            <param name="EndDateFieldName">The name of the END_DATE field in dvView</param>
            <param name="EvalEndDate">The Evaluation End Date</param>
            <returns>true if all END_DATE records are NOT NULL and latest is not after the Evaluation End Date</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.CheckEndQuarterForRetrievedRecords(ECMPS.Checks.CheckEngine.cCategory,System.Data.DataView,System.String,System.DateTime)">
            <summary>
            Check that the END_DATE for the retrieved records are all NOT NULL and 
            the quarter of the latest is after the quarter of the Evaluation End Date
            </summary>
            <param name="Category">The category</param>
            <param name="dvView">The retrieved records</param>
            <param name="EndDateFieldName">The name of the END_DATE field in dvView</param>
            <param name="EvalEndDate">The Evaluation End Date</param>
            <returns>true if all END_DATE records are NOT NULL and the quarter of the latest 
            is not after the quarter of the Evaluation End Date</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.ColumnToDatalist(System.Data.DataView,System.String)">
            <summary>
            ColumnToDatalist
            </summary>
            <param name="ADataView"></param>
            <param name="AColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.ColumnToDatalist(System.Data.DataView,System.String,System.Boolean)">
            <summary>
            ColumnToDatalist
            </summary>
            <param name="ADataView"></param>
            <param name="AColumnName"></param>
            <param name="AllowDuplicates"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.ColumnToDatalist(System.Data.DataView,System.String,System.String)">
            <summary>
            ColumnToDatalist
            </summary>
            <param name="ADataView"></param>
            <param name="AColumnName1"></param>
            <param name="AColumnName2"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.ColumnToDatalist(System.Data.DataView,System.String,System.String,System.Boolean)">
            <summary>
            ColumnToDatalist
            </summary>
            <param name="ADataView"></param>
            <param name="AColumnName1"></param>
            <param name="AColumnName2"></param>
            <param name="AllowDuplicates"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.ColumnToDatalist(System.Data.DataView,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            ColumnToDatalist
            </summary>
            <param name="dvDataView">the dataview to get data out of</param>
            <param name="sColumnName1">the name of column 1</param>
            <param name="sColumnType1">"string", "int", and "decimal" currently supported</param>
            <param name="sColumnName2">the name of column 2</param>
            <param name="sColumnType2">"string", "int", and "decimal" currently supported</param>
            <param name="AllowDuplicates">are duplicates allowed in the list</param>
            <returns>the list, or an empty string if no list generated</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.ColumnToDatalist(System.Data.DataView,System.String[])">
            <summary>
            ColumnToDatalist
            </summary>
            <param name="ADataView"></param>
            <param name="ColumnNames"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.DateHour_GetEarlier(System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime@,System.Int32@)">
            <summary>
            DateHour_GetEarlier
            </summary>
            <param name="ADateOne"></param>
            <param name="AHourOne"></param>
            <param name="ADateTwo"></param>
            <param name="AHourTwo"></param>
            <param name="ADateOut"></param>
            <param name="AHourOut"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.DateHour_GetLater(System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime@,System.Int32@)">
            <summary>
            DateHour_GetLater
            </summary>
            <param name="ADateOne"></param>
            <param name="AHourOne"></param>
            <param name="ADateTwo"></param>
            <param name="AHourTwo"></param>
            <param name="ADateOut"></param>
            <param name="AHourOut"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetRangeList(System.DateTime,System.DateTime,ECMPS.Checks.TypeUtilities.cDateTimeList)">
            <summary>
            Returns a list of date ranges using the date/hour list to 
            determine begin and end date test values for inner ranges that fall within an outer range. 
            This is a helper method that can be used for determining date ranges that define the edges of Monitoring Plan changes.
            </summary>
            <param name="StartDate">Start date of Outer Range to test against</param>
            <param name="EndDate">End date of Outer Range to test against</param>
            <param name="dateTimeList">List of dates used to define inner ranges.</param>
            <returns>Returns list of distinct date/hour test ranges.</returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cChecks.dGetDataKey">
            <summary>
            Delegate to get data key
            </summary>
            <param name="ARow"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetRangeIntersection(System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime@,System.Int32@,System.DateTime@,System.Int32@)">
            <summary>
            GetRangeIntersection
            </summary>
            <param name="AOneBeganDate"></param>
            <param name="AOneBeganHour"></param>
            <param name="AOneEndedDate"></param>
            <param name="AOneEndedHour"></param>
            <param name="ATwoBeganDate"></param>
            <param name="ATwoBeganHour"></param>
            <param name="ATwoEndedDate"></param>
            <param name="ATwoEndedHour"></param>
            <param name="AIntBeganDate"></param>
            <param name="AIntBeganHour"></param>
            <param name="AIntEndedDate"></param>
            <param name="AIntEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetHourRangeIntersections(System.Data.DataView,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            GetHourRangeIntersections
            </summary>
            <param name="ADataView"></param>
            <param name="ABeganDateName"></param>
            <param name="ABeganHourName"></param>
            <param name="AEndedDateName"></param>
            <param name="AEndedHourName"></param>
            <param name="AEvalBeganDate"></param>
            <param name="AEvalBeganHour"></param>
            <param name="AEvalEndedDate"></param>
            <param name="AEvalEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetHourRangeIntersections(System.Data.DataView,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            GetHourRangeIntersections
            </summary>
            <param name="ADataView"></param>
            <param name="AEvalBeganDate"></param>
            <param name="AEvalBeganHour"></param>
            <param name="AEvalEndedDate"></param>
            <param name="AEvalEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetHourRangeIntersections(System.Data.DataView,System.String,System.String,System.String,System.String)">
            <summary>
            GetHourRangeIntersections
            </summary>
            <param name="ADataView"></param>
            <param name="ABeganDateName"></param>
            <param name="ABeganHourName"></param>
            <param name="AEndedDateName"></param>
            <param name="AEndedHourName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.GetHourRangeIntersections(System.Data.DataView)">
            <summary>
            GetHourRangeIntersections
            </summary>
            <param name="ADataView"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.IsRangeIntersection(System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            IsRangeIntersection
            </summary>
            <param name="AOneBeganDate"></param>
            <param name="AOneBeganHour"></param>
            <param name="AOneEndedDate"></param>
            <param name="AOneEndedHour"></param>
            <param name="ATwoBeganDate"></param>
            <param name="ATwoBeganHour"></param>
            <param name="ATwoEndedDate"></param>
            <param name="ATwoEndedHour"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.IsRangeIntersection(System.Data.DataView,ECMPS.Checks.CheckEngine.cChecks.dGetDataKey,System.String,System.String,System.String,System.String)">
            <summary>
            IsRangeIntersection
            </summary>
            <param name="ADataView"></param>
            <param name="ADataKey"></param>
            <param name="ABeganDateName"></param>
            <param name="ABeganHourName"></param>
            <param name="AEndedDateName"></param>
            <param name="AEndedHourName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.IsRangeIntersection(System.Data.DataView,ECMPS.Checks.CheckEngine.cChecks.dGetDataKey)">
            <summary>
            IsRangeIntersection
            </summary>
            <param name="ADataView"></param>
            <param name="ADataKey"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.IsRangeIntersection(System.Data.DataView,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            IsRangeIntersection
            </summary>
            <param name="ADataView"></param>
            <param name="AKeyField"></param>
            <param name="ABeganDateName"></param>
            <param name="ABeganHourName"></param>
            <param name="AEndedDateName"></param>
            <param name="AEndedHourName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.IsRangeIntersection(System.Data.DataView,System.String)">
            <summary>
            IsRangeIntersection
            </summary>
            <param name="ADataView"></param>
            <param name="AKeyField"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.LookupCodeExists(System.String,System.Data.DataView)">
            <summary>
            Does a lookup code value exist in the given DataView
            </summary>
            <param name="LookupCode">The lookup code in question</param>
            <param name="LookupCodes">The view containing lookup codes</param>
            <returns>true if found, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.LookupCodeExists(System.String,System.String,System.Data.DataView)">
            <summary>
            Does a lookup code value exist in the given DataView
            </summary>
            <param name="LookupCode">The lookup code in question</param>
            <param name="LookupCodeField">The name of the lookup column in the view</param>
            <param name="LookupCodes">The view containing lookup codes</param>
            <returns>true if found, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.LookupCodeValue(System.String,System.String,System.Data.DataView,System.String,System.String@)">
            <summary>
            Does a lookup code value exist in the given DataView
            </summary>
            <param name="LookupCodeField">The name of the lookup code column in the view</param>
            <param name="LookupValueField">The name of the lookup value column in the view</param>
            <param name="LookupCodes">The view containing lookup codes</param>
            <param name="LookupCode">The lookup code in question</param>
            <param name="LookupValue">The lookup value selected</param>
            <returns>true if found, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Compare(System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Compare
            </summary>
            <param name="AValue1"></param>
            <param name="AValue2"></param>
            <param name="ADecimals"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cChecks.Compare(System.Decimal,System.Decimal,System.Int32,System.Decimal)">
            <summary>
            Compare
            </summary>
            <param name="AValue1"></param>
            <param name="AValue2"></param>
            <param name="ADecimals"></param>
            <param name="ATolerance"></param>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.Definitions.cExtensions">
            <summary>
            Extensions used by/in check engine (new for .net 3.5)
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.BlocksSubmission(ECMPS.Definitions.SeverityCode.eSeverityCd)">
            <summary>
            Returns whether the passed Severity Code will block submissions
            </summary>
            <param name="ASeverityCd">The severity code</param>
            <returns>true if the severity code blocks submission, otherwise false</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetSeverityDescription(ECMPS.Definitions.SeverityCode.eSeverityCd,System.String)">
            <summary>
            Returns the Severity Description associated with the passed Severity Code.
            </summary>
            <param name="ASeverityCd">The severity code for which a discription is returned.</param>
            <param name="ADefault">The default description to use if the passed severity code is not known.</param>
            <returns>The description associated with the passed severity code.</returns>        
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetSeverityDescription(ECMPS.Definitions.SeverityCode.eSeverityCd)">
            <summary>
            Get the severity code's description
            </summary>
            <param name="SeverityCd">The severity code for which a discription is returned.</param>
            <returns>The description associated with the passed severity code.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetSeverityLevel(ECMPS.Definitions.SeverityCode.eSeverityCd,System.Int32)">
            <summary>
            Returns the Severity level associated with the passed SEVERITY_CD.
            </summary>
            <param name="ASeverityCd">The severity code for which a level is returned.</param>
            <param name="ADefault">The default level to use if the passed severity code is not known.</param>
            <returns>The level associated with the passed severity code.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetSeverityLevel(ECMPS.Definitions.SeverityCode.eSeverityCd)">
            <summary>
            Returns the Severity level associated with the passed SEVERITY_CD.
            </summary>
            <param name="SeverityCd">The severity code for which a level is returned.</param>
            <returns>The level associated with the passed severity code.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetSeverityRow(System.String)">
            <summary>
            Get the row in the severity code table for the severity code passed in
            </summary>
            <param name="ASeverityCd">the SEVERITY_CD in question</param>
            <returns>the DataRowView for the SEVERITY_CD</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.CheckSeverityDatabase(System.String,System.String,System.String)">
            <summary>
            Initicalized the cDatabase connection string needed for Severity info if it is null.
            </summary>
            <param name="dataConnectionString">The ECMPS database connection string.</param>
            <param name="auxConnectionString">The ECMPS_AUX database connection string.</param>
            <param name="workspaceConnectionString">The ECMPS_WS database connection string.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.LoadSeverityCode">
            <summary>
            Load the severity code table, _dvSeverityCode, if successful
            </summary>
            <returns>true if successful, false if an error</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.ToSeverityCd(System.String)">
            <summary>
            Converts the SeverityCode string value to a SEVERITY_CD enumeration value
            </summary>
            <param name="SeverityCode">The severity code string value to covert</param>
            <returns>The SEVERITY_CD enumeration value for the string passed in</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.FormatError(System.Exception)">
            <summary>
            Format an exception nicely
            </summary>
            <param name="ex">the exception in question</param>
            <returns>the nicely formated error message</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.FormatError(System.String)">
            <summary>
            Format an exception nicely
            </summary>
            <param name="errorMessage">the error message</param>
            <returns>the nicely formated error message</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.FormatMethodFrameInfo(System.Diagnostics.StackFrame)">
            <summary>
            Format the StackFrame information for a method.
            </summary>
            <param name="stackFrame">The stack frame for a method.</param>
            <returns>The formated stack frame.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetCallingMethod(System.Int32)">
            <summary>
            Returns the calling method class and name.
            </summary>
            <param name="depth">The depth from the parent.  1 for direct caller</param>
            <returns>Returns the class name and method name of the indicated caller.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetCallingMethod">
            <summary>
            Returns the calling method class and name.
            </summary>
            <returns>Returns the class name and method name calling method.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetCallingTrace(System.Int32)">
            <summary>
            Returns the stack trace to the calling method.
            </summary>
            <param name="depth">The depth from the parent.  1 for direct caller</param>
            <returns>Returns the class name and method name of the indicated caller.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.Definitions.cExtensions.GetCallingTrace">
            <summary>
            Returns the stack trace to the calling method.
            </summary>
            <returns>Returns the class name and method name calling method.</returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.Definitions.dAdditionalInitialization">
            <summary>
            Delegate used in Check Engine Run states to pass method to perform additional initialization
            specific to a particular process.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode">
            <summary>
            Indicates the type of check run to perform
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode.Normal">
            <summary>
            Run checks evaluation
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode.Debug">
            <summary>
            Run checks evaluation in debug mode
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.Definitions.eCheckEngineRunMode.CheckTestInit">
            <summary>
            Run a direct check test initialization
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cHourRange">
            <summary>
            Summary description for HourRangeCollection.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRange.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRange.#ctor(System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cHourRange.BeganDate">
            <summary>
            Began date
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cHourRange.BeganDateHour">
            <summary>
            The Began Date and Hour
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cHourRange.BeganHour">
            <summary>
            Began hour
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cHourRange.EndedDate">
            <summary>
            ended date
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cHourRange.EndedDateHour">
            <summary>
            The Ended Date and Hour
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cHourRange.EndedHour">
            <summary>
            ended hour
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRange.DisplayRange">
            <summary>
            DisplayRange
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cHourRangeCollection">
            <summary>
            Collection of HourRange objects
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.Item(System.Int32)">
            <summary>
            Item
            </summary>
            <param name="AIndex"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.Add(ECMPS.Checks.CheckEngine.cHourRange)">
            <summary>
            Add
            </summary>
            <param name="AHourRange"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.Add(System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Add
            </summary>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.Add(System.DateTime,System.DateTime)">
            <summary>
            Add
            </summary>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.Union">
            <summary>
            Union
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.Union(System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Union
            </summary>
            <param name="ABeganDate"></param>
            <param name="ABeganHour"></param>
            <param name="AEndedDate"></param>
            <param name="AEndedHour"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.Union(System.DateTime,System.DateTime)">
            <summary>
            Union
            </summary>
            <param name="ABeganDate"></param>
            <param name="AEndedDate"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cHourRangeCollection.Sort">
            <summary>
            Performs an insertion sort on the collection, comparing the begin hours and then the end hours if the begin hours are equal.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cLegacyCheckParameter">
            <summary>
            Legacy CheckParameter class
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ParameterName">
            <summary>
            parameter name
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ParameterValue">
            <summary>
            parameter value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ParameterMissing">
            <summary>
            is parameter missing
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ParameterType">
            <summary>
            parameter type
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.InitRuleCheck">
            <summary>
            InitRuleCheck
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.IsAccumulator">
            <summary>
            is an accumulator
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.IsArray">
            <summary>
            is an array
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.#ctor(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType)">
            <summary>
            Constructor
            </summary>
            <param name="ThisParameterName"></param>
            <param name="ThisParameterValue"></param>
            <param name="ThisParameterType"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.#ctor(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="ThisParameterName"></param>
            <param name="ThisParameterValue"></param>
            <param name="ThisParameterType"></param>
            <param name="ThisIsAccumulator"></param>
            <param name="ThisIsArray"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.#ctor(ECMPS.Checks.Parameters.cParameterizedCheck)">
            <summary>
            Constructor
            </summary>
            <param name="AInitRuleCheck"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.#ctor(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cParameterizedCheck)">
            <summary>
            Constructor
            </summary>
            <param name="ThisParameterName"></param>
            <param name="ThisParameterValue"></param>
            <param name="ThisParameterType"></param>
            <param name="AInitRuleCheck"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.#ctor(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cParameterizedCheck,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="ThisParameterName"></param>
            <param name="ThisParameterValue"></param>
            <param name="ThisParameterType"></param>
            <param name="AInitRuleCheck"></param>
            <param name="ThisIsAccumulator"></param>
            <param name="ThisIsArray"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsBool(System.Boolean)">
            <summary>
            ValueAsBool
            </summary>
            <param name="ADefault"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsBool">
            <summary>
            ValueAsBool
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsBoolArray">
            <summary>
            ValueAsBoolArray
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsDataRowView">
            <summary>
            ValueAsDataRowView
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsDataView">
            <summary>
            ValueAsDataView
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsDateTime(ECMPS.Checks.TypeUtilities.DateTypes)">
            <summary>
            ValueAsDateTime
            </summary>
            <param name="ADateType"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsDecimal(System.Decimal)">
            <summary>
            ValueAsDecimal
            </summary>
            <param name="ADefault"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsDecimal">
            <summary>
            ValueAsDecimal
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsDecimalArray">
            <summary>
            ValueAsDecimalArray
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsInt(System.Int32)">
            <summary>
            ValueAsInt
            </summary>
            <param name="ADefault"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsInt">
            <summary>
            ValueAsInt
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsIntArray">
            <summary>
            ValueAsIntArray
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsNullOrDecimal">
            <summary>
            ValueAsNullOrDecimal
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsNullOrInt">
            <summary>
            ValueAsNullOrInt
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsString">
            <summary>
            ValueAsString
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsString(System.String)">
            <summary>
            ValueAsString
            </summary>
            <param name="FieldName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.ValueAsStringArray">
            <summary>
            ValueAsStringArray
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameter.SameUnderlyingInitCheck(ECMPS.Checks.Parameters.cParameterizedCheck)">
            <summary>
            SameUnderlyingInitCheck
            </summary>
            <param name="ARuleCheck"></param>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions">
            <summary>
            Extensions needed for Legacy Check Parameters
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsBeginDateTime(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullabe type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsBoolean(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullabe type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsBoolean(ECMPS.Checks.CheckEngine.cLegacyCheckParameter,System.Boolean)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <param name="defaultValue">The default value for null and unconvertable values.</param>
            <returns>The value converted to the type</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsDataRowView(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert an object to a Data Row View.
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>The data row view or null if the value connot be converted.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsDataView(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert an object to a Data View.
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>The data view or null if the value connot be converted.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsDateTime(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullabe type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsDateTime(ECMPS.Checks.CheckEngine.cLegacyCheckParameter,System.DateTime)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <param name="defaultValue">The default value.</param>
            <returns>Nullabe type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsDecimal(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullabe type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsDecimal(ECMPS.Checks.CheckEngine.cLegacyCheckParameter,System.Decimal)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <param name="defaultValue">The default value for null and unconvertable values.</param>
            <returns>The value converted to the type</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsEndDateTime(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullible type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsHour(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert the database date value to a nullable System.DateTime
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullable System.DateTime representation of the value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsInteger(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullabe type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsInteger(ECMPS.Checks.CheckEngine.cLegacyCheckParameter,System.Int32)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <param name="defaultValue">The default value for null and unconvertable values.</param>
            <returns>The value converted to the type</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsLong(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullabe type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsLong(ECMPS.Checks.CheckEngine.cLegacyCheckParameter,System.Int64)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <param name="defaultValue">The default value for null and unconvertable values.</param>
            <returns>The value converted to the type</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLegacyCheckParameterExtensions.AsString(ECMPS.Checks.CheckEngine.cLegacyCheckParameter)">
            <summary>
            Convert a cLegacyCheckParameter value to a nullable type
            </summary>
            <param name="parameter">The cLegacyCheckParameter parameter</param>
            <returns>Nullabe type representation of the cLegacyCheckParameter value</returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cLongCollection">
            <summary>
            Summary description for LongCollection.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.#ctor(System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="ADefaultValue"></param>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cLongCollection.DefaultValue">
            <summary>
            Default value (long.MinValue by default)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cLongCollection.Item(System.String)">
            <summary>
            this
            </summary>
            <param name="AKey"></param>
            <returns></returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cLongCollection.Keys">
            <summary>
            Keys collection
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cLongCollection.Values">
            <summary>
            Values collection
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.Add(System.String,System.Int64)">
            <summary>
            Add
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.Contains(System.String)">
            <summary>
            Contains
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.Remove(System.String)">
            <summary>
            Remove
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.OnInsert(System.Object,System.Object)">
            <summary>
            OnInsert
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.OnRemove(System.Object,System.Object)">
            <summary>
            OnRemove
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.OnSet(System.Object,System.Object,System.Object)">
            <summary>
            OnSet
            </summary>
            <param name="key"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cLongCollection.OnValidate(System.Object,System.Object)">
            <summary>
            OnValidate
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cModcDataBorders">
            <summary>
            Modc Data borders class
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.#ctor(System.Data.DataTable,System.String,System.Int32[],System.Boolean,System.Data.DataView)">
            <summary>
            Constructor
            </summary>
            <param name="AHourlyTable"></param>
            <param name="AValueColumnName"></param>
            <param name="AModcList"></param>
            <param name="ABorderModc"></param>
            <param name="locationView"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.#ctor(System.Data.DataTable,System.String,System.Int32[],System.Boolean,System.Data.DataView,System.String,System.String,System.String,System.Collections.Generic.List{System.String}[])">
            <summary>
            Creates MODC Data Borders object for a check category with the given MODC.  If an array of MON_SYS_ID lists are provided, 
            the object will track borders for locations and systesm.
            </summary>
            <param name="AHourlyTable">The primary table of hourly data for the category.</param>
            <param name="AValueColumnName">The value column in the hourly data table.</param>
            <param name="AModcList">The list of MODC to use.</param>
            <param name="ABorderModc">Indicates whether the MODC list are border MODC.</param>
            <param name="locationView">View containing the locations for the emission report's monitoring plan.</param>
            <param name="hourlyTypeCd">The Hourly Type Code associated with the MODC Data Borders Dictionary.</param>
            <param name="parameterCd">The Parameter Code associated with the MODC Data Borders Dictionary.</param>
            <param name="moistureBasis">The Moisture Basis associated with the MODC Data Borders Dictionary.  Null when a Moisture Basis is not applicable.</param>
            <param name="locationMonSysIdList">Array of MON_SYS_ID lists.  Null if systems are not being tracked, otheriwse contains an array element for each location in the same position as in locationView.  Each element contains a List containing MON_SYS_ID to track.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcDataBorders.ModcDataBordersDictionary">
            <summary>
            Contains a dictionary containing the parameter and moisture-basis key and the cModcDataBorders item.
            Values are loaded into the dictionary by hourly check category objects.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.AddModcDataBordersFromCategory(System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cModcDataBorders)">
            <summary>
            Adds the MODC Data Borders object for the Parameter Code, and Moisture Basis when applicable, to the MODC Data Borders Dictionary.
            </summary>
            <param name="hourlyTypeCd">The Hourly Type Code associated with the MODC Data Borders Dictionary.</param>
            <param name="parameterCd">The Parameter Code associated with the MODC Data Borders Dictionary.</param>
            <param name="moistureBasis">The Moisture Basis associated with the MODC Data Borders Dictionary.  Null when a Moisture Basis is not applicable.</param>
            <param name="modcDataBorders"></param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when locationPos is less than zero or greater than the position indexes in ModcDataBordersDictionaryList.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when hourlyTypeCd, parameterCd or modcDataBorders parameters are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when hourlyTypeCd, parameterCd or moistureBasis parameters have empty string or whitespace values, 
            or when they already contain a dictionary entry.</exception>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.InitializeModcDataBordersDictionary">
            <summary>
            Initializes the MODC Data Borders Dictionary.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.InitializeFromPreviousQuarter(System.String,System.Int32,System.Data.SqlClient.SqlConnection,System.Data.DataView,System.Int32,System.Int32,System.String@)">
            <summary>
            Loads Hour Before Supplemental Data from the previous quarter.
            </summary>
            <param name="monPlanId">The MON_PLAN_ID for the emission report monitoring plan.</param>
            <param name="rptPeriodId">The RPT_PERIOD_ID for the emission report quarter.</param>
            <param name="connection">The current "data" connection used by the check engine.</param>
            <param name="monitorLocationView">Contains the table with the locations used by the check engine.</param>
            <param name="currentYear">The year of the emission report quarter.</param>
            <param name="currentQuarter">The quarter of the emission report quarter.</param>
            <param name="errorMessage">The error message reference which is updated if an error occurs during the initialization.</param>
            <returns>Indicates whether the initialization was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.ContainsAllColumns(System.Data.DataColumnCollection,System.String[],System.String@)">
            <summary>
            Determines whether a column collection contains a list of columns.
            </summary>
            <param name="columnCollection">The columns to check.</param>
            <param name="columnNames">The list of columns the table must contain.  The table can contain additional columns.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the column collection.</param>
            <returns> Returns true if the column collection is not null and the columns in the array are all columns in the column collection.  Otherwise returns false.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.ContainsAllColumns(System.Data.DataRowView,System.String[],System.String@)">
            <summary>
            Determines whether the column collection for a data row view contains a list of columns.
            </summary>
            <param name="row"></param>
            <param name="columnNames">The list of columns the table must contain.  The table can contain additional columns.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns> Returns true if the column collection is not null and the columns in the array are all columns in the table.  Otherwise returns false.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.GetParameterMoistureBasisKey(System.String,System.String,System.String)">
            <summary>
            Returns a normalized hourly type, parameter and mositure basis key based on the provided values.
            </summary>
            <param name="hourlyTypeCd">The hourly type part of the key.</param>
            <param name="parameterCd">The parameter part of the key.</param>
            <param name="moistureBasis">The moisture basis of the key.</param>
            <returns>Returns just the hourly type and parameter if moisture basis is null or whitespace, otherwise returns hourly type, parameter and moisture basis separated by a hypen.  
            The hourly type, parameter and moisture basis are trimmed and uppercased.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.InitializeFromPreviousQuarterDo(System.String,System.String,System.String,System.Int32,System.DateTime,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32,System.Int32)">
            <summary>
            Adds the last QA operating values to the location level MODC Data Borders Dictionary for the given location position.
            Skips the add if the dictionary does not exist.
            </summary>
            <param name="hourlyTypeCd">The Hourly Type Code associated with the MODC Data Borders Dictionary.</param>
            <param name="parameterCd">The Parameter Code associated with the MODC Data Borders Dictionary.</param>
            <param name="moistureBasis">The Moisture Basis associated with the MODC Data Borders Dictionary.  Null when a Moisture Basis is not applicable.</param>
            <param name="locationPos">The position emissions checks position for the affected locaiton.</param>
            <param name="lastOpDateHour">The last QA operating hour from supplemental data.</param>
            <param name="lastUnadjustedValue">The last QA unadjusted value from supplemental data.</param>
            <param name="lastAdjustedValue">The last QA adjusted value from supplemental data.</param>
            <param name="lastValue">The last QA adjusted/unadjusted value from supplemental data.</param>
            <param name="currentYear">The year of the emission report quarter.</param>
            <param name="currentQuarter">The quarter of the emission report quarter.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.InitializeFromPreviousQuarterDo(System.String,System.String,System.String,System.Int32,System.String,System.DateTime,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32,System.Int32)">
            <summary>
            Adds the last QA operating values to the location level MODC Data Borders Dictionary for the given location position.
            Skips the add if the dictionary does not exist.
            </summary>
            <param name="hourlyTypeCd">The Hourly Type Code associated with the MODC Data Borders Dictionary.</param>
            <param name="parameterCd">The Parameter Code associated with the MODC Data Borders Dictionary.</param>
            <param name="moistureBasis">The Moisture Basis associated with the MODC Data Borders Dictionary.  Null when a Moisture Basis is not applicable.</param>
            <param name="monSysId">The MON_SYS_ID of the system for which supplemental data is being added..</param>
            <param name="locationPos">The position emissions checks position for the affected locaiton.</param>
            <param name="lastOpDateHour">The last QA operating hour from supplemental data.</param>
            <param name="lastUnadjustedValue">The last QA unadjusted value from supplemental data.</param>
            <param name="lastAdjustedValue">The last QA adjusted value from supplemental data.</param>
            <param name="lastValue">The last QA adjusted/unadjusted value from supplemental data.</param>
            <param name="currentYear">The year of the emission report quarter.</param>
            <param name="currentQuarter">The quarter of the emission report quarter.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.IsMonitorLocationTable(System.Data.DataTable,System.String@)">
            <summary>
            Returns true if the table is a Location Supplemental Data row.
            </summary>
            <param name="monitorLocationTable">The row to test.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns>Returns true if the row is Daily Interference Check row.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.IsSuppDataLocationTable(System.Data.DataTable,System.String@)">
            <summary>
            Returns true if the table is a Location Supplemental Data row.
            </summary>
            <param name="suppDataLocationTable">The row to test.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns>Returns true if the row is Daily Interference Check row.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.IsSuppDataSystemTable(System.Data.DataTable,System.String@)">
            <summary>
            Returns true if the table is a System Supplemental Data row.
            </summary>
            <param name="suppDataSystemTable">The row to test.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns>Returns true if the row is Daily Interference Check row.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.ReadFormatCommaDelimitedList(System.String)">
            <summary>
            Formats a common delimited list, stripping trailing commas and replacing the last comma with an 'and'.
            </summary>
            <param name="list">The list to format.</param>
            <returns>The formatted list.</returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cModcDataBorders.eBorderStatus">
            <summary>
            border status enumeration
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cModcDataBorders.eBorderStatus.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cModcDataBorders.eBorderStatus.Found">
            <summary>
            Found
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cModcDataBorders.eBorderStatus.Missing">
            <summary>
            Missing
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.cModcDataBorderItem.#ctor(ECMPS.Checks.CheckEngine.cModcDataBorders,System.String,System.String)">
            <summary>
            Creates an object to track last and next measured data borders and the missing data count for a location or system.
            A system is tracked if a MON_SYS_ID is supplied in the constructor.
            </summary>
            <param name="AParent">The parent cModcDataBorders object.</param>
            <param name="AMonLocId">The MON_LOC_ID to track.</param>
            <param name="AMonSysId">The MON_SYS_ID to track, null if tracking the location.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcDataBorders.cModcDataBorderItem.MonSysId">
            <summary>
            The MON_SYS_ID to track.  Null if tracking for a location.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.cModcDataBorderItem.HandleNewHour(System.DateTime,System.Int32,System.Boolean,System.Data.DataView,System.Int32)">
            <summary>
            AOpDate and AOpHour represent the actual hour being processed while OpDate and OpHour represent the last successfully filtered hour.
            These should be the same unless data does not exist for the current hour.
            </summary>
            <param name="AOpDate">The current operating date.</param>
            <param name="AOpHour">The current operating hour.</param>
            <param name="AOperating">Indicates whether the location operated during the current hour.</param>
            <param name="AHourlyView">The view containing the hourly data.</param>
            <param name="AHourlyViewPosition">The current position in the hourly data.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.cModcDataBorderItem.HandleSuppDataHour(System.DateTime,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32,System.Int32)">
            <summary>
            Updates the item for supplemental data if the quarter of the supplemental data preceeds the current quarter and LastFound is false.
            </summary>
            <param name="lastOpDateHour">The hour of the last op hour from supplemental data.</param>
            <param name="lastUnadjustedValue">The last unadjusted value from supplemental data.</param>
            <param name="lastAdjustedValue">The last adjusted value from supplemental data.</param>
            <param name="lastValue">The last adjusted or unadjusted value from supplemental data, usually used when parameter can be derived or monitored.</param>
            <param name="currentYear">The year of the emission report quarter.</param>
            <param name="currentQuarter">The quarter of the emission report quarter.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcDataBorders.BorderModc">
            <summary>
            Border MODC
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcDataBorders.ModcList">
            <summary>
            MODC List
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcDataBorders.ValueColumnName">
            <summary>
            The name of the value column to use, usually ADJUSTED_HRLY_VALUE and UNDADJUSTED_HRLY_VALUE.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.HandleNewHour(System.Int32,System.DateTime,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Handles the update for the location and a new hour.  If systems are being tracked, performs the update for each system being tracked for the location.
            </summary>
            <param name="ALocationPos">The position of the location used througout emission evaluations.</param>
            <param name="AOpDate">The current operating date.</param>
            <param name="AOpHour">The current operating hour.</param>
            <param name="AOperating">Whether the location is operating for the current operating hour</param>
            <param name="AHourlyViewPosition">The current position in the hourly data.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.AverageLastAndNext(System.Int32,System.Int32,System.Decimal@,System.String)">
            <summary>
            AverageLastAndNextAdjusted
            </summary>
            <param name="locationPos"></param>
            <param name="decimalPlaces"></param>
            <param name="value"></param>
            <param name="monSysId"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.AverageLastAndNextDo(ECMPS.Checks.CheckEngine.cModcDataBorders.cModcDataBorderItem,System.Int32,System.Int32,System.Decimal@)">
            <summary>
            AverageLastAndNextAdjusted
            </summary>
            <param name="modcDataBorderItem"></param>
            <param name="locationPos"></param>
            <param name="decimalPlaces"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.AverageLastAndNextAdjusted(System.Int32,System.Int32,System.Decimal@,System.String)">
            <summary>
            AverageLastAndNextAdjusted
            </summary>
            <param name="locationPos"></param>
            <param name="decimalPlaces"></param>
            <param name="value"></param>
            <param name="monSysId"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.AverageLastAndNextAdjustedDo(ECMPS.Checks.CheckEngine.cModcDataBorders.cModcDataBorderItem,System.Int32,System.Int32,System.Decimal@)">
            <summary>
            AverageLastAndNextAdjusted
            </summary>
            <param name="modcDataBorderItem"></param>
            <param name="locationPos"></param>
            <param name="decimalPlaces"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.AverageLastAndNextUnadjusted(System.Int32,System.Int32,System.Decimal@,System.String)">
            <summary>
            AverageLastAndNextUnadjusted
            </summary>
            <param name="locationPos"></param>
            <param name="decimalPlaces"></param>
            <param name="value"></param>
            <param name="monSysId"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.AverageLastAndNextUnadjustedDo(ECMPS.Checks.CheckEngine.cModcDataBorders.cModcDataBorderItem,System.Int32,System.Int32,System.Decimal@)">
            <summary>
            AverageLastAndNextUnadjusted
            </summary>
            <param name="modcDataBorderItem"></param>
            <param name="locationPos"></param>
            <param name="decimalPlaces"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.MissingCount(System.Int32,System.String)">
            <summary>
            MissingCount
            </summary>
            <param name="locationPos">The postion of the current location.</param>
            <param name="monSysId">The system id for which to use system specific information.  Use location level infomration if null.</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.#ctor(System.Boolean,ECMPS.Checks.CheckEngine.cModcDataBorders.eBorderStatus,System.Int32,System.DateTime,System.Int32,System.Decimal,System.Decimal,System.DateTime,System.Int32,System.Decimal,System.Decimal,System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="ALastFound"></param>
            <param name="ANextBorderStatus"></param>
            <param name="ALastSkipHourCount"></param>
            <param name="ALastBorderDate"></param>
            <param name="ALastBorderHour"></param>
            <param name="ALastBorderAdjustedValue"></param>
            <param name="ALastBorderUnadjustedValue"></param>
            <param name="ANextBorderDate"></param>
            <param name="ANextBorderHour"></param>
            <param name="ANextBorderAdjustedValue"></param>
            <param name="ANextBorderUnadjustedValue"></param>
            <param name="AEvaluationPeriodBeganDate"></param>
            <param name="AEvaluationPeriodEndedDate"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcDataBorders.GetTestCaseResults(System.Boolean@,ECMPS.Checks.CheckEngine.cModcDataBorders.eBorderStatus@,System.Int32@,System.DateTime@,System.Int32@,System.Decimal@,System.Decimal@,System.DateTime@,System.Int32@,System.Decimal@,System.Decimal@,System.Decimal@,System.Boolean@,System.Decimal@)">
            <summary>
            GetTestCaseResults
            </summary>
            <param name="ALastFound"></param>
            <param name="ANextBorderStatus"></param>
            <param name="ALastSkipHourCount"></param>
            <param name="ALastBorderDate"></param>
            <param name="ALastBorderHour"></param>
            <param name="ALastBorderAdjustedValue"></param>
            <param name="ALastBorderUnadjustedValue"></param>
            <param name="ANextBorderDate"></param>
            <param name="ANextBorderHour"></param>
            <param name="ANextBorderAdjustedValue"></param>
            <param name="ANextBorderUnadjustedValue"></param>
            <param name="AMeasuredAverageValue"></param>
            <param name="AMeasuredAverageDone"></param>
            <param name="AMissingCount"></param>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cModcHourCounts">
            <summary>
            MODC hour counts class
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcHourCounts.#ctor(System.Data.DataTable,System.Int32[],System.Data.DataView,System.Collections.Generic.List{System.String}[])">
            <summary>
            Creates QA MODC object that counts QA MODC hours, as well as MODC 17 (Like-Kind) hours and captures the first MODC 17 hour.
            </summary>
            <param name="hourlyTable">The primary table of hourly data for the category.</param>
            <param name="qaHourModcList">The list of QA MODC to use.</param>
            <param name="locationView">View containing the locations for the emission report's monitoring plan.</param>
            <param name="locationMonSysIdList">Array of MON_SYS_ID lists.  Null if systems are not being tracked, otheriwse contains an array element for each location in the same position as in locationView.  Each element contains a List containing MON_SYS_ID to track.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcHourCounts.QaHourModcList">
            <summary>
            The QA Hour MODC list
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcHourCounts.HandleNewHour(System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            Handle a new hour
            </summary>
            <param name="currentLocationPos"></param>
            <param name="currentOpDate"></param>
            <param name="currentOpHour"></param>
            <param name="hourlyViewPosition"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcHourCounts.FirstLikeKindDateHour(System.Int32)">
            <summary>
            Gets current First Like-Kind Analyzer row for a particular location.
            </summary>
            <param name="locationPos">The position of the location to get.</param>
            <returns>Returns the count for the location if it exists or null.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcHourCounts.LikeKindHourCount(System.Int32)">
            <summary>
            Gets current Like-Kind Analyzer Hour Count for a particular location.
            </summary>
            <param name="locationPos">The position of the location to get.</param>
            <returns>Returns the count for the location if it exists or MaxInt.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcHourCounts.QaHourCount(System.Int32,System.String)">
            <summary>
            Gets current QA Hour Count for a particular location.
            </summary>
            <param name="locationPos">The position of the location to get.</param>
            <param name="monSysId">The MON_SYS_ID to use when a system specific count is expected.</param>
            <returns>Returns the count for the location if it exists or MaxInt.</returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcHourCounts.FirstLikeKindDateHours">
            <summary>
            The first Like-Kind Analyzer row in the quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcHourCounts.LikeKindHourCounts">
            <summary>
            A count of the Like-Kind Analyzer Hours in the quarter up to the Last Date and Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcHourCounts.LocationCount">
            <summary>
            The count of locations in the current report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcHourCounts.HourlyTable">
            <summary>
            The hourly table against which the counts occur.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcHourCounts.MonLocIds">
            <summary>
            The list of MON_LOC_ID for the current emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cModcHourCounts.QaHourCounts">
            <summary>
            A count of the QA Hours in the quarter up to the Last Date and Hour
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cModcHourCounts.QaHourSystemCounts">
            <summary>
            Contains the system counts for for each location.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcHourCounts.#ctor(System.Int32)">
            <summary>
            constructor
            </summary>
            <param name="locationCount"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cModcHourCounts.GetTestCase_QaHourCount(System.Int32,System.Int32@)">
            <summary>
            Get test case results
            </summary>
            <param name="locationPos"></param>
            <param name="qaHourCount"></param>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cProcess">
            <summary>
            The oject created to represnt a process and provide functionality needed at the process level.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.#ctor(ECMPS.Checks.CheckEngine.cCheckEngine,System.String)">
            <summary>
            Creates and instance of cProcess
            </summary>
            <param name="CheckEngine">The Check Engine object parent</param>
            <param name="AProcessCd">The Process Code associanted with the process object.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.#ctor">
            <summary>
            Instantiates a cProcess object primarily for unit testing purposes.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.mCalculatedData">
            <summary>
            The dataset containing the calculated data tables.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.mCheckEngine">
            <summary>
            The parent check engine object.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.mCheckParametersOld">
            <summary>
            The check parameters hash table used to implement the check parameters for the process.
            A search for or setting of a check parameter only happens hear if the parameter was not
            implemented in mCheckParameters.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.mSourceData">
            <summary>
            The data set containing the source data for the process.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.CalculatedData">
            <summary>
            The dataset containing the calculated data tables.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.CheckEngine">
            <summary>
            The parent check engine object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.CheckParametersOld">
            <summary>
            The check parameters hash table used to implement the check parameters for the process.
            A search for or setting of a check parameter only happens hear if the parameter was not
            implemented in mCheckParameters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.Checks">
            <summary>
            Array of checks for each check type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbDataConnection">
            <summary>
            Connection to ECMPS database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbAuxConnection">
            <summary>
            Connection to ECMPS_AUX database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbWsConnection">
            <summary>
            Connection to ECMPS_WS database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.MaximumFutureDate">
            <summary>
            Used to limit this distance of dates in the future.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.ProcessParameters">
            <summary>
            The check parameters object that implements the check parameters for this process.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.SourceData">
            <summary>
            The data set containing the source data for the process.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.mFacilityID">
            <summary>
            the FAC_ID
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.mCheckLogs">
            <summary>
            CHECK_LOG data table
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.mCheckLogsMerged">
            <summary>
            Another CHECK_LOG data table
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.MonLocId">
            <summary>
            MON_LOC_ID
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.cProcess.mHourlyProcess">
            <summary>
            HourlyProcess?
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.CheckProcedureInit(System.String,System.String@)">
            <summary>
            Loads the Check Procedure delegates needed for a process code.
            </summary>
            <param name="checksDllPath">The path of the checks DLLs.</param>
            <param name="errorMessage">The message returned if the initialization fails.</param>
            <returns>True if the initialization succeeds.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.GetCategory(System.String)">
            <summary>
            GetCategory
            </summary>
            <param name="ACategoryName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.GetCategoryForReferenceData(System.String)">
            <summary>
            GetCategoryForReferenceData
            </summary>
            <param name="AReferenceParameter"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.CheckProcedureGet(ECMPS.Checks.Parameters.cParameterizedCheck,ECMPS.Checks.CheckEngine.cChecks.dCheckProcedure@,System.String@)">
            <summary>
            Get Checks
            </summary>
            <param name="ruleCheck">The rule check for which to find the procedure.</param>
            <param name="checkProcedure">The check procedure to run.</param>
            <param name="errorMessage">any error message</param>
            <returns>true if the check procedure is found, false if not</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.ExecuteChecks(System.String,System.String@)">
            <summary>
            Initialize the running of checks and then runs the checks.
            </summary>
            <param name="checksDllPath">The checks DLL path.</param>
            <param name="errorMessage">Processing error if the execution fails.</param>
            <returns>True if the execution of checks is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.ExecuteChecks">
            <summary>
            Initialize the running of checks and then runs the checks.
            </summary>
            <returns>True if the execution of checks is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.GetCheckBands(System.String,ECMPS.Checks.DatabaseAccess.cDatabase,System.String@)">
            <summary>
            Returns the check bands for the passed category code.
            </summary>
            <param name="ACategoryCd">The category code of the checks bands to load.</param>
            <param name="ADatabaseAux">The AUX database object to use for the update.</param>
            <param name="AErrorMessage">The error message returned on failure.</param>
            <returns>True if the population is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.GetCheckBands(System.String,System.String@)">
            <summary>
            Returns the check bands for the passed category code.
            </summary>
            <param name="ACategoryCd">The category code of the checks bands to load.</param>
            <param name="AErrorMessage">The error message returned on failure.</param>
            <returns>True if the population is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.GetCheckBands(System.String)">
            <summary>
            Returns the check bands for the passed category code.
            </summary>
            <param name="ACategoryCd">The category code of the checks bands to load.</param>
            <returns>True if the population is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.UpdateLog(System.String,ECMPS.Checks.Parameters.cParameterizedCheck,System.String,System.String,System.DateTime,System.Int32,System.String,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory,System.Boolean,System.Boolean,ECMPS.Definitions.SeverityCode.eSeverityCd@)">
            <summary>
            Populates the internal Check Log table used, ultimately, to update the the AUX Check Log.
            </summary>
            <param name="ALogComment">The check log comment.</param>
            <param name="ARuleCheck">The Parameterized Check object for the Rule Check.</param>
            <param name="AMonitorLocationId">The Monitor Location Id associated with the error.</param>
            <param name="ATestSummaryId">The Test Summary Id associated with the error.</param>
            <param name="AOpDate">The Operating Date associated with the error.</param>
            <param name="AOpHour">The Operating Hour associated with the error.</param>
            <param name="ASourceTableName">The ECMPS source table associated with the error.</param>
            <param name="ASourceRowId">The source table row id associated with the error.</param>
            <param name="ACheckCatalogResult">The Check Catalog Result of the error.</param>
            <param name="ARecordIdentifier">The identifying source information of the associated row.</param>
            <param name="ACategory">The category object in which the error was produced.</param>
            <param name="ALoggingError">Indicates the logging is for an error in processing a check.</param>
            <param name="ADebugMode">Indicates whether evaluation is in debug mode.</param>
            <param name="AResultSeverityCd">The resulting severity code.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.LogDebug(System.String,ECMPS.Checks.Parameters.cParameterizedCheck,System.String,System.String,System.DateTime,System.Int32,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory)">
            <summary>
            Populates the internal Check Log table used, ultimately, to update the the AUX Check Log.
            </summary>
            <param name="logComment">The check log comment.</param>
            <param name="ruleCheck">The Parameterized Check object for the Rule Check.</param>
            <param name="monitorLocationId">The Monitor Location Id associated with the error.</param>
            <param name="testSummaryId">The Test Summary Id associated with the error.</param>
            <param name="opDate">The Operating Date associated with the error.</param>
            <param name="opHour">The Operating Hour associated with the error.</param>
            <param name="sourceTableName">The ECMPS source table associated with the error.</param>
            <param name="sourceRowId">The source table row id associated with the error.</param>
            <param name="recordIdentifier">The identifying source information of the associated row.</param>
            <param name="category">The category object in which the error was produced.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.LogError(System.String,ECMPS.Checks.Parameters.cParameterizedCheck,System.String,System.String,System.DateTime,System.Int32,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory,ECMPS.Definitions.SeverityCode.eSeverityCd@)">
            <summary>
            Populates the internal Check Log table used, ultimately, to update the the AUX Check Log.
            </summary>
            <param name="errorMessage">The check log comment.</param>
            <param name="ruleCheck">The Parameterized Check object for the Rule Check.</param>
            <param name="monitorLocationId">The Monitor Location Id associated with the error.</param>
            <param name="testSummaryId">The Test Summary Id associated with the error.</param>
            <param name="opDate">The Operating Date associated with the error.</param>
            <param name="opHour">The Operating Hour associated with the error.</param>
            <param name="sourceTableName">The ECMPS source table associated with the error.</param>
            <param name="sourceRowId">The source table row id associated with the error.</param>
            <param name="recordIdentifier">The identifying source information of the associated row.</param>
            <param name="category">The category object in which the error was produced.</param>
            <param name="resultSeverityCd">The resulting severity code.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.LogResult(ECMPS.Checks.Parameters.cParameterizedCheck,System.String,System.String,System.DateTime,System.Int32,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},ECMPS.Checks.CheckEngine.cCategory,ECMPS.Definitions.SeverityCode.eSeverityCd@)">
            <summary>
            Populates the internal Check Log table used, ultimately, to update the the AUX Check Log.
            </summary>
            <param name="ruleCheck">The Parameterized Check object for the Rule Check.</param>
            <param name="monitorLocationId">The Monitor Location Id associated with the error.</param>
            <param name="testSummaryId">The Test Summary Id associated with the error.</param>
            <param name="opDate">The Operating Date associated with the error.</param>
            <param name="opHour">The Operating Hour associated with the error.</param>
            <param name="sourceTableName">The ECMPS source table associated with the error.</param>
            <param name="sourceRowId">The source table row id associated with the error.</param>
            <param name="checkCatalogResult">The Check Catalog Result of the error.</param>
            <param name="recordIdentifier">The identifying source information of the associated row.</param>
            <param name="errorDateHour">The applicable hour for an error.</param>
            <param name="category">The category object in which the error was produced.</param>
            <param name="resultSeverityCd">The resulting severity code.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.InitCheckParameters">
            <summary>
            Initializes the Check Parameters obect to a Default Check Parameters instance.  The default
            does not implement any parameters as properties and processes that do should override this
            method and set the Check Parameters object to and instance that implements parameters as
            properties.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.InitStaticParameterClass">
            <summary>
            This method initializes the class containing static properties enabling strongly typed access to the parameters used by the process.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.SetStaticParameterCategory(ECMPS.Checks.CheckEngine.cCategory)">
            <summary>
            Allows the setting of the current category for which parameters will be set.
            </summary>
            <param name="category"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.EraseParameters">
            <summary>
            Resets all parameter values in CheckParameters.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter specified by the passed parameter name.
            </summary>
            <param name="AParameterName">The name of the parameter to return.</param>
            <returns>Returns the parameter or null if not found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter specified by the passed parameter name.
            
            This is the primary Set Check Parameter method.
            </summary>
            <param name="AParameterName">The name of the parameter to remove.</param>
            <param name="AParameterValue">The value to set.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.SetCheckParameter(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cParameterizedCheck,System.Boolean,System.Boolean)">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="ParameterName">The name of the parameter to remove.</param>
            <param name="ParameterValue">The value to set.</param>
            <param name="ParameterType">The type of the parameter. (obsolete and ignored)</param>
            <param name="AInitRuleCheck">The rule check initializing the parameter. (obsolete and ignored)</param>
            <param name="IsAccumulator">True if the parameter is an accumulator. (obsolete and ignored)</param>
            <param name="IsArray">True if the parameter is an array. (obsolete and ignored)</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.SetCheckParameter(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cParameterizedCheck)">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="ParameterName">The name of the parameter to remove.</param>
            <param name="ParameterValue">The value to set.</param>
            <param name="ParameterType">The type of the parameter. (obsolete and ignored)</param>
            <param name="AInitRuleCheck">The rule check initializing the parameter. (obsolete and ignored)</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.SetCheckParameter(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType,System.Boolean,System.Boolean)">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="ParameterName">The name of the parameter to remove.</param>
            <param name="ParameterValue">The value to set.</param>
            <param name="ParameterType">The type of the parameter. (obsolete and ignored)</param>
            <param name="IsAccumulator">True if the parameter is an accumulator. (obsolete and ignored)</param>
            <param name="IsArray">True if the parameter is an array. (obsolete and ignored)</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.SetCheckParameter(System.String,System.Object,ECMPS.Checks.Parameters.eParameterDataType)">
            <summary>
            Obsolete method that sets the parameter specified by the passed parameter name.
            </summary>
            <param name="ParameterName">The name of the parameter to remove.</param>
            <param name="ParameterValue">The value to set.</param>
            <param name="ParameterType">The type of the parameter. (obsolete and ignored)</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.ExecuteChecksWork">
            <summary>
            ExecuteChecksWork
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.InitSourceData">
            <summary>
            InitSourceData
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.InitCalculatedData">
            <summary>
            InitCalculatedData
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_CalcWsLoad(System.Data.SqlClient.SqlTransaction,System.String@)">
            <summary>
            Loads ECMPS_WS tables for the process with calculated values.
            </summary>
            <param name="sqlTransaction">The transaction to use with any commands.  Use null for no transaction.</param>
            <param name="errorMessage">The error message returned on failure.</param>
            <returns>Returns true if the update succeeds.</returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_EcmpsStatusProcess">
            <summary>
            The Update ECMPS Status process identifier.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_EcmpsStatusIdKeyOrList">
            <summary>
            The Update ECMPS Status id key or list for the item(s) for which the update will occur.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_EcmpsStatusPeriodId">
            <summary>
            The Update ECMPS Status report period id for the item(s) for which the update will occur.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_EcmpsStatusOtherField">
            <summary>
            The Update ECMPS Status Additional value for the items(s) for which the update will occur..
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_UpdateData">
            <summary>
            Determine whether to update calculated values and ECMPS Status.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_WorkspaceDataType">
            <summary>
            Returns the WS data type for the process.
            </summary>
            <returns>The workspace data type for the process, or null for none.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.DbUpdate(System.String@)">
            <summary>
            Performs the database updates at the end of a check process.
            </summary>
            <param name="errorMessage">The error message returned if the call fails.</param>
            <returns>Returns true if the call is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_CalcWsMigrate(System.Data.SqlClient.SqlTransaction,System.String@)">
            <summary>
            Migrates ECMPS_WS calculated values to the ECMPS database.
            </summary>
            <param name="sqlTransaction">The transaction to use with any commands.  Use null for no transaction.</param>
            <param name="errorMessage">The error message returned on failure.</param>
            <returns>Returns true if the update succeeds.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_CheckLog(System.Data.SqlClient.SqlTransaction,System.String@)">
            <summary>
            Updates the CHECK_LOG for the processed checks.
            </summary>
            <param name="sqlTransaction">The transaction to use for the SQL command.</param>
            <param name="errorMessage">The error message returned if the call fails.</param>
            <returns>Returns true if the method is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_CheckLogMerge">
            <summary>
            UpdateCheckLog_Merge
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.DbUpdate_EcmpsStatus(System.Data.SqlClient.SqlTransaction,System.String@)">
            <summary>
            Calls the ECMPS UPDATE_ECMPS_STATUS stored procedure.
            </summary>
            <param name="sqlTransaction">The transaction to use for the SQL command.</param>
            <param name="errorMessage">The error message returned if the call fails.</param>
            <returns>Returns true if the method is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.CloneTable(System.String,System.String,System.Data.SqlClient.SqlConnection,System.String@)">
            <summary>
            CloneTable
            </summary>
            <param name="ACatalogName"></param>
            <param name="ATableName"></param>
            <param name="AConnection"></param>
            <param name="AErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.AddSourceData(System.String,System.String)">
            <summary>
            Add a data to the mSourceData data set
            </summary>
            <param name="sTableNm">The name of the table</param>
            <param name="sSQL">The to use to fill the table</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.AddSourceDataTable(System.String,System.String)">
            <summary>
            Add a DataTable to mSourceData, using ECMPSConnection in mCheckEngine
            </summary>
            <param name="sDataTableNm">The name of the new DataTable</param>
            <param name="sViewNm">The view to get data from</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.AddSourceDataTable(System.String,System.String,System.String)">
            <summary>
            Add a DataTable to mSourceData, using ECMPSConnection in mCheckEngine
            </summary>
            <param name="sDataTableNm">The name of the new DataTable</param>
            <param name="sViewNm">The view to get data from</param>
            <param name="sWhereClause">A where clause, if any</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.AddSourceDataTable(System.String,System.String,System.String,System.String)">
            <summary>
            Add a DataTable to mSourceData, using ECMPSConnection in mCheckEngine
            </summary>
            <param name="sDataTableNm">The name of the new DataTable</param>
            <param name="sViewNm">The view to get data from</param>
            <param name="sWhereClause">A where clause, if any</param>
            <param name="sOrderClause">An order clause, if any</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.GetFacilityID">
            <summary>
            Get the FAC_ID for the current MON_PLAN_ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.InitLogs">
            <summary>
            InitLogs
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cProcess.SeverityCd">
            <summary>
            The Severity Code resulting from executing the processes checks.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.UpdateErrors(System.String)">
            <summary>
            UpdateErrors
            </summary>
            <param name="AErrorText"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cProcess.UpdateSeverity(ECMPS.Definitions.SeverityCode.eSeverityCd)">
            <summary>
            UpdateSeverity
            </summary>
            <param name="ASeverityCd"></param>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cResultCatalog">
            <summary>
            Result Catalog class
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cResultCatalog.#ctor(ECMPS.Checks.DatabaseAccess.cDatabase)">
            <summary>
            Constructor
            </summary>
            <param name="AChecksConnection"></param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.cResultCatalog.dGetCheckParameter">
            <summary>
            Delegate to get the check parameter from the name
            </summary>
            <param name="AParameterName"></param>
            <returns></returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.cResultCatalog.GetCheckParameter">
            <summary>
            Get the get parameter
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cResultCatalog.GetResultInfo(System.String,System.Int32,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory,System.Int64@,System.String@,System.String@,ECMPS.Definitions.SeverityCode.eSeverityCd@,ECMPS.Definitions.SeverityCode.eSeverityCd@,System.Nullable{System.Int64}@,System.String@,System.String@)">
            <summary>
            GetResultInfo
            </summary>
            <param name="ACheckTypeCd"></param>
            <param name="ACheckNumber"></param>
            <param name="ACheckResult"></param>
            <param name="ARecordId"></param>
            <param name="ACategory"></param>
            <param name="AResultKey"></param>
            <param name="AResultMessage"></param>
            <param name="AResultCd"></param>
            <param name="ASeverityCd"></param>
            <param name="ASuppressedSeverityCd"></param>
            <param name="AErrorSuppressId"></param>
            <param name="ASuppressionComment"></param>
            <param name="AErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cResultCatalog.GetResultInfo(System.String,System.Int64,System.String,System.String,ECMPS.Checks.CheckEngine.cCategory,System.Int64@,System.String@,System.String@,ECMPS.Definitions.SeverityCode.eSeverityCd@,ECMPS.Definitions.SeverityCode.eSeverityCd@,System.Nullable{System.Int64}@,System.String@,System.String@)">
            <summary>
            GetResultInfo
            </summary>
            <param name="ACheckTypeCd"></param>
            <param name="ACheckNumber"></param>
            <param name="ACheckResult"></param>
            <param name="ARecordId"></param>
            <param name="ACategory"></param>
            <param name="AResultKey"></param>
            <param name="AResultMessage"></param>
            <param name="AResultCd"></param>
            <param name="ASeverityCd"></param>
            <param name="ASuppressedSeverityCd"></param>
            <param name="AErrorSuppressId"></param>
            <param name="ASuppressionComment"></param>
            <param name="AErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.cResultCatalog.Populate(ECMPS.Checks.DatabaseAccess.cDatabase,System.String@)">
            <summary>
            Populate
            </summary>
            <param name="AChecksConnection"></param>
            <param name="AErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue">
            <summary>
            Contains a queue of cDailyCalibrationTestData with the method to enqueue items
            and retrieve an item based on the passed op date and hour.  The QA only keeps
            two elements, one for the current info and the other is either the previous or
            next information. based on the current op date and hour.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue.#ctor">
            <summary>
            The constructor for an object of cDailyCalibrationTestDataQueue.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue.Enqueue(ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData)">
            <summary>
            Queues the passed element, which removes the oldes queued element.
            </summary>
            <param name="testdata">The element to queue.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue.GetTestData">
            <summary>
            Retrieves the test data for the given hour.
            
            If the last queued item has a test hour on or before the passed hour
            information, then it is used.  Otherwise if the older queued item has
            a test hour on or before the passed hour then it is used.  Otherwise 
            a null is returned.
            </summary>
            <returns>The test data based on the passed op date and hour.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue.UpdateOperatingInformation(System.String,System.DateTime,System.Decimal,System.Collections.Generic.Dictionary{System.String,System.Decimal})">
            <summary>
            Calls UpdateOperatingInformation for each populated queue element.
            </summary>
            <param name="monLocId">MON_LOC_ID for the location being updated.</param>
            <param name="opHour">The operating hour for which the update is occuring.</param>
            <param name="opTime">The operating time for the hour.</param>
            <param name="systemOpTimeDictionary">Contains the MON_SYS_ID and operating times for the primary and primary bypass systems When a primary bypass is active.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue.LoadIntoSupplementalDataTables(System.Data.DataTable,System.Data.DataTable,System.Int32,System.Decimal)">
            <summary>
            Updates the supplemental data load tables for the last Daily Calibration Test added to the queue, which is in position 0.
            </summary>
            <param name="SupplementalDataUpdateLocationDataTable"></param>
            <param name="SupplementalDataUpdateSystemDataTable"></param>
            <param name="rptPeriodId"></param>
            <param name="workspaceSessionId"></param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue.OpDate">
            <summary>
            The Op Date based on the Current_Operating_Date check parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue.OpHour">
            <summary>
            The Op Hour based on the Current_Operating_Hour check parameter.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestDataQueue.TestDataQueue">
            <summary>
            Two element queue of test data information.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck">
            <summary>
            Object used to track the last Daily Interference Check for components.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.#ctor">
            <summary>
            Creates an object used to track and return the last Daily Interference Check record
            that matches particular conditions.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.Add(System.Data.DataRowView,System.String,System.DateTime,System.String@)">
            <summary>
            Adds the current row based on component id and span scale,
            limited by the condition set on instantiation.
            </summary>
            <param name="dailyInterferenceCheckRow">The row to add.</param>
            <param name="calculatedTestResultCd">The check engine calculated test result.</param>
            <param name="currentOpHour">The current operating hour.</param>
            <param name="resultMessage">Reason for failure.</param>
            <returns>True if addition was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.Get(System.String,System.Boolean,ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest@)">
            <summary>
            Returns the last Daily Interference Check row for the component id 
            </summary>
            <param name="componentId">The component id for which to find the last daily interference.</param>
            <param name="online">Find online test if true and offline if false.</param>
            <param name="latestTest">The daily interference check object found.</param>
            <returns>Returns true if the last daily interference check was found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.GetTestRow(System.String,System.Boolean)">
            <summary>
            Returns the last Daily Interference Check row for the component id
            </summary>
            <param name="componentId">The component id for which to find the last daily interference.</param>
            <param name="online">Find online test if true and offline if false.</param>
            <returns>Retrn the daily interference check row found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.Get(System.String,System.Boolean)">
            <summary>
            Returns the last Daily Interference Check object for the component id 
            </summary>
            <param name="componentId">The component id for which to find the last daily interference.</param>
            <param name="online">Find online test if true and offline if false.</param>
            <returns>Returns the test object if the last daily interference check was found, otherwise return null..</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.InitializeFromPreviousQuarter(System.String,System.Int32,System.Data.SqlClient.SqlConnection,System.String@)">
            <summary>
            
            </summary>
            <param name="monPlanId"></param>
            <param name="rptPeriodId"></param>
            <param name="connection"></param>
            <param name="resultMessage"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.UpdateOperatingInformation(System.String,System.DateTime,System.Decimal)">
            <summary>
            Calls UpdateOperatingInformation on ComponentData item for each Component Id associated with the passed monLocId.
            </summary>
            <param name="monLocId">MON_LOC_ID for the location being updated.</param>
            <param name="opHour">The operating hour for which the update is occuring.</param>
            <param name="opTime">The operating time for the hour.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.GetOrCreateComponent(ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest)">
            <summary>
            Returns the component for the test if it exists, otherwise creates a component and returns
            the new comonent.  Also adds any created components to the list of components for the 
            associated location.
            </summary>
            <param name="latestTest">The test for which a component object will be returned.</param>
            <returns>The component for the test.</returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.ComponentDictionary">
            <summary>
            Dictionary with a Component Id lookup to cLastDailyInterferenceCheckForComponent object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.LocationComponentList">
            <summary>
            This tracks the COMPONENT_ID values that belong to a particular MON_LOC_ID.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.SupplementalDataUpdateDatabaseName">
            <summary>
            Contains the name of the update database for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.SupplementalDataUpdateSchemaName">
            <summary>
            Contains the name of the update schema for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.SupplementalDataUpdateTableName">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.SupplementalDataUpdateTablePath">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck.SaveSupplementalData(ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck,System.Int32,System.Decimal,ECMPS.Checks.DatabaseAccess.cDatabase,System.String@)">
            <summary>
            Gathers the supplemental data from a cLastDailyInterferenceCheck object and loads them inteo the ECMPS_WS table for the data.
            </summary>
            <param name="lastDailyInterferenceCheckList">The object containing the supplemental data to load.</param>
            <param name="rptPeriodId">The report period for the emissions being evaluated.</param>
            <param name="workspaceSessionId">The workspace session id for the current evaluation.</param>
            <param name="ecmpsWsDatabase">The object for the ECMPS_WS database.</param>
            <param name="errorMessage">The error message returned if the bulk load fails.</param>
            <returns>Returns true if the bulk load is successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.#ctor(System.String,System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheck)">
            <summary>
            Constructor for cDailyCalibrationComponentData.
            </summary>
            <param name="componentId">The Component Id represented by the object.</param>
            <param name="monLocId">The Monitor Location Id contained in the object.</param>
            <param name="lastDailyInterferenceCheck">The parent Last Daily Interference Check object.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.ComponentId">
            <summary>
            The Component Id for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.LastDailyInterferenceCheck">
            <summary>
            The parant object for this component specific object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.LatestOfflineTest">
            <summary>
            Latest offline test information object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.LatestOnlineTest">
            <summary>
            Latest online test information object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.LastOpHour">
            <summary>
            The 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.MonLocId">
            <summary>
            The Monitor Location Id for this set of daily calibration data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.Add(ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest,System.DateTime,System.String@)">
            <summary>
            Replaces the current online or offline Daily Interference Check for the specific component.
            
            The method checks the component id and identifier of the test against the current
            values for the object to make sure they are the same.
            </summary>
            <param name="latestTest">The test to add.</param>
            <param name="currentOpHour">The current operating hour.</param>
            <param name="resultMessage">Message indicating why the addition failed.</param>
            <returns>Returns true if the replacement occurred.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.Get(System.Boolean)">
            <summary>
            Retrieves the most recent daily interference check matching the passed span scale.
            </summary>
            <param name="online">Indicates whether to get the online or offline check.</param>
            <returns>The check row or null if it was not found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.InitializeFromPreviousQuarter(ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest,System.String@)">
            <summary>
            Creates Daily Calibration Test Data object from a Daily Test (Location) Supplemental Data row and a list
            of Daily Test System Supplemental Data rows.
            </summary>
            <param name="latestTest">The test to add.</param>
            <param name="resultMessage">Message indicating why the addition failed.</param>
            <returns>Returns true if the update occurred.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.LoadIntoSupplementalDataTables(System.Data.DataTable,System.Int32,System.Decimal)">
            <summary>
            Updates the supplemental data load tables for each test data queue.
            </summary>
            <param name="SupplementalDataUpdateTable"></param>
            <param name="rptPeriodId"></param>
            <param name="workspaceSessionId"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckForComponent.UpdateOperatingInformation(System.String,System.DateTime,System.Decimal)">
            <summary>
            Calls UpdateOperatingInformation for each populated queue.
            
            The call will update operating information for the elements in each queue.
            </summary>
            <param name="monLocId">MON_LOC_ID for the location being updated.</param>
            <param name="opHour">The operating hour for which the update is occuring.</param>
            <param name="opTime">The operating time for the hour.</param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest">
            <summary>
            Class represents daily interference check test data and its supplemental data and update methods.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.#ctor(System.Data.DataRowView,System.String,System.Boolean)">
            <summary>
            Initializes the supplemental data values and additional information.
            </summary>
            <param name="dailyInterferenceCheckRow">The Daily Interference Check or Daily Interference Supp Data Row to load.</param>
            <param name="calculatedTestResultCd">The check engine calculated test result.</param>
            <param name="fromPreviousQuarter">Indicates whether the row is from a previous quarter.  Defaults to false.  Prevents saving the row as supplemental data and determines whether the row should contain supplemental data information.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.CreateInstance(System.Data.DataRowView,System.String,System.Boolean,ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest@,System.String@)">
            <summary>
            Creates Daily Calibration Test Data object from a Daily Test (Location) Supplemental Data row and a list
            of Daily Test System Supplemental Data rows.
            </summary>
            <param name="dailyInterferenceCheckRow">The Daily Interference Check or Supplemental Data row</param>
            <param name="calculatedTestResultCd">The check engine calculated test result.</param>
            <param name="fromPreviousQuarter">Indicates whether the row is from a previous quarter.  Defaults to false.  Prevents saving the row as supplemental data and determines whether the row should contain supplemental data information.</param>
            <param name="instance">The created instacne, null if failed</param>
            <param name="resultMessage">Message indicating why the creation failed, null if successful.</param>
            <returns>Returns true if the creation was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ContainsSuppDataColumns(System.Data.DataRowView,System.String@)">
            <summary>
            Returns true if the row is a Supplemental Data row.
            </summary>
            <param name="suppDataRow">The row to test.</param>
            <param name="containedColumns">Contains a comma delimited list of columns that are contained in the column collection.</param>
            <returns>Returns true if the row is Daily Interference Check row.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.HasRequiredValues(System.Data.DataRowView,System.String@)">
            <summary>
            Ensures that the Daily Test Date/Time columns are not null.
            </summary>
            <param name="dailyInterferenceCheckRow"></param>
            <param name="missingValues"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.HasExpectedTestType(System.Data.DataRowView)">
            <summary>
            
            </summary>
            <param name="dailyInterferenceCheckRow"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.IsDailyTestRow(System.Data.DataRowView,System.String@)">
            <summary>
            Returns true if the row is a Daily Test row.
            </summary>
            <param name="dailyTestRow">The row to test.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns>Returns true if the row is Daily Interference Check row.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.IsDailyTestTable(System.Data.DataTable,System.String@)">
            <summary>
            Returns true if the row is a Daily Test row.
            </summary>
            <param name="dailyTestTable">The row to test.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns>Returns true if the row is Daily Interference Check row.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.IsSuppDataRow(System.Data.DataRowView,System.String@)">
            <summary>
            Returns true if the row is a Supplemental Data row.
            </summary>
            <param name="suppDataRow">The row to test.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns>Returns true if the row is Daily Interference Check row.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ContainsAllColumns(System.Data.DataColumnCollection,System.String[],System.String@)">
            <summary>
            Determines whether a column collection contains a list of columns.
            </summary>
            <param name="columnCollection">The columns to check.</param>
            <param name="columnNames">The list of columns the table must contain.  The table can contain additional columns.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the column collection.</param>
            <returns> Returns true if the column collection is not null and the columns in the array are all columns in the column collection.  Otherwise returns false.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ContainsAllColumns(System.Data.DataRowView,System.String[],System.String@)">
            <summary>
            Determines whether the column collection for a data row view contains a list of columns.
            </summary>
            <param name="row"></param>
            <param name="columnNames">The list of columns the table must contain.  The table can contain additional columns.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns> Returns true if the column collection is not null and the columns in the array are all columns in the table.  Otherwise returns false.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ContainsAllColumns(System.Data.DataTable,System.String[],System.String@)">
            <summary>
            Determines whether the column collection for a data row view contains a list of columns.
            </summary>
            <param name="table"></param>
            <param name="columnNames">The list of columns the table must contain.  The table can contain additional columns.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns> Returns true if the column collection is not null and the columns in the array are all columns in the table.  Otherwise returns false.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ContainsSomeColumns(System.Data.DataColumnCollection,System.String[],System.String@)">
            <summary>
            Returns true if the row is a Supplemental Data row.
            </summary>
            <param name="columnCollection">The columns to check.</param>
            <param name="columnNames">The list of columns the table must contain.  The table can contain additional columns.</param>
            <param name="containedColumns">Contains a comma delimited list of columns that are contained in the column collection.</param>
            <returns>Returns true if the column collection contains one of the columns in columnNames.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ContainsSomeColumns(System.Data.DataRowView,System.String[],System.String@)">
            <summary>
            Determines whether the column collection for a data row view contains a list of columns.
            </summary>
            <param name="row"></param>
            <param name="columnNames">The list of columns the table must contain.  The table can contain additional columns.</param>
            <param name="containedColumns">Contains a comma delimited list of columns that are contained in the column collection.</param>
            <returns> Returns true if the column collection is not null and the columns in the array are all columns in the table.  Otherwise returns false.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ReadFormatCommaDelimitedList(System.String)">
            <summary>
            Formats a common delimited list, stripping trailing commas and replacing the last comma with an 'and'.
            </summary>
            <param name="list">The list to format.</param>
            <returns>The formatted list.</returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.CalculatedTestResultCd">
            <summary>
            The Calculated Test Result Code for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ComponentId">
            <summary>
            The Component Id for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.ComponentIdentifier">
            <summary>
            The Component Identifier for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.DailyTestDateHour">
            <summary>
            The Daily Test Date-Hour for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.DailyTestDate">
            <summary>
            The Daily Test Date for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.DailyTestHour">
            <summary>
            The Daily Test Hour for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.DailyTestMinute">
            <summary>
            The Daily Test Minute for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.DailyInterferenceCheckRow">
            <summary>
            The latest daily interference check based on the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.DailyTestSumId">
            <summary>
            The DAILY_TEST_SUM_ID of the daily interference test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.FromPreviousQuarter">
            <summary>
            Indicates whether this data is from a previous quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.IsOnlineTest">
            <summary>
            Indicates whether the test was done online or offline.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.MonLocId">
            <summary>
            The Monitor Location Id for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.FirstOpHourAfterLastCoveredNonOpHour">
            <summary>
            Contains the firest operating hour that occurred after LastCoveredNonOpHour.
            
            The value is reset to null whenever LastCoveredNonOpHour is updated.
            
            Used in supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.LastCoveredNonOpHour">
            <summary>
            Contains the last non operating hour that occurred during the hours coverred by the test.
            
            Used in supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.LastHandledOpHour">
            <summary>
            Indicates the last hour for which potential updates to OperatingHourCount, LastCoveredNonOpHour and FirstOpHourAfterLastCoveredNonOpHour
            were handled.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.OperatingHourCount">
            <summary>
            The count of operating hours on or after the the test hour.  
            
            Used in supplemental data and should be the count from the test to the end of the quarter for any data used in supplemantal data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.LoadIntoSupplementalDataTables(System.Data.DataTable,System.Int32,System.Decimal)">
            <summary>
            Adds a row to SupplementalDataUpdateDataTable populated with the values suppDataCd and fromsupplementalDataGroup.
            </summary>
            <param name="SupplementalDataUpdateTable"></param>
            <param name="rptPeriodId"></param>
            <param name="workspaceSessionId"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cLastDailyInterferenceCheckTest.UpdateOperatingInformation(System.String,System.DateTime,System.Decimal)">
            <summary>
            Updates OperatingHourCount, LastCoveredNonOpHour and FirstOpHourAfterLastCoveredNonOpHour for an hour.
            
                OperatingHourCount: Updated when the op hour is a new hour and and an operating hour.
                LastCoveredNonOpHour: Update to the op hour when the hour falls within the 26 hours covered by the test starting with the test hour.
                FirstOpHourAfterLastCoveredNonOpHour: When null, set to a new hour when it is operating.
                                                      If LastCoveredNonOpHour is updated, FirstOpHourAfterLastCoveredNonOpHour is set to null.
            </summary>
            <param name="monLocId">MON_LOC_ID for the location being updated.</param>
            <param name="opHour">The operating hour for which the update is occuring.</param>
            <param name="opTime">The operating time for the hour.</param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData">
            <summary>
            This class is used to capture component operating day and hour counts. 
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.#ctor(System.Int32,System.String,System.String)">
            <summary>
            This class is used to capture component operating day and hour counts. 
            </summary>
            <param name="rptPeriodId">The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.</param>
            <param name="componentId">The primary key of the COMPONENT table.</param>
            <param name="monLocId">The primary key of the MONITOR_LOCATION table.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.ComponentId">
            <summary>
            The primary key of the COMPONENT being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.SupplementalDataUpdateDataTable">
            <summary>
            Contains the update data table object for supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.SupplementalDataUpdateDatabaseName">
            <summary>
            Contains the name of the update database for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.SupplementalDataUpdateSchemaName">
            <summary>
            Contains the name of the update schema for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.SupplementalDataUpdateTableName">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.SupplementalDataUpdateTablePath">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.LoadSupplementalDataUpdateDataTable(System.Collections.Generic.Dictionary{System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData}[],System.Decimal,System.Data.SqlClient.SqlConnection)">
            <summary>
            Creates a new instance of SupplementalDataUpdateDataTable and populates it with data from the passed dictionary array.  
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.Equals(System.Object)">
            <summary>
            Base object Equals override that checks for comparison to null, the same object, different types,
            and finally uses the type specific Equals.
            </summary>
            <param name="that">The object instance to compare against this instance.</param>
            <returns>Returns true of the objects are of the same type and have the same key contents.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.Equals(ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData)">
            <summary>
            Type specific Equals implementation that uses ComponentId and RptPeriodId.
            </summary>
            <param name="that">The ComponentOperatingSupplementalData instance to compare against this instance.</param>
            <returns>Returns true if the ComponentId and RptPeriodId values are the same for the two instances.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.GetHashCode">
            <summary>
            GetHashCode override that uses ComponentId and RptPeriodId.
            </summary>
            <returns>Returns the hash based on ComponentId and RptPeriodId.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.ComponentOperatingSupplementalData.ToString">
            <summary>
            Returns the Component and Reporting Period Ids
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData">
            <summary>
            The component level data for Daily Calibration tests.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.#ctor(System.String,System.String)">
            <summary>
            Constructor for cDailyCalibrationComponentData.
            </summary>
            <param name="componentId">The Component Id represented by the object.</param>
            <param name="componentIdentifier">The Component Identifier of the Component Id.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.ComponentId">
            <summary>
            The Component Id for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.ComponentIdentifier">
            <summary>
            The Component Identifier for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.TestDataQueue">
            <summary>
            The set of important test data for a daily calibration.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.GetTestData(System.Boolean,ECMPS.Checks.TypeUtilities.eSpanScale,System.Boolean)">
            <summary>
            Retieves the most recent test matching the passed validity, span scale and 
            online/offline indicator.
            </summary>
            <param name="valid">The validity of the test.</param>
            <param name="spanScale">The span scale of the test.</param>
            <param name="online">The online/offline indicator of the test.</param>
            <returns>The test data or null if it was not found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.GetTestData(System.Boolean,ECMPS.Checks.TypeUtilities.eSpanScale,System.Boolean,ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData@)">
            <summary>
            Retieves the most recent test matching the passed validity, span scale and 
            online/offline indicator.
            </summary>
            <param name="valid">The validity of the test.</param>
            <param name="spanScale">The span scale of the test.</param>
            <param name="online">The online/offline indicator of the test.</param>
            <param name="testData">The returned test data.</param>
            <returns>True if the data was retrieve successfully</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.GetTestData(System.Boolean,ECMPS.Checks.TypeUtilities.eSpanScale)">
            <summary>
            Retieves the most recent test matching the passed validity, span scale and 
            online/offline indicator.
            </summary>
            <param name="valid">The validity of the test.</param>
            <param name="spanScale">The span scale of the test.</param>
            <returns>The test data or null if it was not found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.GetTestData(System.Boolean,ECMPS.Checks.TypeUtilities.eSpanScale,ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData@)">
            <summary>
            Retieves the most recent test matching the passed validity and span scale.
            </summary>
            <param name="valid">The validity of the test.</param>
            <param name="spanScale">The span scale of the test.</param>
            <param name="testData">The returned test data.</param>
            <returns>True if the data was retrieve successfully</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.Update(ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData,System.String@)">
            <summary>
            
            </summary>
            <param name="testData"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.UpdateOperatingInformation(System.String,System.DateTime,System.Decimal,System.Collections.Generic.Dictionary{System.String,System.Decimal})">
            <summary>
            Calls UpdateOperatingInformation for each populated queue.
            
            The call will update operating information for the elements in each queue.
            </summary>
            <param name="monLocId">MON_LOC_ID for the location being updated.</param>
            <param name="opHour">The operating hour for which the update is occuring.</param>
            <param name="opTime">The operating time for the hour.</param>
            <param name="systemOpTimeDictionary">Contains the MON_SYS_ID and operating times for the primary and primary bypass systems When a primary bypass is active.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationComponentData.LoadIntoSupplementalDataTables(System.Data.DataTable,System.Data.DataTable,System.Int32,System.Decimal)">
            <summary>
            Updates the supplemental data load tables for each test data queue.
            </summary>
            <param name="SupplementalDataUpdateLocationDataTable"></param>
            <param name="SupplementalDataUpdateSystemDataTable"></param>
            <param name="rptPeriodId"></param>
            <param name="workspaceSessionId"></param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData">
            <summary>
            
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.#ctor(ECMPS.Definitions.SeverityCode.eSeverityCd)">
            <summary>
            Instantiates a cDailyCalibrationRunningData object.
            </summary>
            <param name="dailyCalibrationSeverityCd">The daily alibration category object's severity code.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.DailyCalibrationSeverityCd">
            <summary>
            The Daily Calibration Category object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.ComponentData">
            <summary>
            Dictionary with a Component Id lookup to cDailyCalibrationComponentData object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.LocationComponentList">
            <summary>
            This tracks the COMPONENT_ID values that belong to a particular MON_LOC_ID.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.GetMostRecent(System.String,System.Boolean,System.String,System.Boolean,ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData@)">
            <summary>
            Get the most recent test for a component matching the passed validity, span scale
            and online/offline indication.
            </summary>
            <param name="componentId">The component id of the test.</param>
            <param name="valid">Indicates whether the test should be valid.</param>
            <param name="spanScaleCd">Indicates the span scale of the test.</param>
            <param name="online">Indicates whether the test was online (true) or offline (false).</param>
            <param name="testData">The test data object.</param>
            <returns>Returns true if a row was found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.GetMostRecent(System.String,System.Boolean,System.String,System.Boolean,System.Data.DataRowView@,System.String@)">
            <summary>
            Get the most recent test for a component matching the passed validity, span scale
            and online/offline indication.
            </summary>
            <param name="componentId">The component id of the test.</param>
            <param name="valid">Indicates whether the test should be valid.</param>
            <param name="spanScaleCd">Indicates the span scale of the test.</param>
            <param name="online">Indicates whether the test was online (true) or offline (false).</param>
            <param name="dailyCalibrationRow">The returned daily calibration row.  Null if none found.</param>
            <param name="calculatedTestResultCd">The calculated test result code for the row.</param>
            <returns>Returns true if a row was found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.GetMostRecent(System.String,System.Boolean,System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData@)">
            <summary>
            Get the most recent test for a component matching the passed validity and span scale
            regardless of the online/offline indication.
            </summary>
            <param name="componentId">The component id of the test.</param>
            <param name="valid">Indicates whether the test should be valid.</param>
            <param name="spanScaleCd">Indicates the span scale of the test.</param>
            <param name="testData">The test data object.</param>
            <returns>Returns true if a row was found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.GetMostRecent(System.String,System.Boolean,System.String,System.Data.DataRowView@,System.String@)">
            <summary>
            Get the most recent test for a component matching the passed validity and span scale
            regardless of the online/offline indication.
            </summary>
            <param name="componentId">The component id of the test.</param>
            <param name="valid">Indicates whether the test should be valid.</param>
            <param name="spanScaleCd">Indicates the span scale of the test.</param>
            <param name="dailyCalibrationRow">The returned daily calibration row.  Null if none found.</param>
            <param name="calculatedTestResultCd">The calculated test result code for the row.</param>
            <returns>Returns true if a row was found.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.InitializeFromPreviousQuarter(System.String,System.Int32,System.Data.SqlClient.SqlConnection,System.String@)">
            <summary>
            
            </summary>
            <param name="monPlanId"></param>
            <param name="rptPeriodId"></param>
            <param name="connection"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.LoadIntoSupplementalDataTables(System.Int32,System.Decimal,System.Data.SqlClient.SqlConnection)">
            <summary>
            Updates the supplemental data load tables for each component.
            </summary>
            <param name="rptPeriodId"></param>
            <param name="workspaceSessionId"></param>
            <param name="connection"></param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.Update(System.String@)">
            <summary>
            Updates the most resent calibration information.
            </summary>
            <param name="errorMessage">The error message for any error produced</param>
            <returns>True if the update was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.Update">
            <summary>
            Updates the most resent calibration information.
            
            Reports any errors in the debug output log.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.UpdateOperatingInformation(System.String,System.DateTime,System.Decimal,System.Collections.Generic.Dictionary{System.String,System.Decimal})">
            <summary>
            Calls UpdateOperatingInformation on ComponentData item for each Component Id associated with the passed monLocId.
            </summary>
            <param name="monLocId">MON_LOC_ID for the location being updated.</param>
            <param name="opHour">The operating hour for which the update is occuring.</param>
            <param name="opTime">The operating time for the hour.</param>
            <param name="systemOpTimeDictionary">Contains the MON_SYS_ID and operating times for the primary and primary bypass systems When a primary bypass is active.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.SupplementalDataUpdateLocationDataTable">
            <summary>
            Contains the update data table object for supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.SupplementalDataUpdateSystemDataTable">
            <summary>
            Contains the update data table object for supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.SupplementalDataUpdateDatabaseName">
            <summary>
            Contains the name of the update database for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.SupplementalDataUpdateSchemaName">
            <summary>
            Contains the name of the update schema for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.SupplementalDataUpdateLocationTableName">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.SupplementalDataUpdateLocationTablePath">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.SupplementalDataUpdateSystemTableName">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.SupplementalDataUpdateSystemTablePath">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.isDailyTestSupplementalDataTable(System.Data.DataTable,System.String@)">
            <summary>
            Determines whether the passed table meets the minimum column requirement to be a Daily Test (Location) Supplemental Data table.
            </summary>
            <param name="table">The table to check.</param>
            <param name="errorMessage">The error message with missing columns.</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.isDailyTestSystemSupplementalDataTable(System.Data.DataTable,System.String@)">
            <summary>
            Determines whether the passed table meets the minimum column requirement to be a Daily Test System Supplemental Data table.
            </summary>
            <param name="table">The table to check.</param>
            <param name="errorMessage">The error message with missing columns.</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationData.CheckTableColumns(System.Data.DataTable,System.String[],System.String@)">
            <summary>
            Determines whether a table contains a minimum list of columns.
            </summary>
            <param name="table">The table to check.</param>
            <param name="columnNames">The list of columns the table must contain.  The table can contain additional columns.</param>
            <param name="missingColumns">Contains a comma delimited list of columns that are not contained in the table.</param>
            <returns> Returns true if the table is defined and the columns in the array are all columns in the table.  Otherwise returns false.</returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.#ctor(ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData)">
            <summary>
            Initializes the supplemental data values and additional information.
            </summary>
            <param name="dailyCalibrationTestData">The time (date and hour, and optionally minutes) that the daily calibration test occurred.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.#ctor(ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Initialized the supplemental data values and additional information from the previous quarter's last values.
            </summary>
            <param name="dailyCalibrationTestData"></param>
            <param name="firstOpHourAfterLastCoveredNonOpHour"></param>
            <param name="lastCoveredNonOpHour"></param>
            <param name="lastHandledOpHour"></param>
            <param name="operatingHourCount"></param>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.DailyCalibrationTestData">
            <summary>
            The cDailyCalibrationTestData object for which the supplemental values are being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.DailyTestDateHour">
            <summary>
            The time (date and hour) that the daily calibration test occurred.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.FirstOpHourAfterLastCoveredNonOpHour">
            <summary>
            Contains the firest operating hour that occurred after LastCoveredNonOpHour.
            
            The value is reset to null whenever LastCoveredNonOpHour is updated.
            
            Used in supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.LastCoveredNonOpHour">
            <summary>
            Contains the last non operating hour that occurred during the hours coverred by the test.
            
            Used in supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.LastHandledOpHour">
            <summary>
            Indicates the last hour for which potential updates to OperatingHourCount, LastCoveredNonOpHour and FirstOpHourAfterLastCoveredNonOpHour
            were handled.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.OperatingHourCount">
            <summary>
            The count of operating hours on or after the the test hour.  
            
            Used in supplemental data and should be the count from the test to the end of the quarter for any data used in supplemantal data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.DailyCalibrationSupplementalValues.Update(System.DateTime,System.Decimal)">
            <summary>
            Updates OperatingHourCount, LastCoveredNonOpHour and FirstOpHourAfterLastCoveredNonOpHour for an hour.
            
                OperatingHourCount: Updated when the op hour is a new hour and and an operating hour.
                LastCoveredNonOpHour: Update to the op hour when the hour falls within the 26 hours covered by the test starting with the test hour.
                FirstOpHourAfterLastCoveredNonOpHour: When null, set to a new hour when it is operating.
                                                      If LastCoveredNonOpHour is updated, FirstOpHourAfterLastCoveredNonOpHour is set to null.
            </summary>
            <param name="opHour">The operating hour for which the update is occuring.</param>
            <param name="opTime">The operating time for the hour.</param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData">
            <summary>
            
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.#ctor(ECMPS.Definitions.SeverityCode.eSeverityCd)">
            <summary>
            
            </summary>
            <param name="dailyCalibrationSeverityCd">The daily alibration category object's severity code.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.#ctor(System.Data.DataRowView,System.Data.DataView)">
            <summary>
            Creates Daily Calibration Test Data object from a Daily Test (Location) Supplemental Data row and a list
            of Daily Test System Supplemental Data rows.
            </summary>
            <param name="dailyTestLocationSuppDataRow">The Daily Test (Location) Supplemental Data row</param>
            <param name="dailyTestSystemSuppDataRows">The Daily Test System Supplemental Data rows.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.ComponentId">
            <summary>
            The Component Id for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.ComponentIdentifier">
            <summary>
            The Component Identifier for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.DailyCalibrationRow">
            <summary>
            The daily calibration row used to derive row related properties.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.DailyTestDateHour">
            <summary>
            The Daily Test Date-Hour for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.DailyTestDate">
            <summary>
            The Daily Test Date for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.DailyTestHour">
            <summary>
            The Daily Test Hour for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.DailyTestMinute">
            <summary>
            The Daily Test Minute for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.Online">
            <summary>
            The Online Offline Indicator for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.SeverityCd">
            <summary>
            The Severity Code for the Daily Calibration Test
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.SpanScaleCd">
            <summary>
            The Span Scale Code for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.CalculatedTestResultCd">
            <summary>
            The Calculated Test Result Code for this set of daily calibration data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.Valid">
            <summary>
            Indicates whether the test was valid (true), invalid (false) or incomplete (null).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.FromPreviousQuarter">
            <summary>
            Indicates whether this data from the previous quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.LocationSupplementalValues">
            <summary>
            Contains the values used to populate Daily Test Supplemental Data
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.MonLocId">
            <summary>
            The MON_LOC_ID for the test.  Used when updating operating information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.SystemSupplementalValuesDictionary">
            <summary>
            Contains a dictionary with a MON_SYS_ID key and Daily Calibration Supplemental Data values.
            
            This is only needed when primary and primary bypass stacks are reported as systems.
            This will allow operating information updates for specific systems (stacks).
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.UpdateOperatingInformation(System.String,System.DateTime,System.Decimal,System.Collections.Generic.Dictionary{System.String,System.Decimal})">
            <summary>
            Updates OperatingHourCount, LastCoveredNonOpHour and FirstOpHourAfterLastCoveredNonOpHour for an hour.
            
                OperatingHourCount: Updated when the op hour is a new hour and and an operating hour.
                LastCoveredNonOpHour: Update to the op hour when the hour falls within the 26 hours covered by the test starting with the test hour.
                FirstOpHourAfterLastCoveredNonOpHour: When null, set to a new hour when it is operating.
                                                      If LastCoveredNonOpHour is updated, FirstOpHourAfterLastCoveredNonOpHour is set to null.
            </summary>
            <param name="monLocId">MON_LOC_ID for the location being updated.</param>
            <param name="opHour">The operating hour for which the update is occuring.</param>
            <param name="opTime">The operating time for the hour.</param>
            <param name="systemOpTimeDictionary">Contains the MON_SYS_ID and operating times for the primary and primary bypass systems When a primary bypass is active.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.cDailyCalibrationTestData.LoadIntoSupplementalDataTables(System.Data.DataTable,System.Data.DataTable,System.Int32,System.Decimal)">
            <summary>
            Adds a row to SupplementalDataUpdateDataTable populated with the values suppDataCd and fromsupplementalDataGroup.
            </summary>
            <param name="SupplementalDataUpdateLocationDataTable"></param>
            <param name="SupplementalDataUpdateSystemDataTable"></param>
            <param name="rptPeriodId"></param>
            <param name="workspaceSessionId"></param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData">
            <summary>
            This class is used to capture last quality assured values for specific derived/monitored parameters and systems.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.#ctor(System.Int32,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eHourlyType,System.String,System.String)">
            <summary>
            This class is used to capture system operating day and hour counts. 
            </summary>
            <param name="rptPeriodId">The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.</param>
            <param name="monLocId">The primary key of the MONITOR_LOCATION table.</param>
            <param name="parameterCd">The parameter of the hourly data.</param>
            <param name="moistureBasis">The moisture basis for O2 concentration parameters.</param>
            <param name="hourlyType">Indicates the type of hourly data, derived or monitored.</param>
            <param name="monSysId">The primary key of the MONITOR_SYSTEM table.</param>
            <param name="componentId">The primary key of the COMPONENT table.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.RptPeriodId">
            <summary>
            The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.MonLocId">
            <summary>
            The primary key of the MONITOR_LOCATION being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.ParameterCd">
            <summary>
            The primary key of the PARAMETER_CODE being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.MoistureBasis">
            <summary>
            The moisture bases for O2 concentrations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.HourlyType">
            <summary>
            The primary key of the QA_CERT_EVENT being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.MonSysId">
            <summary>
            The primary key of the MONITOR_SYSTEM being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.ComponentId">
            <summary>
            The primary key of the COMPONENT being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.OpDateHour">
            <summary>
            The hour of the last quality assured hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.UnadjustedHourlyValue">
            <summary>
            The last quality assured unadjusted hourly value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.AdjustedHourlyValue">
            <summary>
            The last quality assured adjusted hourly value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.lastHandledOperatingHour">
            <summary>
            When populated, indicates the last operating hour for which an increament was handled.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.UpdateLastQualityAssuredValue(System.DateTime,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Updates the last quality assured hour if the current operating hour is after the last handled operating hour
            and the MODC indicates a quality assured hour.
            </summary>
            <param name="currentOperatingHour">The current operating hour for which the instance will update counts.</param>
            <param name="modcCd">The MODC code for the hourly record.</param>
            <param name="unadjustedHourlyValue">The unadjusted hourly value for the current hour and parameters (and system).</param>
            <param name="adjustedHourlyValue">The adjusted hourly value for the current hour and parameters (and system).</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.FormatKey(System.Int32,System.String,System.String,System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eHourlyType,System.String,System.String)">
            <summary>
            Returns the formated logical key based on the passed values.
            </summary>
            <param name="rptPeriodId">The reporting period key for the supplemental data.</param>
            <param name="monLocId">The monitor location key for the supplemental data.</param>
            <param name="parameterCd">The parameter code for the supplemental data.</param>
            <param name="moistureBasis">The moisture basis, D for dry and W for wet, for O2 concentraion supplemental data.</param>
            <param name="hourlyType">Determine whether the hourly source is monitored or derived.</param>
            <param name="monSysId">The monitor system key for the supplemental data.</param>
            <param name="componentId">The component key for the supplemental data.</param>
            <returns>The formatted locical key based on the logical key values for the supplemental data.</returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.QualityAssuredModcList">
            <summary>
            The list of MODC for quality assured hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.SupplementalDataUpdateDataTable">
            <summary>
            Contains the update data table object for supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.SupplementalDataUpdateDatabaseName">
            <summary>
            Contains the name of the update database for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.SupplementalDataUpdateSchemaName">
            <summary>
            Contains the name of the update schema for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.SupplementalDataUpdateTableName">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.SupplementalDataUpdateTablePath">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.LoadSupplementalDataUpdateDataTable(System.Collections.Generic.Dictionary{System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData}[],System.Decimal,System.Data.SqlClient.SqlConnection)">
            <summary>
            Creates a new instance of SupplementalDataUpdateDataTable and populates it with data from the passed dictionary array.  
            </summary>
            <param name="supplementalDataDictionaryArray">Dictionary containing data used to update the table.</param>
            <param name="workspaceSessionId">The workspace session id for check session.</param>
            <param name="connection">Database connection to use when creating the internal supplemental data table.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.Equals(System.Object)">
            <summary>
            Base object Equals override that checks for comparison to null, the same object, different types,
            and finally uses the type specific Equals.
            </summary>
            <param name="that">The object instance to compare against this instance.</param>
            <returns>Returns true of the objects are of the same type and have the same key contents.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.Equals(ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData)">
            <summary>
            Type specific Equals implementation that uses RptPeriodId, HourlyType, ParameterCd and MonSysId.
            </summary>
            <param name="that">The LastQualityAssuredValueSupplementalData instance to compare against this instance.</param>
            <returns>Returns true if the RptPeriodId, HourlyType, ParameterCd and MonSysId values are the same for the two instances.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.GetHashCode">
            <summary>
            GetHashCode override that uses RptPeriodId, HourlyType, ParameterCd and MonSysId.
            </summary>
            <returns>Returns the hash based on RptPeriodId, HourlyType, ParameterCd and MonSysId.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.LastQualityAssuredValueSupplementalData.ToString">
            <summary>
            Returns the Hourly Type, Parameter, MON_SYS_ID, RPT_PERIOD_ID and Value.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eHourlyType">
            <summary>
            Indicates the type of hourly data, derived or monitored.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eHourlyType.Derived">
            <summary>
            Derived Hourly Value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eHourlyType.Monitor">
            <summary>
            Monitored Hourly Value
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking">
            <summary>
            Tracks the last PMA and number of missing data hours for each MHV and DHV parameter.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.#ctor(System.Int32)">
            <summary>
            Initializes the Missing Data PMA Tracking Info object.
            </summary>
            <param name="currentLocationCount"></param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter">
            <summary>
            MHV and DHV Parameters with PMA.
            Used to produce array index, so do not create enum index gaps.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.DerivedCo2c">
            <summary>
            DHV CO2C
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.DerivedH2o">
            <summary>
            DHV H2O
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.DerivedNoxr">
            <summary>
            DHV NOXR
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.MonitorCo2c">
            <summary>
            MHV CO2C
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.MonitorFlow">
            <summary>
            MHV FLOW
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.MonitorH2o">
            <summary>
            MHV H2O
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.MonitorNoxc">
            <summary>
            MHV NOXC
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.MonitorO2d">
            <summary>
            MHV O2D
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.MonitorO2w">
            <summary>
            MHV O2W
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter.MonitorSo2c">
            <summary>
            MHV SO2C
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.GetHourlyParameterCd(ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter)">
            <summary>
            Return the parameter code for the eHourlyParameter enumeration.
            </summary>
            <param name="hourlyParameter">The hourly parameter enum.</param>
            <returns>The parameter code for the hourly parameter enum.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.GetHourlyType(ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter)">
            <summary>
            Return the hourly type for the eHourlyParameter enumeration.
            </summary>
            <param name="hourlyParameter">The hourly parameter enum.</param>
            <returns>The parameter code for the hourly parameter enum.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.IsDerived(ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter)">
            <summary>
            Return whether the eHourlyParameter enumeration is for derived data.
            </summary>
            <param name="hourlyParameter">The hourly parameter enum.</param>
            <returns>The parameter code for the hourly parameter enum.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.IsMonitored(ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter)">
            <summary>
            Return whether the eHourlyParameter enumeration is for monitored data.
            </summary>
            <param name="hourlyParameter">The hourly parameter enum.</param>
            <returns>The parameter code for the hourly parameter enum.</returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.HourlyParameterInfoArray">
            <summary>
            Array of tracking information for each hourly parameter.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.GetHourlyParamaterInfo(System.Int32,ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter,System.Int32@,System.Nullable{System.Decimal}@)">
            <summary>
            Returns the missing data hour count and last percent available for the given location postion and hourly parameter.
            </summary>
            <param name="locationPosition">The position for the current location.</param> 
            <param name="hourlyParameter">The MHV or DHV parameter for which to return information.</param>
            <param name="missingDataHourCount">The missing data hour count return value.</param>
            <param name="lastPercentAvailable">The last percent available return value.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.GetMissingDataHourCount(System.Int32,ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter)">
            <summary>
            Returns the missing data hour count for the given location postion and hourly parameter.
            </summary>
            <param name="locationPosition">The position for the current location.</param> 
            <param name="hourlyParameter">The MHV or DHV parameter for which to return information.</param>
            <returns>The missing data hour count.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.GetLastPercentAvailable(System.Int32,ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter)">
            <summary>
            Returns the last percent available for the given location postion and hourly parameter.
            </summary>
            <param name="locationPosition">The position for the current location.</param> 
            <param name="hourlyParameter">The MHV or DHV parameter for which to return information.</param>
            <returns>The last percent available.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.Update(System.Int32,System.DateTime,System.Decimal,ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter,System.String,System.Nullable{System.Decimal})">
            <summary>
            Updates the missing data count and last percent available information for the given hourly parameter.
            </summary>
            <param name="locationPosition">The position for the current location.</param> 
            <param name="opHour">The current operating hour including date.</param>
            <param name="opTime">The current operating time.</param>
            <param name="hourlyParameter">The MHV or DHV parameter for which the update should occur.</param>
            <param name="modcCd">The MODC for the current MHV or DHV record.</param>
            <param name="percentAvailable">The Percent Available for the current MHV or DHV record.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.TestInit(System.Int32,ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime})">
            <summary>
            Initializes the hourly parameter of the specified location for test purposes.
            </summary>
            <param name="locationPosition">The position of the location to update.</param>
            <param name="hourlyParameter">The hourly parameter to update.</param>
            <param name="missingDataHourCount">The initial test MissingDataHourCount value.</param>
            <param name="missingDataHourCountLastOpHour">The initial test MissingDataHourCountLastOpHour value.</param>
            <param name="lastPercentAvailable">The initial test LastPercentAvailable value.</param>
            <param name="lastPercentAvailableOpHour">The initial test LastPercentAvailableOpHour value.</param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo">
            <summary>
            Keeps track of the missing data hour count and last PMA.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.#ctor(ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTracking.eHourlyParameter)">
            <summary>
            Initializes a MissingDataPmaTrackingInfo class.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.MissingDataModcList">
            <summary>
            The list of MODC for quality assured hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.HourlyParameter">
            <summary>
            The hourly parameter type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.LastPercentAvailable">
            <summary>
            The last PMA for an operating hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.LastPercentAvailableOpHour">
            <summary>
            The operating hour of the Last Pervent Available.  Prevents double counting.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.MissingDataHourCount">
            <summary>
            The current number of missing data hours in the quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.MissingDataHourCountLastOpHour">
            <summary>
            The last operating hour counted for missing data.  Prevents double counting.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.Update(System.DateTime,System.Decimal,System.String,System.Nullable{System.Decimal})">
            <summary>
            Updates the missing data count and last percent available information.
            </summary>
            <param name="opHour">The current operating hour including date.</param>
            <param name="opTime">The current operating time.</param>
            <param name="modcCd">The MODC for the current MHV or DHV record.</param>
            <param name="percentAvailable">The Percent Available for the current MHV or DHV record.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.MissingDataPmaTrackingInfo.TestInit(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime})">
            <summary>
            Initializes the object for test purposes.
            </summary>
            <param name="missingDataHourCount">The initial test MissingDataHourCount value.</param>
            <param name="missingDataHourCountLastOpHour">The initial test MissingDataHourCountLastOpHour value.</param>
            <param name="lastPercentAvailable">The initial test LastPercentAvailable value.</param>
            <param name="lastPercentAvailableOpHour">The initial test LastPercentAvailableOpHour value.</param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData">
            <summary>
            This class is used to capture system operating day and hour counts. 
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.#ctor(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            This class is used to capture system operating day and hour counts. 
            </summary>
            <param name="rptPeriodId">The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.</param>
            <param name="id">The id under which the supplemental data is being tracked.</param>
            <param name="monLocId">The primary key to the MONITOR_LOCATION table for locations in the current emission report.</param>
            <param name="skipSavingModcCounts">Indicates whether to skip counting Quality Assured and Monitor Available hours.  Defaults to false.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.Key">
            <summary>
            Returns the logical key for the data contained in the instance.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.Id">
            <summary>
            The id under which the supplemental data is being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.MonLocId">
            <summary>
            The primary key to the MONITOR_LOCATION table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.RptPeriodId">
            <summary>
            The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.SkipSavingModcCounts">
            <summary>
            Indicates whether to skip counting Quality Assured and Monitor Available hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.QuarterlyOperatingCounts">
            <summary>
            Contains quarterly operating day and hours counts.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.QuarterlyQualityAssuredCounts">
            <summary>
            Contains quarterly quality assured operating day and hours counts.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.QuarterlyMonitorAvailableCounts">
            <summary>
            Contains monitor available operating day and hours counts.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.MayAndJuneOperatingCounts">
            <summary>
            Contains May and June operating day and hours counts for ozone season reporters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.MayAndJuneQualityAssuredCounts">
            <summary>
            Contains May and June quality assured operating day and hours counts for ozone season reporters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.MayAndJuneMonitorAvailableCounts">
            <summary>
            Contains May and June monitor available operating day and hours counts for ozone season reporters.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.IncreamentForCurrentHour(System.DateTime,System.String)">
            <summary>
            Increaments QuarterlyOperatingCounts, QuarterlyQualityAssuredCounts, QuarterlyMonitorAvailableCounts, MayAndJuneOperatingCounts, MayAndJuneQualityAssuredCounts and MayAndJuneMonitorAvailableCounts.
            
            
            QuarterlyOperatingCounts is increamented when an increament has not occured for date for the day count or hour for the hour count.
            
            QuarterlyQualityAssuredCounts is increamented when an increament has not occured for date for the day count or hour for the hour count, and the hour is a quality assured hour.
            
            QuarterlyMonitorAvailableCounts is increamented when an increament has not occured for date for the day count or hour for the hour count, and the hour is a monitor available hour.
            
            
            The following are only increameanted when the operating hour occurred in May or June:
            
                MayAndJuneOperatingCounts is increamented when an increament has not occured for date for the day count or hour for the hour count.
            
                MayAndJuneQualityAssuredCounts is increamented when an increament has not occured for date for the day count or hour for the hour count, and the hour is a quality assured hour.
            
                MayAndJuneMonitorAvailableCounts is increamented when an increament has not occured for date for the day count or hour for the hour count, and the hour is a monitor available hour.
            </summary>
            <param name="currentOperatingHour">The current operating hour for which the instance will update counts.</param>
            <param name="modcCd">The MODC for which qaulity assured and monitor availabe counts will be updated.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.ResetValuesForTesting(System.UInt16,System.UInt16,System.Nullable{ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataTimePeriod},System.Nullable{ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataCountType})">
            <summary>
            TESTING ONLY: Initializes count values.
            </summary>
            <param name="days">The day count for testing.</param>
            <param name="hours">The hour count for testing.</param>
            <param name="timePeriod">The time period of the day and hour counts to initialize.</param>
            <param name="countType">The count type of the day and hour counts to initialize.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.FormatKey(System.String,System.Int32)">
            <summary>
            Returns the formated logical key based on the passed values.
            </summary>
            <param name="id">The key for the supplemental data.</param>
            <param name="rptPeriodId">The reporting period key for the supplemental data.</param>
            <returns>The formatted locical key based on the system and reporting period keys.</returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.MonitorAvailableModcList">
            <summary>
            The list of MODC for monitor availabe hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.QualityAssuredModcList">
            <summary>
            The list of MODC for quality assured hours.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.LoadSupplementalDataUpdateDataDoRow(ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData,System.String,System.Data.DataTable,System.Decimal)">
            <summary>
            Creates a new instance of SupplementalDataUpdateDataTable and populates it with data from the passed dictionary array.  
            </summary>
            <param name="supplementalData">The data used to update the table.</param>
            <param name="idColumnName">The name of the id column used as the supplemental data key.</param>
            <param name="SupplementalDataUpdateDataTable">Table to update with data.</param>
            <param name="workspaceSessionId">The workspace session id for check session.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.LoadSupplementalDataUpdateDataDoRow(System.String,System.String,System.Data.DataTable,ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup,System.Decimal)">
            <summary>
            Adds a row to SupplementalDataUpdateDataTable populated with the values suppDataCd and fromsupplementalDataGroup.
            </summary>
            <param name="suppDataCd">The operating supplemental data code for the supplementalDataGroup data.</param>
            <param name="idColumnName">The name of the id column used as the supplemental data key.</param>
            <param name="SupplementalDataUpdateDataTable">Table to update with data.</param>
            <param name="supplementalDataGroup">The counts from which to populate the row.</param>
            <param name="workspaceSessionId">The workspace session id for check session.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.Equals(System.Object)">
            <summary>
            Base object Equals override that checks for comparison to null, the same object, different types,
            and finally uses the type specific Equals.
            </summary>
            <param name="that">The object instance to compare against this instance.</param>
            <returns>Returns true of the objects are of the same type and have the same key contents.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.Equals(ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData)">
            <summary>
            Type specific Equals implementation that uses MonSysId and RptPeriodId.
            </summary>
            <param name="that">The SystemOperatingSupplementalData instance to compare against this instance.</param>
            <returns>Returns true if the MonSysId and RptPeriodId values are the same for the two instances.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.GetHashCode">
            <summary>
            GetHashCode override that uses MonSysId and RptPeriodId.
            </summary>
            <returns>Returns the hash based on MonSysId and RptPeriodId.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData.ToString">
            <summary>
            Returns the Monitor System and Reporting Period Ids
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup">
            <summary>
            This class is used to capture system operating day and hour counts. 
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.#ctor(ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataTimePeriod,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataCountType)">
            <summary>
            This class is used to capture system operating day and hour counts. 
            </summary>
            <param name="parent">The parent  OperatingSupplementalData object.</param>
            <param name="timePeriod">Indicates what time period the object represents.</param>
            <param name="countType">Indicates what type of count the object represents.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.#ctor(ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalData,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataTimePeriod,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataCountType,System.UInt16,System.UInt16)">
            <summary>
            This constructor is used to initialize day and hour count for testing. 
            </summary>
            <param name="parent">The parent  OperatingSupplementalData object.</param>
            <param name="timePeriod">Indicates what time period the object represents.</param>
            <param name="countType">Indicates what type of count the object represents.</param>
            <param name="days">The initial day count.</param>
            <param name="hours">The initial hour count.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.Parent">
            <summary>
            The parent OperatingSupplementalData object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.TimePeriod">
            <summary>
            Indicates the time period represented by OperatingSupplementalDataGroup values. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.CountType">
            <summary>
            Indicates type of count represented by OperatingSupplementalDataGroup values. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.Id">
            <summary>
            The id under which the supplemental data is being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.MonLocId">
            <summary>
            The primary key to the MONITOR_LOCATION table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.RptPeriodId">
            <summary>
            The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.Days">
            <summary>
            The number of operating days in the current quarter for which the system was used to report a value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.Hours">
            <summary>
            The number of operating hours in the current quarter for which the system was used to report a value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.lastHandledOperatingHour">
            <summary>
            When populated, indicates the last operating hour for which an increament was handled.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.IncreamentForCurrentHour(System.DateTime)">
            <summary>
            Increaments Days and Hours.
            
            Days is increamented when an increament has not occurred for the date of the current hour.
            Hours is increamented when an increament has not occurred for the current hour.
            </summary>
            <param name="currentOperatingHour">The current operating hour for which the instance will update counts.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.Equals(System.Object)">
            <summary>
            Base object Equals override that checks for comparison to null, the same object, different types,
            and finally uses the type specific Equals.
            </summary>
            <param name="that">The object instance to compare against this instance.</param>
            <returns>Returns true of the objects are of the same type and have the same key contents.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.Equals(ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup)">
            <summary>
            Type specific Equals implementation that uses Parent, TimePeriod and CountType.
            </summary>
            <param name="that">The OperatingSupplementalDataGroup instance to compare against this instance.</param>
            <returns>Returns true if the Parent, TimePeriod and CountType values are the same for the two instances.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.GetHashCode">
            <summary>
            GetHashCode override that uses Parent, TimePeriod and CountType.
            </summary>
            <returns>Returns the hash based on Parent, TimePeriod and CountType.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.OperatingSupplementalDataGroup.ToString">
            <summary>
            Returns the Parent, TimePeriod and CountType.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataCountType">
            <summary>
            Indicates the type of count represented by QaCertificationSupplementalDataGroup values.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataCountType.MonitorAvailable">
            <summary>
            Indicates that the data group reporesents monitor available counts.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataCountType.Operating">
            <summary>
            Indicates that the data group represents operating hour counts.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataCountType.QualityAssured">
            <summary>
            Indicates that the data group reporesents quality assured hour counts.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataTimePeriod">
            <summary>
            Indicates the time period represented by QaCertificationSupplementalDataGroup values.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataTimePeriod.Quarterly">
            <summary>
            Indicates that the data group represents values for the whole quarter.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eOperatingSupplementalDataTimePeriod.MayAndJune">
            <summary>
            Indicates that the data group reporesents values for May and June for non annual ozone season reporters
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData">
            <summary>
            This class is used to capture QA certification event operating day and hour counts. 
            
            1. The class will capture counts during the evaluation of an emission report whenever the QA Certification Event Date
               or Conditional Data Begin Date fall within the quarter for the emission report an the QA Certification Event is for
               a location in the emission report.
            2. The class will capture the number of operating days in the quarter of the event date that occur after the event date
               when the event date occurs in the quarter of the emission report.
            3. The class will capture the number of operating hours in the quarter of the conditional data begin date that occur 
               after the conditional data begin hour.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.#ctor(System.Int32,System.String,System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTargetDateHour,System.DateTime)">
            <summary>
            
            </summary>
            <param name="rptPeriodId">The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.</param>
            <param name="monLocId">The primary key of the MONITOR_LOCATION.</param>
            <param name="qaCertEventId">The primary key of the QA_CERT_EVENT.</param>
            <param name="targetDatehourCode">Indicates whether the count is based on the QA Cert Event Datehour or Conditiona Data Begin Datehour.</param>
            <param name="targetDatehourValue">The actual value of the datehour on which the count will be based.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.QaCertEventId">
            <summary>
            The primary key of the QA_CERT_EVENT being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.MonLocId">
            <summary>
            The primary key of the QA_CERT_EVENT being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.RptPeriodId">
            <summary>
            The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.TargetDatehourCode">
            <summary>
            Indicates whether the count is based on the QA Cert Event Datehour or Conditiona Data Begin Datehour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.TargetDatehourValue">
            <summary>
            The actual value of the datehour on which the count will be based.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.TimeType">
            <summary>
            Indicates whether the count is of days or hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.QuarterlyOperatingCounts">
            <summary>
            Contains quarterly operating day and hours counts.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.QuarterlySystemOperatingCounts">
            <summary>
            Contains quarterly system operating day and hours counts.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.QuarterlyComponentOperatingCounts">
            <summary>
            Contains quarterly component operating day and hours counts.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.QuarterlySystemQualityAssuredCounts">
            <summary>
            Contains quarterly system quality assured operating day and hours counts.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.QuarterlyComponentQualityAssuredCounts">
            <summary>
            Contains quarterly component quality assured operating day and hours counts.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.MayAndJuneOperatingCounts">
            <summary>
            Contains May and June operating day and hours counts for ozone season reporters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.MayAndJuneSystemOperatingCounts">
            <summary>
            Contains May and June system operating day and hours counts for ozone season reporters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.MayAndJuneComponentOperatingCounts">
            <summary>
            Contains May and June component operating day and hours counts for ozone season reporters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.MayAndJuneSystemQualityAssuredCounts">
            <summary>
            Contains May and June system quality assured operating day and hours counts for ozone season reporters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.MayAndJuneComponentQualityAssuredCounts">
            <summary>
            Contains May and June component quality assured operating day and hours counts for ozone season reporters.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.IncreamentComponentCounts(System.DateTime,System.String)">
            <summary>
            Increaments QuarterlyComponentOperatingCounts, QuarterlySystemQualityAssuredCounts, MayAndJuneComponentOperatingCounts and 
            MayAndJuneSystemQualityAssuredCounts.
            
            QuarterlyComponentQualityAssuredCounts values are increamented when the date of the current hour is on or after the event date, 
            the MODC indicates a quality assured hour, and an increament has not occurred for the date of the current hour.
            
            MayAndJuneComponentQualityAssuredCounts values are increamented when the date of the current hour is on or after the event date, 
            the MODC indicates a quality assured hour, the current hour is in May or June, and an increament has not occurred for the 
            date of the current hour.
            </summary>
            <param name="currentOperatingHour">The current operating hour for which the instance will update counts.</param>
            <param name="modcCd">The MODC code for the hourly record.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.IncreamentOperatingCounts(System.DateTime)">
            <summary>
            Increaments QaCertEventQuarterOpDays, ConditionalDataBeginQuarterOpHours and ConditionalDataBeginQuarterOsHours.
            
            QaCertEventQuarterOpDays is increamented when the date of the current hour is after the event date, and an increament
            has not occurred for the date of current hour.
            
            ConditionalDataBeginQuarterOpHours is increamented when current hour is after the conditional data peeriod begin hour.
            
            ConditionalDataBeginQuarterOsHours is increamented when current hour is after the conditional data peeriod begin hour
            and it falls in an ozone season.
            </summary>
            <param name="currentOperatingHour">The current operating hour for which the instance will update counts.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.IncreamentSystemCounts(System.DateTime,System.String)">
            <summary>
            Increaments QuarterlySystemOperatingCounts, QuarterlySystemQualityAssuredCounts, MayAndJuneSystemOperatingCounts and 
            MayAndJuneSystemQualityAssuredCounts.
            
            QuarterlySystemQualityAssuredCounts values are increamented when the date of the current hour is on or after the event date, 
            the MODC indicates a quality assured hour, and an increament has not occurred for the date of the current hour.
            
            MayAndJuneSystemQualityAssuredCounts values are increamented when the date of the current hour is on or after the event date, 
            the MODC indicates a quality assured hour, the current hour is in May or June, and an increament has not occurred for the 
            date of the current hour.
            </summary>
            <param name="currentOperatingHour">The current operating hour for which the instance will update counts.</param>
            <param name="modcCd">The MODC code for the hourly record.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.FormatKey(System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTargetDateHour)">
            <summary>
            Returns the formated logical key based on the passed values.
            </summary>
            <param name="qaCertEventId"></param>
            <param name="targetDatehourCode"></param>
            <returns>The formatted locical key based on the logical key values for the supplemental data.</returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.QualityAssuredModcList">
            <summary>
            The list of MODC for quality assured hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.SupplementalDataUpdateDataTable">
            <summary>
            Contains the update data table object for supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.SupplementalDataUpdateDatabaseName">
            <summary>
            Contains the name of the update database for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.SupplementalDataUpdateSchemaName">
            <summary>
            Contains the name of the update schema for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.SupplementalDataUpdateTableName">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.SupplementalDataUpdateTablePath">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.LoadSupplementalDataUpdateDataTable(System.Collections.Generic.Dictionary{System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData}[],System.Decimal,System.Data.SqlClient.SqlConnection)">
            <summary>
            Creates a new instance of SupplementalDataUpdateDataTable and populates it with data from the passed dictionary array.  
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.LoadSupplementalDataUpdateDataRow(System.String,System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup,System.Decimal)">
            <summary>
            Adds a row to SupplementalDataUpdateDataTable populated with the values suppDataCd and fromsupplementalDataGroup.
            </summary>
            <param name="suppDataCd">The QA Certification Event supplemental data code for the supplementalDataGroup data.</param>
            <param name="suppDateCd">Indicates whether the counts for for QA Cert Event days or Conditional Data Begin hours.</param>
            <param name="supplementalDataGroup">The count, date and hour data from which to populate the row.</param>
            <param name="workspaceSessionId">The workspace session id for check session.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.Equals(System.Object)">
            <summary>
            Base object Equals override that checks for comparison to null, the same object, different types,
            and finally uses the type specific Equals.
            </summary>
            <param name="that">The object instance to compare against this instance.</param>
            <returns>Returns true of the objects are of the same type and have the same key contents.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.Equals(ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData)">
            <summary>
            Type specific Equals implementation that uses QaCertEventId, MonLocId, RptPeriodId, TargetDatehourCode and TargetDatehourValue.
            </summary>
            <param name="that">The QaCertficationSupplementalDataClass instance to compare against this instance.</param>
            <returns>Returns true if the QaCertEventId, MonLocId, RptPeriodId, TargetDatehourCode and TargetDatehourValue values are the same for the two instances.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.GetHashCode">
            <summary>
            GetHashCode override that uses QaCertEventId, MonLocId, RptPeriodId, TargetDatehourCode and TargetDatehourValue.
            </summary>
            <returns>Returns the hash based on QaCertEventId, MonLocId, RptPeriodId, TargetDatehourCode and TargetDatehourValue.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData.ToString">
            <summary>
            Returns the QA Cert Event Id
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTargetDateHour">
            <summary>
            Indicates on which date/hour column in a QA Certification Event row the count is based.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTargetDateHour.ConditionalDataBeginHour">
            <summary>
            The Conditional Data Begin Hour of the QA Certification Event.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTargetDateHour.QaCertEventDate">
            <summary>
            The Certification Event Date of the QA Certification Event.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTimeType">
            <summary>
            Indicates on which date/hour column in a QA Certification Event row the count is based
            and wether the counts is of days or hours.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTimeType.Hour">
            <summary>
            Count hours.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTimeType.Day">
            <summary>
            Count days.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup">
            <summary>
            This class is used to capture QA certification event operating day and hour counts. 
            
            1. The class will capture counts during the evaluation of an emission report whenever the QA Certification Event Date
               or Conditional Data Begin Date fall within the quarter for the emission report an the QA Certification Event is for
               a location in the emission report.
            2. The class will capture the number of operating days in the quarter of the event date that occur after the event date
               when the event date occurs in the quarter of the emission report.
            3. The class will capture the number of operating hours in the quarter of the conditional data begin date that occur 
               after the conditional data begin hour.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.#ctor(ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalData,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTimePeriod,ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataCountType,System.Int32,System.Int32)">
            <summary>
            Tracks an increaments operating and quality assured operating hours for QA Certification Events.
            </summary>
            <param name="parent">The parent QaCertificationSupplementalData object.</param>
            <param name="timePeriod">Indicates what time period the object represents.</param>
            <param name="countType">Indicates what type of count the object represents.</param>
            <param name="year">The primary key of the QA_CERT_EVENT.</param>
            <param name="quarter">The primary key of the QA_CERT_EVENT.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.Parent">
            <summary>
            The parent QaCertificationSupplementalData object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.TargetDatehourCode">
            <summary>
            Indicates whether the count is based on the QA Cert Event Datehour or Conditiona Data Begin Datehour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.TargetDatehourValue">
            <summary>
            The value of the target datehour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.TimeType">
            <summary>
            Indicates whether to count days or hours. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.TimePeriod">
            <summary>
            Indicates the time period represented by QaCertificationSupplementalDataGroup values. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.CountType">
            <summary>
            Indicates type of count represented by QaCertificationSupplementalDataGroup values. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.QaCertEventId">
            <summary>
            The primary key of the QA_CERT_EVENT being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.MonLocId">
            <summary>
            The primary key of the MON_LOC_ID being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.RptPeriodId">
            <summary>
            The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.TargetIsInCount">
            <summary>
            Indicates whether the QA_CERT_EVENT_DATE is in the day count.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.Count">
            <summary>
            The number of counted days in the quarter of the QA_CERT_EVENT_DATE and on or after the date.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.lastHandledOperatingHour">
            <summary>
            When populated, indicates the last operating hour for which an increament was handled.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.IncreamentForCurrentHour(System.DateTime)">
            <summary>
            Increaments QaCertEventQuarterDays and ConditionalDataBeginQuarterHours.
            
            QaCertEventQuarterDays is increamented when the date of the current hour is after the event date, and an increament
            has not occurred for the date of the current hour.
            
            ConditionalDataBeginQuarterHours is increamented when current hour is after the conditional data peeriod begin hour.
            
            QaCertEventDateIsInDayCount and ConditionalDataBeginDatehourIsInHourCount are set to true when their respective
            counts are increamented and either the day for QaCertEventDateIsInDayCount or the hour for 
            ConditionalDataBeginDatehourIsInHourCount is the current day or hour.
            </summary>
            <param name="currentOperatingHour">The current operating hour for which the instance will update counts.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.Equals(System.Object)">
            <summary>
            Base object Equals override that checks for comparison to null, the same object, different types,
            and finally uses the type specific Equals.
            </summary>
            <param name="that">The object instance to compare against this instance.</param>
            <returns>Returns true of the objects are of the same type and have the same key contents.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.Equals(ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup)">
            <summary>
            Type specific Equals implementation that uses Parent, TimePeriod and CountType.
            </summary>
            <param name="that">The QaCertificationSupplementalDataGroup instance to compare against this instance.</param>
            <returns>Returns true if the Parent, TimePeriod and CountType values are the same for the two instances.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.GetHashCode">
            <summary>
            GetHashCode override that uses Parent, TimePeriod and CountType.
            </summary>
            <returns>Returns the hash based on Parent, TimePeriod and CountType.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.QaCertificationSupplementalDataGroup.ToString">
            <summary>
            Returns the Parent, TargetDateHour, TimeType, TimePeriod and CountType
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataCountType">
            <summary>
            Indicates the type of count represented by QaCertificationSupplementalDataGroup values.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataCountType.Operating">
            <summary>
            Indicates that the data group represents operating hour counts.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataCountType.SystemOperating">
            <summary>
            Indicates that the data group reporesents system operating hour counts.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataCountType.ComponentOperating">
            <summary>
            Indicates that the data group reporesents component operating hour counts.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataCountType.SystemQualityAssured">
            <summary>
            Indicates that the data group reporesents system quality assured hour counts.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataCountType.ComponentQualityAssured">
            <summary>
            Indicates that the data group reporesents component quality assured hour counts.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTimePeriod">
            <summary>
            Indicates the time period represented by QaCertificationSupplementalDataGroup values.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTimePeriod.Quarterly">
            <summary>
            Indicates that the data group represents values for the whole quarter.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.CheckEngine.SpecialParameterClasses.eQaCertificationSupplementalDataTimePeriod.MayAndJune">
            <summary>
            Indicates that the data group reporesents values for May and June for non annual ozone season reporters
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation">
            <summary>
            Class used to store sampling train information for individual systems.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a SamplingTrainEvalInformation object and initializes the following fields:
            
            TotalSFSRRatioCount: 0
            DeviatedSFSRRatioCount: 0
            TotalGfmCount: 0
            NotAvailablelGfmCount: 0
            </summary>
            <param name="trapTrainId">The primary key value for the sampling train.</param>
            <param name="isBorderTrain">Indicates whether the sorbent trap for the sampling train is a beginning or ending border trap for the quarter.</param>
            <param name="isSupplementalData">Indicates whether the sampling trains is for a border trap from the previous quarter.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.SupplementalDataUpdateDataTable">
            <summary>
            Contains the update data table object for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.SupplementalDataUpdateCatalogName">
            <summary>
            Contains the name of the update catalog (database) for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.SupplementalDataUpdateTableName">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.HgConcentration">
            <summary>
            The Hg Concentration of the sampling train.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.TrainQAStatusCode">
            <summary>
            The QA Status Code of the sampling train.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.ReferenceSFSRRatio">
            <summary>
            The Reference SFSR Ratio of the sampling train.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.TotalSFSRRatioCount">
            <summary>
            The total count of gas flow meter SFSR Ratios.
            
            Initialized to 0.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.DeviatedSFSRRatioCount">
            <summary>
            The count of gas flow meter SFSR Ratios deviated too greatly from the reference ratio.
            
            Initialized to 0.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.IsBorderTrain">
            <summary>
            Indicates whether the sampling train is for a border trap.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.IsSupplementalData">
            <summary>
            Indicates whether the sampling train is from supplemental data from the previous quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.TotalGfmCount">
            <summary>
            The total count of hourly GFM.
            
            Initialized to 0.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.NotAvailablelGfmCount">
            <summary>
            The total count of hourly GFM with Begin-End Flag of 'N'.
            
            Initialized to 0.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.SamplingTrainValid">
            <summary>
            Indicates whether the sampling train is valid (passed its checks).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.TrapTrainId">
            <summary>
            Contains the primary key value of the represented sampling train.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation.LoadSupplementalDataUpdateRow(System.Decimal)">
            <summary>
            Creates a new row in the static SupplementalDataUpdateDataTable for the data in 
            the current instance, but skips the creation if the data is supplemenal data.
            
            The creation populates the follwoing columns:
            
            * SESSION_ID
            * TRAP_TRAIN_ID
            * SFSR_TOTAL_COUNT
            * SFSR_DEVIATED_COUNT
            * GFM_TOTAL_COUNT
            * GFM_NOT_AVAILABLE_COUNT
            
            Exception will occur if the data table object is null or the columns do not exist
            in the table.
            </summary>
            <param name="workspaceSessionId">The id of the workspace session for the evaluations.</param>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation">
            <summary>
            Class used to store sorbent trap information for individual locations.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.#ctor">
            <summary>
            Creates a SorbentTrapEvalInformation object and initializes the following fields:
            
            SorbentTrapValidExists: false
            SorbentTrapFromPreviousQuarter: false
            SorbentTrapEndDateHour: null
            SamplingTrainProblemComponentExists: false
            SamplingTrainDictionary: new dictionary
            OperatingDateList: new List
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.AddOperatingDate(System.DateTime)">
            <summary>
            Adds the date portion of the passed DateTime to OperatingDateList if the date is not already in the list.
            </summary>
            <param name="opDate">The datetime value to add to the list.</param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.AddSamplingTrain(System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.SamplingTrainEvalInformation)">
            <summary>
            Adds a sampling train object to the sampling train dictionary for the indicated monLocId
            </summary>
            <param name="monLocId"></param>
            <param name="samplingTrain"></param>
            <returns></returns>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.IsBorderTrap">
            <summary>
            Indicates whether the current sorbent trap spans quarter boundries.
            
            Defaults to false.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.IsSupplementalData">
            <summary>
            Indicates whether the current sorbent trap spans quarter boundries.
            
            Defaults to false.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.SorbentTrapValidExists">
            <summary>
            Indicates whether a valid sorbent trap exists form the current emission report
            and for the hour and location being processed.
            
            Defaults to false.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.SorbentTrapId">
            <summary>
            The TRAP_ID for the sorbent trap record.
            
            Defaults to null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.SorbentTrapBeginDateHour">
            <summary>
            Contains the Begin DateHour for the current sorbent trap, whether from the previous or current emission report.
            
            Default to null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.SorbentTrapEndDateHour">
            <summary>
            Contains the End DateHour for the current sorbent trap, whether from the previous or current emission report.
            
            Default to null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.SorbentTrapModcCd">
            <summary>
            The MODC_CD for the sorbent trap record.
            
            Defaults to null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.SamplingTrainProblemComponentExists">
            <summary>
            Indicates whether a problem exists in the component id or type for a sampling train associates with the sorbent trap.
            
            Defaults to false.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.SamplingTrainList">
            <summary>
            Contains the sampling trains dictionary for trains associated with the sorbent trap.
            
            Default to an empty dictionary.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SorbentTrapEvalInformation.OperatingDateList">
            <summary>
            Contains a distinct list of operating dates for the sorbent trap.
            The list is updated over the time period for the trap and checked after the last hour for the trap.
            
            Default to an empty list.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData">
            <summary>
            This class is used to capture system operating day and hour counts. 
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.#ctor(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            This class is used to capture system operating day and hour counts. 
            </summary>
            <param name="rptPeriodId">The primary key of the REPORTING_PERIOD table and indicating the quarter of the emission report.</param>
            <param name="monSysId">The primary key of the MONITOR_SYSTEM table.</param>
            <param name="monLocId">The primary key of the MONITOR_LOCATION table.</param>
            <param name="skipSavingModcCounts">Indicates whether to skip counting Quality Assured and Monitor Available hours.  Defaults to false.</param>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.MonSysId">
            <summary>
            The primary key of the MONITOR_SYSTEM being tracked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.SupplementalDataUpdateDataTable">
            <summary>
            Contains the update data table object for supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.SupplementalDataUpdateDatabaseName">
            <summary>
            Contains the name of the update database for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.SupplementalDataUpdateSchemaName">
            <summary>
            Contains the name of the update schema for the supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.SupplementalDataUpdateTableName">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.SupplementalDataUpdateTablePath">
            <summary>
            Contains the name of the update table for sampling trian supplemental data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.LoadSupplementalDataUpdateDataTable(System.Collections.Generic.Dictionary{System.String,ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData}[],System.Decimal,System.Data.SqlClient.SqlConnection)">
            <summary>
            Creates a new instance of SupplementalDataUpdateDataTable and populates it with data from the passed dictionary array.  
            </summary>
            <param name="supplementalDataDictionaryArray">Dictionary containing data used to update the table.</param>
            <param name="workspaceSessionId">The workspace session id for check session.</param>
            <param name="connection">Database connection to use when creating the internal supplemental data table.</param>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.Equals(System.Object)">
            <summary>
            Base object Equals override that checks for comparison to null, the same object, different types,
            and finally uses the type specific Equals.
            </summary>
            <param name="that">The object instance to compare against this instance.</param>
            <returns>Returns true of the objects are of the same type and have the same key contents.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.Equals(ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData)">
            <summary>
            Type specific Equals implementation that uses MonSysId and RptPeriodId.
            </summary>
            <param name="that">The SystemOperatingSupplementalData instance to compare against this instance.</param>
            <returns>Returns true if the MonSysId and RptPeriodId values are the same for the two instances.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.GetHashCode">
            <summary>
            GetHashCode override that uses MonSysId and RptPeriodId.
            </summary>
            <returns>Returns the hash based on MonSysId and RptPeriodId.</returns>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.SystemOperatingSupplementalData.ToString">
            <summary>
            Returns the Monitor System and Reporting Period Ids
            </summary>
            <returns></returns>
        </member>
        <member name="T:ECMPS.Checks.CheckEngine.SpecialParameterClasses.WsiTestStatusInformation">
            <summary>
            Class used to store weekly system integrity test information for individual components.
            The information is updated in the weekly system integrity test checks and used in the 
            weekly system integrity status checks.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.CheckEngine.SpecialParameterClasses.WsiTestStatusInformation.#ctor">
            <summary>
            Creates an new instance of the class with OperatingDateList initialized to an empty date list.
            All other instance variables are initialized to null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.WsiTestStatusInformation.MostRecentTestRecord">
            <summary>
            The most recent WSI test record before the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.CheckEngine.SpecialParameterClasses.WsiTestStatusInformation.OperatingDateList">
            <summary>
            The list of operating dates for the MostRecentTestRecrod.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData">
            Ecmps.CheckEm.Function.ComponentOpSuppData
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="compOpSuppDataId">COMP_OP_SUPP_DATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opSuppDataTypeCd">OP_SUPP_DATA_TYPE_CD</param>
            <param name="days">DAYS</param>
            <param name="hours">HOURS</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.CompOpSuppDataId">
            COMP_OP_SUPP_DATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.OpSuppDataTypeCd">
            OP_SUPP_DATA_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.Days">
            DAYS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.Hours">
            HOURS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ComponentOpSuppData.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="compOpSuppDataId">COMP_OP_SUPP_DATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opSuppDataTypeCd">OP_SUPP_DATA_TYPE_CD</param>
            <param name="days">DAYS</param>
            <param name="hours">HOURS</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData">
            Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="dailyTestDatetime">DAILY_TEST_DATETIME</param>
            <param name="dailyTestDatehour">DAILY_TEST_DATEHOUR</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="upscaleInjectionDatetime">UPSCALE_INJECTION_DATETIME</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="upscaleOpTime">UPSCALE_OP_TIME</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="zeroInjectionDatetime">ZERO_INJECTION_DATETIME</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="zeroOpTime">ZERO_OP_TIME</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="firstTestDate">FIRST_TEST_DATE</param>
            <param name="firstTestHour">FIRST_TEST_HOUR</param>
            <param name="firstTestMin">FIRST_TEST_MIN</param>
            <param name="firstTestDatetime">FIRST_TEST_DATETIME</param>
            <param name="facId">FAC_ID</param>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="formattedTestDate">FORMATTED_TEST_DATE</param>
            <param name="overlapExists">OVERLAP_EXISTS</param>
            <param name="upscaleGasTypeCd">UPSCALE_GAS_TYPE_CD</param>
            <param name="vendorId">VENDOR_ID</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.DailyTestDate">
            DAILY_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.DailyTestHour">
            DAILY_TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.DailyTestMin">
            DAILY_TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.DailyTestDatetime">
            DAILY_TEST_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.DailyTestDatehour">
            DAILY_TEST_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.OnlineOfflineInd">
            ONLINE_OFFLINE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleGasLevelCd">
            UPSCALE_GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleInjectionDate">
            UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleInjectionHour">
            UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleInjectionMin">
            UPSCALE_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleInjectionDatetime">
            UPSCALE_INJECTION_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleMeasuredValue">
            UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleRefValue">
            UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleCalError">
            UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleApsInd">
            UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleOpTime">
            UPSCALE_OP_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroInjectionDate">
            ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroInjectionHour">
            ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroInjectionMin">
            ZERO_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroInjectionDatetime">
            ZERO_INJECTION_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroMeasuredValue">
            ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroRefValue">
            ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroCalError">
            ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroApsInd">
            ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ZeroOpTime">
            ZERO_OP_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.FirstTestDate">
            FIRST_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.FirstTestHour">
            FIRST_TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.FirstTestMin">
            FIRST_TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.FirstTestDatetime">
            FIRST_TEST_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.CalInjId">
            CAL_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.DailyTestSumId">
            DAILY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.FormattedTestDate">
            FORMATTED_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.OverlapExists">
            OVERLAP_EXISTS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.UpscaleGasTypeCd">
            UPSCALE_GAS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.VendorId">
            VENDOR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.CylinderId">
            CYLINDER_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.ExpirationDate">
            EXPIRATION_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyCalibrationTestPeriodData.Set(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="dailyTestDatetime">DAILY_TEST_DATETIME</param>
            <param name="dailyTestDatehour">DAILY_TEST_DATEHOUR</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="upscaleInjectionDatetime">UPSCALE_INJECTION_DATETIME</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="upscaleOpTime">UPSCALE_OP_TIME</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="zeroInjectionDatetime">ZERO_INJECTION_DATETIME</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="zeroOpTime">ZERO_OP_TIME</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="firstTestDate">FIRST_TEST_DATE</param>
            <param name="firstTestHour">FIRST_TEST_HOUR</param>
            <param name="firstTestMin">FIRST_TEST_MIN</param>
            <param name="firstTestDatetime">FIRST_TEST_DATETIME</param>
            <param name="facId">FAC_ID</param>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="formattedTestDate">FORMATTED_TEST_DATE</param>
            <param name="overlapExists">OVERLAP_EXISTS</param>
            <param name="upscaleGasTypeCd">UPSCALE_GAS_TYPE_CD</param>
            <param name="vendorId">VENDOR_ID</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData">
            Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="dailyTestDatetime">DAILY_TEST_DATETIME</param>
            <param name="dailyTestDatehour">DAILY_TEST_DATEHOUR</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.DailyTestSumId">
            DAILY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.DailyTestDate">
            DAILY_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.DailyTestHour">
            DAILY_TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.DailyTestMin">
            DAILY_TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.DailyTestDatetime">
            DAILY_TEST_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.DailyTestDatehour">
            DAILY_TEST_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.CalcTestResultCd">
            CALC_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.DailyMiscellaneousTestPeriodData.Set(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="dailyTestDatetime">DAILY_TEST_DATETIME</param>
            <param name="dailyTestDatehour">DAILY_TEST_DATEHOUR</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData">
            Ecmps.CheckEm.Function.MATSDerivedHourlyValueData
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
            <param name="formulaActiveInd">FORMULA_ACTIVE_IND</param>
            <param name="matsDhvId">MATS_DHV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.EquationCd">
            EQUATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.FormulaActiveInd">
            FORMULA_ACTIVE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.MatsDhvId">
            MATS_DHV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.MonFormId">
            MON_FORM_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSDerivedHourlyValueData.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
            <param name="formulaActiveInd">FORMULA_ACTIVE_IND</param>
            <param name="matsDhvId">MATS_DHV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord">
            Ecmps.CheckEm.Function.MatsHourlyGfmRecord
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.#ctor(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="beginEndHourFlg">BEGIN_END_HOUR_FLG</param>
            <param name="gfmReading">GFM_READING</param>
            <param name="avgSamplingRate">AVG_SAMPLING_RATE</param>
            <param name="samplingRateUom">SAMPLING_RATE_UOM</param>
            <param name="flowToSamplingRatio">FLOW_TO_SAMPLING_RATIO</param>
            <param name="hrlyGfmId">HRLY_GFM_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.BeginEndHourFlg">
            BEGIN_END_HOUR_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.GfmReading">
            GFM_READING
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.AvgSamplingRate">
            AVG_SAMPLING_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.SamplingRateUom">
            SAMPLING_RATE_UOM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.FlowToSamplingRatio">
            FLOW_TO_SAMPLING_RATIO
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.HrlyGfmId">
            HRLY_GFM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsHourlyGfmRecord.Set(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="beginEndHourFlg">BEGIN_END_HOUR_FLG</param>
            <param name="gfmReading">GFM_READING</param>
            <param name="avgSamplingRate">AVG_SAMPLING_RATE</param>
            <param name="samplingRateUom">SAMPLING_RATE_UOM</param>
            <param name="flowToSamplingRatio">FLOW_TO_SAMPLING_RATIO</param>
            <param name="hrlyGfmId">HRLY_GFM_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData">
            Ecmps.CheckEm.Function.MATSMonitorHourlyValueData
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="matsMhvId">MATS_MHV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
            <param name="componentBeginDate">COMPONENT_BEGIN_DATE</param>
            <param name="componentBeginDatehour">COMPONENT_BEGIN_DATEHOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.MatsMhvId">
            MATS_MHV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.HgConverterInd">
            HG_CONVERTER_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.ComponentBeginDate">
            COMPONENT_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.ComponentBeginDatehour">
            COMPONENT_BEGIN_DATEHOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MATSMonitorHourlyValueData.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="matsMhvId">MATS_MHV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
            <param name="componentBeginDate">COMPONENT_BEGIN_DATE</param>
            <param name="componentBeginDatehour">COMPONENT_BEGIN_DATEHOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord">
            Ecmps.CheckEm.Function.MatsSamplingTrainRecord
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="trapModcCd">TRAP_MODC_CD</param>
            <param name="trainQaStatusCd">TRAIN_QA_STATUS_CD</param>
            <param name="refFlowToSamplingRatio">REF_FLOW_TO_SAMPLING_RATIO</param>
            <param name="hgConcentration">HG_CONCENTRATION</param>
            <param name="mainTrapHg">MAIN_TRAP_HG</param>
            <param name="breakthroughTrapHg">BREAKTHROUGH_TRAP_HG</param>
            <param name="spikeTrapHg">SPIKE_TRAP_HG</param>
            <param name="spikeRefValue">SPIKE_REF_VALUE</param>
            <param name="totalSampleVolume">TOTAL_SAMPLE_VOLUME</param>
            <param name="percentBreakthrough">PERCENT_BREAKTHROUGH</param>
            <param name="percentSpikeRecovery">PERCENT_SPIKE_RECOVERY</param>
            <param name="samplingRatioTestResultCd">SAMPLING_RATIO_TEST_RESULT_CD</param>
            <param name="postLeakTestResultCd">POST_LEAK_TEST_RESULT_CD</param>
            <param name="sampleDamageExplanation">SAMPLE_DAMAGE_EXPLANATION</param>
            <param name="sorbentTrapSerialNumber">SORBENT_TRAP_SERIAL_NUMBER</param>
            <param name="rataInd">RATA_IND</param>
            <param name="sorbentTrapApsCd">SORBENT_TRAP_APS_CD</param>
            <param name="sfsrTotalCount">SFSR_TOTAL_COUNT</param>
            <param name="sfsrDeviatedCount">SFSR_DEVIATED_COUNT</param>
            <param name="gfmTotalCount">GFM_TOTAL_COUNT</param>
            <param name="gfmNotAvailableCount">GFM_NOT_AVAILABLE_COUNT</param>
            <param name="description">DESCRIPTION</param>
            <param name="borderTrapInd">BORDER_TRAP_IND</param>
            <param name="suppDataInd">SUPP_DATA_IND</param>
            <param name="trapTrainId">TRAP_TRAIN_ID</param>
            <param name="trapId">TRAP_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.TrapModcCd">
            TRAP_MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.TrainQaStatusCd">
            TRAIN_QA_STATUS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.RefFlowToSamplingRatio">
            REF_FLOW_TO_SAMPLING_RATIO
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.HgConcentration">
            HG_CONCENTRATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.MainTrapHg">
            MAIN_TRAP_HG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.BreakthroughTrapHg">
            BREAKTHROUGH_TRAP_HG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SpikeTrapHg">
            SPIKE_TRAP_HG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SpikeRefValue">
            SPIKE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.TotalSampleVolume">
            TOTAL_SAMPLE_VOLUME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.PercentBreakthrough">
            PERCENT_BREAKTHROUGH
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.PercentSpikeRecovery">
            PERCENT_SPIKE_RECOVERY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SamplingRatioTestResultCd">
            SAMPLING_RATIO_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.PostLeakTestResultCd">
            POST_LEAK_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SampleDamageExplanation">
            SAMPLE_DAMAGE_EXPLANATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SorbentTrapSerialNumber">
            SORBENT_TRAP_SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.RataInd">
            RATA_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SorbentTrapApsCd">
            SORBENT_TRAP_APS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SfsrTotalCount">
            SFSR_TOTAL_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SfsrDeviatedCount">
            SFSR_DEVIATED_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.GfmTotalCount">
            GFM_TOTAL_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.GfmNotAvailableCount">
            GFM_NOT_AVAILABLE_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.Description">
            DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.BorderTrapInd">
            BORDER_TRAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.SuppDataInd">
            SUPP_DATA_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.TrapTrainId">
            TRAP_TRAIN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.TrapId">
            TRAP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSamplingTrainRecord.Set(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="trapModcCd">TRAP_MODC_CD</param>
            <param name="trainQaStatusCd">TRAIN_QA_STATUS_CD</param>
            <param name="refFlowToSamplingRatio">REF_FLOW_TO_SAMPLING_RATIO</param>
            <param name="hgConcentration">HG_CONCENTRATION</param>
            <param name="mainTrapHg">MAIN_TRAP_HG</param>
            <param name="breakthroughTrapHg">BREAKTHROUGH_TRAP_HG</param>
            <param name="spikeTrapHg">SPIKE_TRAP_HG</param>
            <param name="spikeRefValue">SPIKE_REF_VALUE</param>
            <param name="totalSampleVolume">TOTAL_SAMPLE_VOLUME</param>
            <param name="percentBreakthrough">PERCENT_BREAKTHROUGH</param>
            <param name="percentSpikeRecovery">PERCENT_SPIKE_RECOVERY</param>
            <param name="samplingRatioTestResultCd">SAMPLING_RATIO_TEST_RESULT_CD</param>
            <param name="postLeakTestResultCd">POST_LEAK_TEST_RESULT_CD</param>
            <param name="sampleDamageExplanation">SAMPLE_DAMAGE_EXPLANATION</param>
            <param name="sorbentTrapSerialNumber">SORBENT_TRAP_SERIAL_NUMBER</param>
            <param name="rataInd">RATA_IND</param>
            <param name="sorbentTrapApsCd">SORBENT_TRAP_APS_CD</param>
            <param name="sfsrTotalCount">SFSR_TOTAL_COUNT</param>
            <param name="sfsrDeviatedCount">SFSR_DEVIATED_COUNT</param>
            <param name="gfmTotalCount">GFM_TOTAL_COUNT</param>
            <param name="gfmNotAvailableCount">GFM_NOT_AVAILABLE_COUNT</param>
            <param name="description">DESCRIPTION</param>
            <param name="borderTrapInd">BORDER_TRAP_IND</param>
            <param name="suppDataInd">SUPP_DATA_IND</param>
            <param name="trapTrainId">TRAP_TRAIN_ID</param>
            <param name="trapId">TRAP_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord">
            Ecmps.CheckEm.Function.MatsSorbentTrapRecord
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="pairedTrapAgreement">PAIRED_TRAP_AGREEMENT</param>
            <param name="absoluteDifferenceInd">ABSOLUTE_DIFFERENCE_IND</param>
            <param name="modcCd">MODC_CD</param>
            <param name="hgConcentration">HG_CONCENTRATION</param>
            <param name="trapId">TRAP_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="rataInd">RATA_IND</param>
            <param name="sorbentTrapApsCd">SORBENT_TRAP_APS_CD</param>
            <param name="systemBeginDatehour">SYSTEM_BEGIN_DATEHOUR</param>
            <param name="systemEndDatehour">SYSTEM_END_DATEHOUR</param>
            <param name="borderTrapInd">BORDER_TRAP_IND</param>
            <param name="suppDataInd">SUPP_DATA_IND</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.PairedTrapAgreement">
            PAIRED_TRAP_AGREEMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.AbsoluteDifferenceInd">
            ABSOLUTE_DIFFERENCE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.HgConcentration">
            HG_CONCENTRATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.TrapId">
            TRAP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.RataInd">
            RATA_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.SorbentTrapApsCd">
            SORBENT_TRAP_APS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.SystemBeginDatehour">
            SYSTEM_BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.SystemEndDatehour">
            SYSTEM_END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.BorderTrapInd">
            BORDER_TRAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.SuppDataInd">
            SUPP_DATA_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapRecord.Set(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="pairedTrapAgreement">PAIRED_TRAP_AGREEMENT</param>
            <param name="absoluteDifferenceInd">ABSOLUTE_DIFFERENCE_IND</param>
            <param name="modcCd">MODC_CD</param>
            <param name="hgConcentration">HG_CONCENTRATION</param>
            <param name="trapId">TRAP_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="rataInd">RATA_IND</param>
            <param name="sorbentTrapApsCd">SORBENT_TRAP_APS_CD</param>
            <param name="systemBeginDatehour">SYSTEM_BEGIN_DATEHOUR</param>
            <param name="systemEndDatehour">SYSTEM_END_DATEHOUR</param>
            <param name="borderTrapInd">BORDER_TRAP_IND</param>
            <param name="suppDataInd">SUPP_DATA_IND</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord">
            Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="hgConcentration">HG_CONCENTRATION</param>
            <param name="trapId">TRAP_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="rataInd">RATA_IND</param>
            <param name="sorbentTrapApsCd">SORBENT_TRAP_APS_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.HgConcentration">
            HG_CONCENTRATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.TrapId">
            TRAP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.RataInd">
            RATA_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.SorbentTrapApsCd">
            SORBENT_TRAP_APS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MatsSorbentTrapSupplementalDataRecord.Set(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="hgConcentration">HG_CONCENTRATION</param>
            <param name="trapId">TRAP_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="rataInd">RATA_IND</param>
            <param name="sorbentTrapApsCd">SORBENT_TRAP_APS_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData">
            Ecmps.CheckEm.Function.MonitorQualificationPercentData
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="qualYear">QUAL_YEAR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.QualYear">
            QUAL_YEAR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MonitorQualificationPercentData.Set(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="qualYear">QUAL_YEAR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication">
            Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">Mon_Loc_Id</param>
            <param name="orisCode">Oris_Code</param>
            <param name="locationName">Location_Name</param>
            <param name="nonLoadBasedInd">Non_Load_Based_Ind</param>
            <param name="monPlanId">Mon_Plan_Id</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.MonLocId">
            Mon_Loc_Id
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.OrisCode">
            Oris_Code
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.LocationName">
            Location_Name
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.NonLoadBasedInd">
            Non_Load_Based_Ind
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.MonPlanId">
            Mon_Plan_Id
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.MpLocationNonLoadBasedIndication.Set(System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">Mon_Loc_Id</param>
            <param name="orisCode">Oris_Code</param>
            <param name="locationName">Location_Name</param>
            <param name="nonLoadBasedInd">Non_Load_Based_Ind</param>
            <param name="monPlanId">Mon_Plan_Id</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv">
            Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="notReportedNoxrSystemCount">NOT_REPORTED_NOXR_SYSTEM_COUNT</param>
            <param name="notReportedNoxrSysDesignationCd">NOT_REPORTED_NOXR_SYS_DESIGNATION_CD</param>
            <param name="notReportedNoxrMonSysId">NOT_REPORTED_NOXR_MON_SYS_ID</param>
            <param name="notReportedNoxrSysTypeCd">NOT_REPORTED_NOXR_SYS_TYPE_CD</param>
            <param name="notReportedNoxrSystemIdentifier">NOT_REPORTED_NOXR_SYSTEM_IDENTIFIER</param>
            <param name="maxDefaultCount">MAX_DEFAULT_COUNT</param>
            <param name="maxDefaultValue">MAX_DEFAULT_VALUE</param>
            <param name="highSpanCount">HIGH_SPAN_COUNT</param>
            <param name="highSpanDefaultHighRange">HIGH_SPAN_DEFAULT_HIGH_RANGE</param>
            <param name="highSpanFullScaleRange">HIGH_SPAN_FULL_SCALE_RANGE</param>
            <param name="lowSpanCount">LOW_SPAN_COUNT</param>
            <param name="lowSpanFullScaleRange">LOW_SPAN_FULL_SCALE_RANGE</param>
            <param name="primaryBypassExistInd">PRIMARY_BYPASS_EXIST_IND</param>
            <param name="usedNoxcCount">USED_NOXC_COUNT</param>
            <param name="usedDiluentCount">USED_DILUENT_COUNT</param>
            <param name="unusedNoxcCount">UNUSED_NOXC_COUNT</param>
            <param name="unusedDiluentCount">UNUSED_DILUENT_COUNT</param>
            <param name="usedNoxcModcCd">USED_NOXC_MODC_CD</param>
            <param name="usedDiluentModcCd">USED_DILUENT_MODC_CD</param>
            <param name="unusedNoxcModcCd">UNUSED_NOXC_MODC_CD</param>
            <param name="unusedDiluentModcCd">UNUSED_DILUENT_MODC_CD</param>
            <param name="usedNoxcComponentId">USED_NOXC_COMPONENT_ID</param>
            <param name="usedDiluentComponentId">USED_DILUENT_COMPONENT_ID</param>
            <param name="unusedNoxcComponentId">UNUSED_NOXC_COMPONENT_ID</param>
            <param name="unusedDiluentComponentId">UNUSED_DILUENT_COMPONENT_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.NotReportedNoxrSystemCount">
            NOT_REPORTED_NOXR_SYSTEM_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.NotReportedNoxrSysDesignationCd">
            NOT_REPORTED_NOXR_SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.NotReportedNoxrMonSysId">
            NOT_REPORTED_NOXR_MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.NotReportedNoxrSysTypeCd">
            NOT_REPORTED_NOXR_SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.NotReportedNoxrSystemIdentifier">
            NOT_REPORTED_NOXR_SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.MaxDefaultCount">
            MAX_DEFAULT_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.MaxDefaultValue">
            MAX_DEFAULT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.HighSpanCount">
            HIGH_SPAN_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.HighSpanDefaultHighRange">
            HIGH_SPAN_DEFAULT_HIGH_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.HighSpanFullScaleRange">
            HIGH_SPAN_FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.LowSpanCount">
            LOW_SPAN_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.LowSpanFullScaleRange">
            LOW_SPAN_FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.PrimaryBypassExistInd">
            PRIMARY_BYPASS_EXIST_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UsedNoxcCount">
            USED_NOXC_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UsedDiluentCount">
            USED_DILUENT_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UnusedNoxcCount">
            UNUSED_NOXC_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UnusedDiluentCount">
            UNUSED_DILUENT_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UsedNoxcModcCd">
            USED_NOXC_MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UsedDiluentModcCd">
            USED_DILUENT_MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UnusedNoxcModcCd">
            UNUSED_NOXC_MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UnusedDiluentModcCd">
            UNUSED_DILUENT_MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UsedNoxcComponentId">
            USED_NOXC_COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UsedDiluentComponentId">
            USED_DILUENT_COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UnusedNoxcComponentId">
            UNUSED_NOXC_COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.UnusedDiluentComponentId">
            UNUSED_DILUENT_COMPONENT_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrPrimaryAndPrimaryBypassMhv.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="notReportedNoxrSystemCount">NOT_REPORTED_NOXR_SYSTEM_COUNT</param>
            <param name="notReportedNoxrSysDesignationCd">NOT_REPORTED_NOXR_SYS_DESIGNATION_CD</param>
            <param name="notReportedNoxrMonSysId">NOT_REPORTED_NOXR_MON_SYS_ID</param>
            <param name="notReportedNoxrSysTypeCd">NOT_REPORTED_NOXR_SYS_TYPE_CD</param>
            <param name="notReportedNoxrSystemIdentifier">NOT_REPORTED_NOXR_SYSTEM_IDENTIFIER</param>
            <param name="maxDefaultCount">MAX_DEFAULT_COUNT</param>
            <param name="maxDefaultValue">MAX_DEFAULT_VALUE</param>
            <param name="highSpanCount">HIGH_SPAN_COUNT</param>
            <param name="highSpanDefaultHighRange">HIGH_SPAN_DEFAULT_HIGH_RANGE</param>
            <param name="highSpanFullScaleRange">HIGH_SPAN_FULL_SCALE_RANGE</param>
            <param name="lowSpanCount">LOW_SPAN_COUNT</param>
            <param name="lowSpanFullScaleRange">LOW_SPAN_FULL_SCALE_RANGE</param>
            <param name="primaryBypassExistInd">PRIMARY_BYPASS_EXIST_IND</param>
            <param name="usedNoxcCount">USED_NOXC_COUNT</param>
            <param name="usedDiluentCount">USED_DILUENT_COUNT</param>
            <param name="unusedNoxcCount">UNUSED_NOXC_COUNT</param>
            <param name="unusedDiluentCount">UNUSED_DILUENT_COUNT</param>
            <param name="usedNoxcModcCd">USED_NOXC_MODC_CD</param>
            <param name="usedDiluentModcCd">USED_DILUENT_MODC_CD</param>
            <param name="unusedNoxcModcCd">UNUSED_NOXC_MODC_CD</param>
            <param name="unusedDiluentModcCd">UNUSED_DILUENT_MODC_CD</param>
            <param name="usedNoxcComponentId">USED_NOXC_COMPONENT_ID</param>
            <param name="usedDiluentComponentId">USED_DILUENT_COMPONENT_ID</param>
            <param name="unusedNoxcComponentId">UNUSED_NOXC_COMPONENT_ID</param>
            <param name="unusedDiluentComponentId">UNUSED_DILUENT_COMPONENT_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual">
            Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="lmeNoxrSummaryInd">LME_NOXR_SUMMARY_IND</param>
            <param name="lmeNoxrBegin">LME_NOXR_BEGIN</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.LmeNoxrSummaryInd">
            LME_NOXR_SUMMARY_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.LmeNoxrBegin">
            LME_NOXR_BEGIN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.NoxrSummaryRequiredForLmeAnnual.Set(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="lmeNoxrSummaryInd">LME_NOXR_SUMMARY_IND</param>
            <param name="lmeNoxrBegin">LME_NOXR_BEGIN</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual">
            Ecmps.CheckEm.Function.Nsps4tAnnual
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.#ctor(System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="annualEnergySold">ANNUAL_ENERGY_SOLD</param>
            <param name="annualEnergySoldTypeCd">ANNUAL_ENERGY_SOLD_TYPE_CD</param>
            <param name="annualEnergySoldTypeDescription">ANNUAL_ENERGY_SOLD_TYPE_DESCRIPTION</param>
            <param name="annualPotentialOutput">ANNUAL_POTENTIAL_OUTPUT</param>
            <param name="nsps4tAnnId">NSPS4T_ANN_ID</param>
            <param name="nsps4tSumId">NSPS4T_SUM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.AnnualEnergySold">
            ANNUAL_ENERGY_SOLD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.AnnualEnergySoldTypeCd">
            ANNUAL_ENERGY_SOLD_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.AnnualEnergySoldTypeDescription">
            ANNUAL_ENERGY_SOLD_TYPE_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.AnnualPotentialOutput">
            ANNUAL_POTENTIAL_OUTPUT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.Nsps4tAnnId">
            NSPS4T_ANN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.Nsps4tSumId">
            NSPS4T_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.MonLocId">
            MON_LOC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tAnnual.Set(System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="annualEnergySold">ANNUAL_ENERGY_SOLD</param>
            <param name="annualEnergySoldTypeCd">ANNUAL_ENERGY_SOLD_TYPE_CD</param>
            <param name="annualEnergySoldTypeDescription">ANNUAL_ENERGY_SOLD_TYPE_DESCRIPTION</param>
            <param name="annualPotentialOutput">ANNUAL_POTENTIAL_OUTPUT</param>
            <param name="nsps4tAnnId">NSPS4T_ANN_ID</param>
            <param name="nsps4tSumId">NSPS4T_SUM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod">
            Ecmps.CheckEm.Function.Nsps4tCompliancePeriod
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.#ctor(System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginYear">BEGIN_YEAR</param>
            <param name="beginMonth">BEGIN_MONTH</param>
            <param name="endYear">END_YEAR</param>
            <param name="endMonth">END_MONTH</param>
            <param name="avgCo2EmissionRate">AVG_CO2_EMISSION_RATE</param>
            <param name="co2EmissionRateUomCd">CO2_EMISSION_RATE_UOM_CD</param>
            <param name="co2EmissionRateUomLabel">CO2_EMISSION_RATE_UOM_LABEL</param>
            <param name="pctValidOpHours">PCT_VALID_OP_HOURS</param>
            <param name="co2ViolationInd">CO2_VIOLATION_IND</param>
            <param name="co2ViolationComment">CO2_VIOLATION_COMMENT</param>
            <param name="beginMonthOrd">BEGIN_MONTH_ORD</param>
            <param name="endMonthOrd">END_MONTH_ORD</param>
            <param name="nsps4tCmpId">NSPS4T_CMP_ID</param>
            <param name="nsps4tSumId">NSPS4T_SUM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.BeginYear">
            BEGIN_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.BeginMonth">
            BEGIN_MONTH
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.EndYear">
            END_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.EndMonth">
            END_MONTH
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.AvgCo2EmissionRate">
            AVG_CO2_EMISSION_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.Co2EmissionRateUomCd">
            CO2_EMISSION_RATE_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.Co2EmissionRateUomLabel">
            CO2_EMISSION_RATE_UOM_LABEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.PctValidOpHours">
            PCT_VALID_OP_HOURS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.Co2ViolationInd">
            CO2_VIOLATION_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.Co2ViolationComment">
            CO2_VIOLATION_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.BeginMonthOrd">
            BEGIN_MONTH_ORD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.EndMonthOrd">
            END_MONTH_ORD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.Nsps4tCmpId">
            NSPS4T_CMP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.Nsps4tSumId">
            NSPS4T_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.MonLocId">
            MON_LOC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tCompliancePeriod.Set(System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="beginYear">BEGIN_YEAR</param>
            <param name="beginMonth">BEGIN_MONTH</param>
            <param name="endYear">END_YEAR</param>
            <param name="endMonth">END_MONTH</param>
            <param name="avgCo2EmissionRate">AVG_CO2_EMISSION_RATE</param>
            <param name="co2EmissionRateUomCd">CO2_EMISSION_RATE_UOM_CD</param>
            <param name="co2EmissionRateUomLabel">CO2_EMISSION_RATE_UOM_LABEL</param>
            <param name="pctValidOpHours">PCT_VALID_OP_HOURS</param>
            <param name="co2ViolationInd">CO2_VIOLATION_IND</param>
            <param name="co2ViolationComment">CO2_VIOLATION_COMMENT</param>
            <param name="beginMonthOrd">BEGIN_MONTH_ORD</param>
            <param name="endMonthOrd">END_MONTH_ORD</param>
            <param name="nsps4tCmpId">NSPS4T_CMP_ID</param>
            <param name="nsps4tSumId">NSPS4T_SUM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary">
            Ecmps.CheckEm.Function.Nsps4tSummary
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.#ctor(System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="emissionStandardCd">EMISSION_STANDARD_CD</param>
            <param name="emissionStandardLoadCd">EMISSION_STANDARD_LOAD_CD</param>
            <param name="emissionStandardUomCd">EMISSION_STANDARD_UOM_CD</param>
            <param name="emissionStandardUomLabel">EMISSION_STANDARD_UOM_LABEL</param>
            <param name="modusValue">MODUS_VALUE</param>
            <param name="modusUomCd">MODUS_UOM_CD</param>
            <param name="modusUomLabel">MODUS_UOM_LABEL</param>
            <param name="electricalLoadCd">ELECTRICAL_LOAD_CD</param>
            <param name="noPeriodEndedInd">NO_PERIOD_ENDED_IND</param>
            <param name="noPeriodEndedComment">NO_PERIOD_ENDED_COMMENT</param>
            <param name="nsps4tSumId">NSPS4T_SUM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.EmissionStandardCd">
            EMISSION_STANDARD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.EmissionStandardLoadCd">
            EMISSION_STANDARD_LOAD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.EmissionStandardUomCd">
            EMISSION_STANDARD_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.EmissionStandardUomLabel">
            EMISSION_STANDARD_UOM_LABEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.ModusValue">
            MODUS_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.ModusUomCd">
            MODUS_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.ModusUomLabel">
            MODUS_UOM_LABEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.ElectricalLoadCd">
            ELECTRICAL_LOAD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.NoPeriodEndedInd">
            NO_PERIOD_ENDED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.NoPeriodEndedComment">
            NO_PERIOD_ENDED_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.Nsps4tSumId">
            NSPS4T_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.MonLocId">
            MON_LOC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.Nsps4tSummary.Set(System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="emissionStandardCd">EMISSION_STANDARD_CD</param>
            <param name="emissionStandardLoadCd">EMISSION_STANDARD_LOAD_CD</param>
            <param name="emissionStandardUomCd">EMISSION_STANDARD_UOM_CD</param>
            <param name="emissionStandardUomLabel">EMISSION_STANDARD_UOM_LABEL</param>
            <param name="modusValue">MODUS_VALUE</param>
            <param name="modusUomCd">MODUS_UOM_CD</param>
            <param name="modusUomLabel">MODUS_UOM_LABEL</param>
            <param name="electricalLoadCd">ELECTRICAL_LOAD_CD</param>
            <param name="noPeriodEndedInd">NO_PERIOD_ENDED_IND</param>
            <param name="noPeriodEndedComment">NO_PERIOD_ENDED_COMMENT</param>
            <param name="nsps4tSumId">NSPS4T_SUM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData">
            Ecmps.CheckEm.Function.OnOffCalibrationTestAllData
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.#ctor(System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="beginDatetime">BEGIN_DATETIME</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="endDatetime">END_DATETIME</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="onlineZeroInjectionDate">ONLINE_ZERO_INJECTION_DATE</param>
            <param name="onlineZeroInjectionHour">ONLINE_ZERO_INJECTION_HOUR</param>
            <param name="onOffCalId">ON_OFF_CAL_ID</param>
            <param name="onlineZeroMeasuredValue">ONLINE_ZERO_MEASURED_VALUE</param>
            <param name="onlineZeroRefValue">ONLINE_ZERO_REF_VALUE</param>
            <param name="onlineZeroCalError">ONLINE_ZERO_CAL_ERROR</param>
            <param name="onlineZeroApsInd">ONLINE_ZERO_APS_IND</param>
            <param name="offlineZeroInjectionDate">OFFLINE_ZERO_INJECTION_DATE</param>
            <param name="offlineZeroInjectionHour">OFFLINE_ZERO_INJECTION_HOUR</param>
            <param name="offlineZeroMeasuredValue">OFFLINE_ZERO_MEASURED_VALUE</param>
            <param name="offlineZeroRefValue">OFFLINE_ZERO_REF_VALUE</param>
            <param name="offlineZeroCalError">OFFLINE_ZERO_CAL_ERROR</param>
            <param name="offlineZeroApsInd">OFFLINE_ZERO_APS_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="onlineUpscaleInjectionDate">ONLINE_UPSCALE_INJECTION_DATE</param>
            <param name="onlineUpscaleInjectionHour">ONLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="onlineUpscaleMeasuredValue">ONLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="onlineUpscaleRefValue">ONLINE_UPSCALE_REF_VALUE</param>
            <param name="onlineUpscaleCalError">ONLINE_UPSCALE_CAL_ERROR</param>
            <param name="onlineUpscaleApsInd">ONLINE_UPSCALE_APS_IND</param>
            <param name="offlineUpscaleInjectionDate">OFFLINE_UPSCALE_INJECTION_DATE</param>
            <param name="offlineUpscaleInjectionHour">OFFLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="offlineUpscaleMeasuredValue">OFFLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="offlineUpscaleRefValue">OFFLINE_UPSCALE_REF_VALUE</param>
            <param name="offlineUpscaleCalError">OFFLINE_UPSCALE_CAL_ERROR</param>
            <param name="offlineUpscaleApsInd">OFFLINE_UPSCALE_APS_IND</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.BeginDatetime">
            BEGIN_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.EndDatetime">
            END_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineZeroInjectionDate">
            ONLINE_ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineZeroInjectionHour">
            ONLINE_ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnOffCalId">
            ON_OFF_CAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineZeroMeasuredValue">
            ONLINE_ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineZeroRefValue">
            ONLINE_ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineZeroCalError">
            ONLINE_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineZeroApsInd">
            ONLINE_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineZeroInjectionDate">
            OFFLINE_ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineZeroInjectionHour">
            OFFLINE_ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineZeroMeasuredValue">
            OFFLINE_ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineZeroRefValue">
            OFFLINE_ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineZeroCalError">
            OFFLINE_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineZeroApsInd">
            OFFLINE_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.UpscaleGasLevelCd">
            UPSCALE_GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineUpscaleInjectionDate">
            ONLINE_UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineUpscaleInjectionHour">
            ONLINE_UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineUpscaleMeasuredValue">
            ONLINE_UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineUpscaleRefValue">
            ONLINE_UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineUpscaleCalError">
            ONLINE_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OnlineUpscaleApsInd">
            ONLINE_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineUpscaleInjectionDate">
            OFFLINE_UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineUpscaleInjectionHour">
            OFFLINE_UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineUpscaleMeasuredValue">
            OFFLINE_UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineUpscaleRefValue">
            OFFLINE_UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineUpscaleCalError">
            OFFLINE_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.OfflineUpscaleApsInd">
            OFFLINE_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.OnOffCalibrationTestAllData.Set(System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="beginDatetime">BEGIN_DATETIME</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="endDatetime">END_DATETIME</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="onlineZeroInjectionDate">ONLINE_ZERO_INJECTION_DATE</param>
            <param name="onlineZeroInjectionHour">ONLINE_ZERO_INJECTION_HOUR</param>
            <param name="onOffCalId">ON_OFF_CAL_ID</param>
            <param name="onlineZeroMeasuredValue">ONLINE_ZERO_MEASURED_VALUE</param>
            <param name="onlineZeroRefValue">ONLINE_ZERO_REF_VALUE</param>
            <param name="onlineZeroCalError">ONLINE_ZERO_CAL_ERROR</param>
            <param name="onlineZeroApsInd">ONLINE_ZERO_APS_IND</param>
            <param name="offlineZeroInjectionDate">OFFLINE_ZERO_INJECTION_DATE</param>
            <param name="offlineZeroInjectionHour">OFFLINE_ZERO_INJECTION_HOUR</param>
            <param name="offlineZeroMeasuredValue">OFFLINE_ZERO_MEASURED_VALUE</param>
            <param name="offlineZeroRefValue">OFFLINE_ZERO_REF_VALUE</param>
            <param name="offlineZeroCalError">OFFLINE_ZERO_CAL_ERROR</param>
            <param name="offlineZeroApsInd">OFFLINE_ZERO_APS_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="onlineUpscaleInjectionDate">ONLINE_UPSCALE_INJECTION_DATE</param>
            <param name="onlineUpscaleInjectionHour">ONLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="onlineUpscaleMeasuredValue">ONLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="onlineUpscaleRefValue">ONLINE_UPSCALE_REF_VALUE</param>
            <param name="onlineUpscaleCalError">ONLINE_UPSCALE_CAL_ERROR</param>
            <param name="onlineUpscaleApsInd">ONLINE_UPSCALE_APS_IND</param>
            <param name="offlineUpscaleInjectionDate">OFFLINE_UPSCALE_INJECTION_DATE</param>
            <param name="offlineUpscaleInjectionHour">OFFLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="offlineUpscaleMeasuredValue">OFFLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="offlineUpscaleRefValue">OFFLINE_UPSCALE_REF_VALUE</param>
            <param name="offlineUpscaleCalError">OFFLINE_UPSCALE_CAL_ERROR</param>
            <param name="offlineUpscaleApsInd">OFFLINE_UPSCALE_APS_IND</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter">
            Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">Mon_Loc_Id</param>
            <param name="orisCode">Oris_Code</param>
            <param name="locationName">Location_Name</param>
            <param name="calendarYear">Calendar_Year</param>
            <param name="quarter">Quarter</param>
            <param name="reportFreqCd">Report_Freq_Cd</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.MonLocId">
            Mon_Loc_Id
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.OrisCode">
            Oris_Code
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.LocationName">
            Location_Name
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.CalendarYear">
            Calendar_Year
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.Quarter">
            Quarter
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.ReportFreqCd">
            Report_Freq_Cd
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.ReportingFrequencyByLocationQuarter.Set(System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">Mon_Loc_Id</param>
            <param name="orisCode">Oris_Code</param>
            <param name="locationName">Location_Name</param>
            <param name="calendarYear">Calendar_Year</param>
            <param name="quarter">Quarter</param>
            <param name="reportFreqCd">Report_Freq_Cd</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData">
            Ecmps.CheckEm.Function.SystemOpSuppData
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="sysOpSuppDataId">SYS_OP_SUPP_DATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opSuppDataTypeCd">OP_SUPP_DATA_TYPE_CD</param>
            <param name="days">DAYS</param>
            <param name="hours">HOURS</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.SysOpSuppDataId">
            SYS_OP_SUPP_DATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.OpSuppDataTypeCd">
            OP_SUPP_DATA_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.Days">
            DAYS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.Hours">
            HOURS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.SystemOpSuppData.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="sysOpSuppDataId">SYS_OP_SUPP_DATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opSuppDataTypeCd">OP_SUPP_DATA_TYPE_CD</param>
            <param name="days">DAYS</param>
            <param name="hours">HOURS</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity">
            Ecmps.CheckEm.Function.WeeklySystemIntegrity
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="testDatetime">TEST_DATETIME</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="refValue">REF_VALUE</param>
            <param name="measuredValue">MEASURED_VALUE</param>
            <param name="apsInd">APS_IND</param>
            <param name="systemIntegrityError">SYSTEM_INTEGRITY_ERROR</param>
            <param name="testDatehour">TEST_DATEHOUR</param>
            <param name="testDate">TEST_DATE</param>
            <param name="testHour">TEST_HOUR</param>
            <param name="testMin">TEST_MIN</param>
            <param name="formattedTestDate">FORMATTED_TEST_DATE</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="weeklySysIntegrityId">WEEKLY_SYS_INTEGRITY_ID</param>
            <param name="weeklyTestSumId">WEEKLY_TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.TestDatetime">
            TEST_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.HgConverterInd">
            HG_CONVERTER_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.RefValue">
            REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.MeasuredValue">
            MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.ApsInd">
            APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.SystemIntegrityError">
            SYSTEM_INTEGRITY_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.TestDatehour">
            TEST_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.TestDate">
            TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.TestHour">
            TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.TestMin">
            TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.FormattedTestDate">
            FORMATTED_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.WeeklySysIntegrityId">
            WEEKLY_SYS_INTEGRITY_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.WeeklyTestSumId">
            WEEKLY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklySystemIntegrity.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="testDatetime">TEST_DATETIME</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="refValue">REF_VALUE</param>
            <param name="measuredValue">MEASURED_VALUE</param>
            <param name="apsInd">APS_IND</param>
            <param name="systemIntegrityError">SYSTEM_INTEGRITY_ERROR</param>
            <param name="testDatehour">TEST_DATEHOUR</param>
            <param name="testDate">TEST_DATE</param>
            <param name="testHour">TEST_HOUR</param>
            <param name="testMin">TEST_MIN</param>
            <param name="formattedTestDate">FORMATTED_TEST_DATE</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="weeklySysIntegrityId">WEEKLY_SYS_INTEGRITY_ID</param>
            <param name="weeklyTestSumId">WEEKLY_TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary">
            Ecmps.CheckEm.Function.WeeklyTestSummary
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="testDatetime">TEST_DATETIME</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testDatehour">TEST_DATEHOUR</param>
            <param name="testDate">TEST_DATE</param>
            <param name="testHour">TEST_HOUR</param>
            <param name="testMin">TEST_MIN</param>
            <param name="formattedTestDate">FORMATTED_TEST_DATE</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="weeklyTestSumId">WEEKLY_TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.TestDatetime">
            TEST_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.TestDatehour">
            TEST_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.TestDate">
            TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.TestHour">
            TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.TestMin">
            TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.FormattedTestDate">
            FORMATTED_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.WeeklyTestSumId">
            WEEKLY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckEm.Function.WeeklyTestSummary.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="locationName">LOCATION_NAME</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="testDatetime">TEST_DATETIME</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testDatehour">TEST_DATEHOUR</param>
            <param name="testDate">TEST_DATE</param>
            <param name="testHour">TEST_HOUR</param>
            <param name="testMin">TEST_MIN</param>
            <param name="formattedTestDate">FORMATTED_TEST_DATE</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="weeklyTestSumId">WEEKLY_TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components">
            Ecmps.CheckImp.Function.Components
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.ModelVersion">
            MODEL_VERSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.Manufacturer">
            MANUFACTURER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.BasisCd">
            BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.HgConverterInd">
            HG_CONVERTER_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Components.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations">
            Ecmps.CheckImp.Function.Locations
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
            <param name="monLocType">MON_LOC_TYPE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.MonLocType">
            MON_LOC_TYPE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Locations.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
            <param name="monLocType">MON_LOC_TYPE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods">
            Ecmps.CheckImp.Function.Methods
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Methods.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems">
            Ecmps.CheckImp.Function.Systems
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Systems.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests">
            Ecmps.CheckImp.Function.Tests
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="calcGpInd">CALC_GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="testDescription">TEST_DESCRIPTION</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="calcSpanValue">CALC_SPAN_VALUE</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.CalcGpInd">
            CALC_GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.CalcTestResultCd">
            CALC_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.TestDescription">
            TEST_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.CalcSpanValue">
            CALC_SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.Quarter">
            QUARTER
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckImp.Function.Tests.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="calcGpInd">CALC_GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="testDescription">TEST_DESCRIPTION</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="calcSpanValue">CALC_SPAN_VALUE</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods">
            Ecmps.CheckMp.Function.CombinedMethods
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="crosscheckParameter">CROSSCHECK_PARAMETER</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.CrosscheckParameter">
            CROSSCHECK_PARAMETER
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.CombinedMethods.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="crosscheckParameter">CROSSCHECK_PARAMETER</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter">
            Ecmps.CheckMp.Function.LocationProgramParameter
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.#ctor(System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="unitName">UNIT_NAME</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="osInd">OS_IND</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="requiredInd">REQUIRED_IND</param>
            <param name="paramBeginDate">PARAM_BEGIN_DATE</param>
            <param name="paramEndDate">PARAM_END_DATE</param>
            <param name="umcbDate">UMCB_DATE</param>
            <param name="erbDate">ERB_DATE</param>
            <param name="prgEndDate">PRG_END_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="upId">UP_ID</param>
            <param name="prgId">PRG_ID</param>
            <param name="prgParamId">PRG_PARAM_ID</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.UnitName">
            UNIT_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.PrgCd">
            PRG_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.Class">
            CLASS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.OsInd">
            OS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.RequiredInd">
            REQUIRED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.ParamBeginDate">
            PARAM_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.ParamEndDate">
            PARAM_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.UmcbDate">
            UMCB_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.ErbDate">
            ERB_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.PrgEndDate">
            PRG_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.UpId">
            UP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.PrgId">
            PRG_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.PrgParamId">
            PRG_PARAM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.BeginRptPeriodId">
            BEGIN_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.EndRptPeriodId">
            END_RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.LocationProgramParameter.Set(System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="unitName">UNIT_NAME</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="osInd">OS_IND</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="requiredInd">REQUIRED_IND</param>
            <param name="paramBeginDate">PARAM_BEGIN_DATE</param>
            <param name="paramEndDate">PARAM_END_DATE</param>
            <param name="umcbDate">UMCB_DATE</param>
            <param name="erbDate">ERB_DATE</param>
            <param name="prgEndDate">PRG_END_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="upId">UP_ID</param>
            <param name="prgId">PRG_ID</param>
            <param name="prgParamId">PRG_PARAM_ID</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod">
            Ecmps.CheckMp.Function.MatsCombinedMethod
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterGroup">PARAMETER_GROUP</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="methodSource">METHOD_SOURCE</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="monMethodId">MON_METHOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.ParameterGroup">
            PARAMETER_GROUP
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.MethodSource">
            METHOD_SOURCE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MatsCombinedMethod.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterGroup">PARAMETER_GROUP</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="methodSource">METHOD_SOURCE</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="monMethodId">MON_METHOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter">
            Ecmps.CheckMp.Function.MATSMethodDataParameter
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="matsMethodId">MATS_METHOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="matsMethodCd">MATS_METHOD_CD</param>
            <param name="matsMethodParameterCd">MATS_METHOD_PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="monPlanId">MON_PLAN_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.MatsMethodId">
            MATS_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.MatsMethodCd">
            MATS_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.MatsMethodParameterCd">
            MATS_METHOD_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MATSMethodDataParameter.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="matsMethodId">MATS_METHOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="matsMethodCd">MATS_METHOD_CD</param>
            <param name="matsMethodParameterCd">MATS_METHOD_PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="monPlanId">MON_PLAN_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter">
            Ecmps.CheckMp.Function.MonitorQualificationLEEParameter
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="monLeeId">MON_LEE_ID</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="applicableEmissionStandard">APPLICABLE_EMISSION_STANDARD</param>
            <param name="emissionStandardPct">EMISSION_STANDARD_PCT</param>
            <param name="emissionStandardUom">EMISSION_STANDARD_UOM</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="potentialAnnualEmissions">POTENTIAL_ANNUAL_EMISSIONS</param>
            <param name="qualLeeTestTypeCd">QUAL_LEE_TEST_TYPE_CD</param>
            <param name="qualTestDate">QUAL_TEST_DATE</param>
            <param name="monPlanId">mon_plan_id</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.LocationId">
            LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.MonLeeId">
            MON_LEE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.ApplicableEmissionStandard">
            APPLICABLE_EMISSION_STANDARD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.EmissionStandardPct">
            EMISSION_STANDARD_PCT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.EmissionStandardUom">
            EMISSION_STANDARD_UOM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.PotentialAnnualEmissions">
            POTENTIAL_ANNUAL_EMISSIONS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.QualLeeTestTypeCd">
            QUAL_LEE_TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.QualTestDate">
            QUAL_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.MonPlanId">
            mon_plan_id
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.MonitorQualificationLEEParameter.Set(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="monLeeId">MON_LEE_ID</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="applicableEmissionStandard">APPLICABLE_EMISSION_STANDARD</param>
            <param name="emissionStandardPct">EMISSION_STANDARD_PCT</param>
            <param name="emissionStandardUom">EMISSION_STANDARD_UOM</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="potentialAnnualEmissions">POTENTIAL_ANNUAL_EMISSIONS</param>
            <param name="qualLeeTestTypeCd">QUAL_LEE_TEST_TYPE_CD</param>
            <param name="qualTestDate">QUAL_TEST_DATE</param>
            <param name="monPlanId">mon_plan_id</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter">
            Ecmps.CheckMp.Function.UnitProgramParameter
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.#ctor(System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="unitName">UNIT_NAME</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="osInd">OS_IND</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="requiredInd">REQUIRED_IND</param>
            <param name="paramBeginDate">PARAM_BEGIN_DATE</param>
            <param name="paramEndDate">PARAM_END_DATE</param>
            <param name="umcbDate">UMCB_DATE</param>
            <param name="erbDate">ERB_DATE</param>
            <param name="prgEndDate">PRG_END_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="upId">UP_ID</param>
            <param name="prgId">PRG_ID</param>
            <param name="prgParamId">PRG_PARAM_ID</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.UnitName">
            UNIT_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.PrgCd">
            PRG_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.Class">
            CLASS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.OsInd">
            OS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.RequiredInd">
            REQUIRED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.ParamBeginDate">
            PARAM_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.ParamEndDate">
            PARAM_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.UmcbDate">
            UMCB_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.ErbDate">
            ERB_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.PrgEndDate">
            PRG_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.UpId">
            UP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.PrgId">
            PRG_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.PrgParamId">
            PRG_PARAM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.BeginRptPeriodId">
            BEGIN_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.EndRptPeriodId">
            END_RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckMp.Function.UnitProgramParameter.Set(System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="unitName">UNIT_NAME</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="osInd">OS_IND</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="requiredInd">REQUIRED_IND</param>
            <param name="paramBeginDate">PARAM_BEGIN_DATE</param>
            <param name="paramEndDate">PARAM_END_DATE</param>
            <param name="umcbDate">UMCB_DATE</param>
            <param name="erbDate">ERB_DATE</param>
            <param name="prgEndDate">PRG_END_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="upId">UP_ID</param>
            <param name="prgId">PRG_ID</param>
            <param name="prgParamId">PRG_PARAM_ID</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection">
            Ecmps.CheckQa.Function.LinearityInjection
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="linInjId">LIN_INJ_ID</param>
            <param name="linSumId">LIN_SUM_ID</param>
            <param name="injectionDate">INJECTION_DATE</param>
            <param name="injectionHour">INJECTION_HOUR</param>
            <param name="injectionMin">INJECTION_MIN</param>
            <param name="measuredValue">MEASURED_VALUE</param>
            <param name="refValue">REF_VALUE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.LinInjId">
            LIN_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.LinSumId">
            LIN_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.InjectionDate">
            INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.InjectionHour">
            INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.InjectionMin">
            INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.MeasuredValue">
            MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.RefValue">
            REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.ComponentId">
            COMPONENT_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjection.Set(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="linInjId">LIN_INJ_ID</param>
            <param name="linSumId">LIN_SUM_ID</param>
            <param name="injectionDate">INJECTION_DATE</param>
            <param name="injectionHour">INJECTION_HOUR</param>
            <param name="injectionMin">INJECTION_MIN</param>
            <param name="measuredValue">MEASURED_VALUE</param>
            <param name="refValue">REF_VALUE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent">
            Ecmps.CheckQa.Function.LinearityInjectionByComponent
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="linInjId">LIN_INJ_ID</param>
            <param name="linSumId">LIN_SUM_ID</param>
            <param name="hgTestInjId">HG_TEST_INJ_ID</param>
            <param name="hgTestSumId">HG_TEST_SUM_ID</param>
            <param name="injectionDate">INJECTION_DATE</param>
            <param name="injectionHour">INJECTION_HOUR</param>
            <param name="injectionMin">INJECTION_MIN</param>
            <param name="measuredValue">MEASURED_VALUE</param>
            <param name="refValue">REF_VALUE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.LinInjId">
            LIN_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.LinSumId">
            LIN_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.HgTestInjId">
            HG_TEST_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.HgTestSumId">
            HG_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.InjectionDate">
            INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.InjectionHour">
            INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.InjectionMin">
            INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.MeasuredValue">
            MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.RefValue">
            REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.ComponentId">
            COMPONENT_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearityInjectionByComponent.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="linInjId">LIN_INJ_ID</param>
            <param name="linSumId">LIN_SUM_ID</param>
            <param name="hgTestInjId">HG_TEST_INJ_ID</param>
            <param name="hgTestSumId">HG_TEST_SUM_ID</param>
            <param name="injectionDate">INJECTION_DATE</param>
            <param name="injectionHour">INJECTION_HOUR</param>
            <param name="injectionMin">INJECTION_MIN</param>
            <param name="measuredValue">MEASURED_VALUE</param>
            <param name="refValue">REF_VALUE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary">
            Ecmps.CheckQa.Function.LinearitySummary
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="linSumId">LIN_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="meanMeasuredValue">MEAN_MEASURED_VALUE</param>
            <param name="percentError">PERCENT_ERROR</param>
            <param name="apsInd">APS_IND</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.LinSumId">
            LIN_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.MeanRefValue">
            MEAN_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.MeanMeasuredValue">
            MEAN_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.PercentError">
            PERCENT_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.ApsInd">
            APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.HgConverterInd">
            HG_CONVERTER_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CheckQa.Function.LinearitySummary.Set(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="linSumId">LIN_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="meanMeasuredValue">MEAN_MEASURED_VALUE</param>
            <param name="percentError">PERCENT_ERROR</param>
            <param name="apsInd">APS_IND</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow">
            Ecmps.CrossCheck.Table.PARAMETER_METHOD_TO_FORMULA
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="systemTypeList">SYSTEM_TYPE_LIST</param>
            <param name="ecmpsOnly">ECMPS_ONLY</param>
            <param name="locationTypeList">LOCATION_TYPE_LIST</param>
            <param name="formulaList">FORMULA_LIST</param>
            <param name="notFoundResult">NOT_FOUND_RESULT</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.SystemTypeList">
            SYSTEM_TYPE_LIST
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.EcmpsOnly">
            ECMPS_ONLY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.LocationTypeList">
            LOCATION_TYPE_LIST
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.FormulaList">
            FORMULA_LIST
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.NotFoundResult">
            NOT_FOUND_RESULT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.CrossCheck.Table.ParameterMethodToFormulaRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="systemTypeList">SYSTEM_TYPE_LIST</param>
            <param name="ecmpsOnly">ECMPS_ONLY</param>
            <param name="locationTypeList">LOCATION_TYPE_LIST</param>
            <param name="formulaList">FORMULA_LIST</param>
            <param name="notFoundResult">NOT_FOUND_RESULT</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow">
            Ecmps.Dbo.Table.ACCURACY_SPEC_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="accuracySpecCd">ACCURACY_SPEC_CD</param>
            <param name="accuracySpecCdDescription">ACCURACY_SPEC_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.AccuracySpecCd">
            ACCURACY_SPEC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.AccuracySpecCdDescription">
            ACCURACY_SPEC_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracySpecCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="accuracySpecCd">ACCURACY_SPEC_CD</param>
            <param name="accuracySpecCdDescription">ACCURACY_SPEC_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow">
            Ecmps.Dbo.Table.ACCURACY_TEST_METHOD_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="accTestMethodCd">ACC_TEST_METHOD_CD</param>
            <param name="accTestMethodCdDescription">ACC_TEST_METHOD_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.AccTestMethodCd">
            ACC_TEST_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.AccTestMethodCdDescription">
            ACC_TEST_METHOD_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AccuracyTestMethodCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="accTestMethodCd">ACC_TEST_METHOD_CD</param>
            <param name="accTestMethodCdDescription">ACC_TEST_METHOD_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow">
            Ecmps.Dbo.Table.ACQUISITION_METHOD_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="acqCd">ACQ_CD</param>
            <param name="acqCdDescription">ACQ_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.AcqCdDescription">
            ACQ_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AcquisitionMethodCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="acqCd">ACQ_CD</param>
            <param name="acqCdDescription">ACQ_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow">
            Ecmps.Dbo.Table.ANALYZER_RANGE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="analyzerRangeCdDescription">ANALYZER_RANGE_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.AnalyzerRangeCd">
            ANALYZER_RANGE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.AnalyzerRangeCdDescription">
            ANALYZER_RANGE_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="analyzerRangeCdDescription">ANALYZER_RANGE_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow">
            Ecmps.Dbo.Table.ANALYZER_RANGE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="analyzerRangeId">ANALYZER_RANGE_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="dualRangeInd">DUAL_RANGE_IND</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.AnalyzerRangeId">
            ANALYZER_RANGE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.AnalyzerRangeCd">
            ANALYZER_RANGE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.DualRangeInd">
            DUAL_RANGE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.AnalyzerRangeRow.Set(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="analyzerRangeId">ANALYZER_RANGE_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="dualRangeInd">DUAL_RANGE_IND</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow">
            Ecmps.Dbo.Table.BYPASS_APPROACH_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="bypassApproachCdDescription">BYPASS_APPROACH_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.BypassApproachCdDescription">
            BYPASS_APPROACH_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.BypassApproachCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="bypassApproachCdDescription">BYPASS_APPROACH_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow">
            Ecmps.Dbo.Table.COMPONENT_TYPE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentTypeCdDescription">COMPONENT_TYPE_CD_DESCRIPTION</param>
            <param name="spanIndicator">SPAN_INDICATOR</param>
            <param name="parameterCd">PARAMETER_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.ComponentTypeCdDescription">
            COMPONENT_TYPE_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.SpanIndicator">
            SPAN_INDICATOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ComponentTypeCodeRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentTypeCdDescription">COMPONENT_TYPE_CD_DESCRIPTION</param>
            <param name="spanIndicator">SPAN_INDICATOR</param>
            <param name="parameterCd">PARAMETER_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow">
            Ecmps.Dbo.Table.CONTROL_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="controlCd">CONTROL_CD</param>
            <param name="ceParam">CE_PARAM</param>
            <param name="controlCdDescription">CONTROL_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.ControlCd">
            CONTROL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.CeParam">
            CE_PARAM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.ControlCdDescription">
            CONTROL_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ControlCodeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="controlCd">CONTROL_CD</param>
            <param name="ceParam">CE_PARAM</param>
            <param name="controlCdDescription">CONTROL_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow">
            Ecmps.Dbo.Table.DEFAULT_PURPOSE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defPurposeCdDescription">DEF_PURPOSE_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.DefaultPurposeCd">
            DEFAULT_PURPOSE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.DefPurposeCdDescription">
            DEF_PURPOSE_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultPurposeCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defPurposeCdDescription">DEF_PURPOSE_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow">
            Ecmps.Dbo.Table.DEFAULT_SOURCE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="defaultSourceCdDescription">DEFAULT_SOURCE_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.DefaultSourceCd">
            DEFAULT_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.DefaultSourceCdDescription">
            DEFAULT_SOURCE_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DefaultSourceCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="defaultSourceCdDescription">DEFAULT_SOURCE_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow">
            Ecmps.Dbo.Table.DEM_METHOD_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="demMethodCd">DEM_METHOD_CD</param>
            <param name="demMethodDescription">DEM_METHOD_DESCRIPTION</param>
            <param name="demParameter">DEM_PARAMETER</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.DemMethodCd">
            DEM_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.DemMethodDescription">
            DEM_METHOD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.DemParameter">
            DEM_PARAMETER
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.DemMethodCodeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="demMethodCd">DEM_METHOD_CD</param>
            <param name="demMethodDescription">DEM_METHOD_DESCRIPTION</param>
            <param name="demParameter">DEM_PARAMETER</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow">
            Ecmps.Dbo.Table.EQUATION_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="equationCd">EQUATION_CD</param>
            <param name="equationCdDescription">EQUATION_CD_DESCRIPTION</param>
            <param name="moistureInd">MOISTURE_IND</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.EquationCdDescription">
            EQUATION_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.MoistureInd">
            MOISTURE_IND
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.EquationCodeRow.Set(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="equationCd">EQUATION_CD</param>
            <param name="equationCdDescription">EQUATION_CD_DESCRIPTION</param>
            <param name="moistureInd">MOISTURE_IND</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow">
            Ecmps.Dbo.Table.FUEL_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.UnitFuelCd">
            UNIT_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.FuelCdDescription">
            FUEL_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.FuelCodeRow.Set(System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow">
            Ecmps.Dbo.Table.GAS_TYPE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="gasTypeCd">GAS_TYPE_CD</param>
            <param name="gasTypeDescription">GAS_TYPE_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.GasTypeCd">
            GAS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.GasTypeDescription">
            GAS_TYPE_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.GasTypeCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="gasTypeCd">GAS_TYPE_CD</param>
            <param name="gasTypeDescription">GAS_TYPE_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow">
            Ecmps.Dbo.Table.INDICATOR_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="indicatorCd">INDICATOR_CD</param>
            <param name="indicatorCodeDescription">INDICATOR_CODE_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.IndicatorCd">
            INDICATOR_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.IndicatorCodeDescription">
            INDICATOR_CODE_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.IndicatorCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="indicatorCd">INDICATOR_CD</param>
            <param name="indicatorCodeDescription">INDICATOR_CODE_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow">
            Ecmps.Dbo.Table.MAX_RATE_SOURCE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="maxRateSourceCd">MAX_RATE_SOURCE_CD</param>
            <param name="maxRateSourceCdDescription">MAX_RATE_SOURCE_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.MaxRateSourceCd">
            MAX_RATE_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.MaxRateSourceCdDescription">
            MAX_RATE_SOURCE_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MaxRateSourceCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="maxRateSourceCd">MAX_RATE_SOURCE_CD</param>
            <param name="maxRateSourceCdDescription">MAX_RATE_SOURCE_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow">
            Ecmps.Dbo.Table.METHOD_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="methodCd">METHOD_CD</param>
            <param name="methodCdDescription">METHOD_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.MethodCdDescription">
            METHOD_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MethodCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="methodCd">METHOD_CD</param>
            <param name="methodCdDescription">METHOD_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow">
            Ecmps.Dbo.Table.MONITOR_LOCATION_ATTRIBUTE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocAttribId">MON_LOC_ATTRIB_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="grdElevation">GRD_ELEVATION</param>
            <param name="ductInd">DUCT_IND</param>
            <param name="bypassInd">BYPASS_IND</param>
            <param name="crossAreaFlow">CROSS_AREA_FLOW</param>
            <param name="crossAreaExit">CROSS_AREA_EXIT</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackHeight">STACK_HEIGHT</param>
            <param name="shapeCd">SHAPE_CD</param>
            <param name="materialCd">MATERIAL_CD</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="userid">USERID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.MonLocAttribId">
            MON_LOC_ATTRIB_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.GrdElevation">
            GRD_ELEVATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.DuctInd">
            DUCT_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.BypassInd">
            BYPASS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.CrossAreaFlow">
            CROSS_AREA_FLOW
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.CrossAreaExit">
            CROSS_AREA_EXIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.StackHeight">
            STACK_HEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.ShapeCd">
            SHAPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.MaterialCd">
            MATERIAL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.Userid">
            USERID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorLocationAttributeRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocAttribId">MON_LOC_ATTRIB_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="grdElevation">GRD_ELEVATION</param>
            <param name="ductInd">DUCT_IND</param>
            <param name="bypassInd">BYPASS_IND</param>
            <param name="crossAreaFlow">CROSS_AREA_FLOW</param>
            <param name="crossAreaExit">CROSS_AREA_EXIT</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackHeight">STACK_HEIGHT</param>
            <param name="shapeCd">SHAPE_CD</param>
            <param name="materialCd">MATERIAL_CD</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="userid">USERID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow">
            Ecmps.Dbo.Table.MONITOR_QUALIFICATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorQualificationRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow">
            Ecmps.Dbo.Table.MONITOR_SPAN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="spanId">SPAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="mpcValue">MPC_VALUE</param>
            <param name="mecValue">MEC_VALUE</param>
            <param name="mpfValue">MPF_VALUE</param>
            <param name="maxLowRange">MAX_LOW_RANGE</param>
            <param name="spanValue">SPAN_VALUE</param>
            <param name="fullScaleRange">FULL_SCALE_RANGE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="defaultHighRange">DEFAULT_HIGH_RANGE</param>
            <param name="flowSpanValue">FLOW_SPAN_VALUE</param>
            <param name="flowFullScaleRange">FLOW_FULL_SCALE_RANGE</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="spanUomCd">SPAN_UOM_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.SpanId">
            SPAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.MpcValue">
            MPC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.MecValue">
            MEC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.MpfValue">
            MPF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.MaxLowRange">
            MAX_LOW_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.SpanValue">
            SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.FullScaleRange">
            FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.DefaultHighRange">
            DEFAULT_HIGH_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.FlowSpanValue">
            FLOW_SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.FlowFullScaleRange">
            FLOW_FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.SpanMethodCd">
            SPAN_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.SpanUomCd">
            SPAN_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.MonitorSpanRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="spanId">SPAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="mpcValue">MPC_VALUE</param>
            <param name="mecValue">MEC_VALUE</param>
            <param name="mpfValue">MPF_VALUE</param>
            <param name="maxLowRange">MAX_LOW_RANGE</param>
            <param name="spanValue">SPAN_VALUE</param>
            <param name="fullScaleRange">FULL_SCALE_RANGE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="defaultHighRange">DEFAULT_HIGH_RANGE</param>
            <param name="flowSpanValue">FLOW_SPAN_VALUE</param>
            <param name="flowFullScaleRange">FLOW_FULL_SCALE_RANGE</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="spanUomCd">SPAN_UOM_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow">
            Ecmps.Dbo.Table.OPERATING_LEVEL_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="opLevelCdDescription">OP_LEVEL_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.OpLevelCdDescription">
            OP_LEVEL_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.OperatingLevelCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="opLevelCdDescription">OP_LEVEL_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow">
            Ecmps.Dbo.Table.PARAMETER_UOM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="paramId">PARAM_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="uomCd">UOM_CD</param>
            <param name="parameterFormat">PARAMETER_FORMAT</param>
            <param name="minValue">MIN_VALUE</param>
            <param name="maxValue">MAX_VALUE</param>
            <param name="decimalsHrly">DECIMALS_HRLY</param>
            <param name="decimalsFuelFlow">DECIMALS_FUEL_FLOW</param>
            <param name="decimalsSummary">DECIMALS_SUMMARY</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.ParamId">
            PARAM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.UomCd">
            UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.ParameterFormat">
            PARAMETER_FORMAT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.MinValue">
            MIN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.MaxValue">
            MAX_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.DecimalsHrly">
            DECIMALS_HRLY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.DecimalsFuelFlow">
            DECIMALS_FUEL_FLOW
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.DecimalsSummary">
            DECIMALS_SUMMARY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ParameterUomRow.Set(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="paramId">PARAM_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="uomCd">UOM_CD</param>
            <param name="parameterFormat">PARAMETER_FORMAT</param>
            <param name="minValue">MIN_VALUE</param>
            <param name="maxValue">MAX_VALUE</param>
            <param name="decimalsHrly">DECIMALS_HRLY</param>
            <param name="decimalsFuelFlow">DECIMALS_FUEL_FLOW</param>
            <param name="decimalsSummary">DECIMALS_SUMMARY</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow">
            Ecmps.Dbo.Table.PRESSURE_MEASURE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="pressureMeasCd">PRESSURE_MEAS_CD</param>
            <param name="pressureMeasCdDescription">PRESSURE_MEAS_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.PressureMeasCd">
            PRESSURE_MEAS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.PressureMeasCdDescription">
            PRESSURE_MEAS_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.PressureMeasureCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="pressureMeasCd">PRESSURE_MEAS_CD</param>
            <param name="pressureMeasCdDescription">PRESSURE_MEAS_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow">
            Ecmps.Dbo.Table.PROTOCOL_GAS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="protocolGasId">PROTOCOL_GAS_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="gasTypeCd">GAS_TYPE_CD</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="vendorId">VENDOR_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.ProtocolGasId">
            PROTOCOL_GAS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.GasTypeCd">
            GAS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.CylinderId">
            CYLINDER_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.ExpirationDate">
            EXPIRATION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.VendorId">
            VENDOR_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasRow.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="protocolGasId">PROTOCOL_GAS_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="gasTypeCd">GAS_TYPE_CD</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="vendorId">VENDOR_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow">
            Ecmps.Dbo.Table.PROTOCOL_GAS_VENDOR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="vendorName">VENDOR_NAME</param>
            <param name="deactivationDate">DEACTIVATION_DATE</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="userid">USERID</param>
            <param name="vendorId">VENDOR_ID</param>
            <param name="activationDate">ACTIVATION_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.VendorName">
            VENDOR_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.DeactivationDate">
            DEACTIVATION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.VendorId">
            VENDOR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.ActivationDate">
            ACTIVATION_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.ProtocolGasVendorRow.Set(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="vendorName">VENDOR_NAME</param>
            <param name="deactivationDate">DEACTIVATION_DATE</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="userid">USERID</param>
            <param name="vendorId">VENDOR_ID</param>
            <param name="activationDate">ACTIVATION_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow">
            Ecmps.Dbo.Table.QUAL_TYPE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="qualTypeCdDescription">QUAL_TYPE_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.QualTypeCdDescription">
            QUAL_TYPE_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.QualTypeCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="qualTypeCdDescription">QUAL_TYPE_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow">
            Ecmps.Dbo.Table.RATA_FREQUENCY_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="rataFrequencyCd">RATA_FREQUENCY_CD</param>
            <param name="rataFrequencyCdDescription">RATA_FREQUENCY_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.RataFrequencyCd">
            RATA_FREQUENCY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.RataFrequencyCdDescription">
            RATA_FREQUENCY_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RataFrequencyCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="rataFrequencyCd">RATA_FREQUENCY_CD</param>
            <param name="rataFrequencyCdDescription">RATA_FREQUENCY_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow">
            Ecmps.Dbo.Table.REF_METHOD_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="refMethodCdDescription">REF_METHOD_CD_DESCRIPTION</param>
            <param name="parameterCd">PARAMETER_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.RefMethodCd">
            REF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.RefMethodCdDescription">
            REF_METHOD_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.RefMethodCodeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="refMethodCdDescription">REF_METHOD_CD_DESCRIPTION</param>
            <param name="parameterCd">PARAMETER_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow">
            Ecmps.Dbo.Table.SPAN_METHOD_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="spanMethodCdDescription">SPAN_METHOD_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.SpanMethodCd">
            SPAN_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.SpanMethodCdDescription">
            SPAN_METHOD_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SpanMethodCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="spanMethodCdDescription">SPAN_METHOD_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow">
            Ecmps.Dbo.Table.SUBSTITUTE_DATA_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="subDataCdDescription">SUB_DATA_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.SubDataCdDescription">
            SUB_DATA_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SubstituteDataCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="subDataCdDescription">SUB_DATA_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow">
            Ecmps.Dbo.Table.SYSTEM_DESIGNATION_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="sysDesignationCdDescription">SYS_DESIGNATION_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.SysDesignationCdDescription">
            SYS_DESIGNATION_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemDesignationCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="sysDesignationCdDescription">SYS_DESIGNATION_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow">
            Ecmps.Dbo.Table.SYSTEM_FUEL_FLOW
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sysFuelId">SYS_FUEL_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="maxRate">MAX_RATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysFuelUomCd">SYS_FUEL_UOM_CD</param>
            <param name="maxRateSourceCd">MAX_RATE_SOURCE_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.SysFuelId">
            SYS_FUEL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.MaxRate">
            MAX_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.SysFuelUomCd">
            SYS_FUEL_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.MaxRateSourceCd">
            MAX_RATE_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemFuelFlowRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="sysFuelId">SYS_FUEL_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="maxRate">MAX_RATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysFuelUomCd">SYS_FUEL_UOM_CD</param>
            <param name="maxRateSourceCd">MAX_RATE_SOURCE_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow">
            Ecmps.Dbo.Table.SYSTEM_TYPE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysTypeDescription">SYS_TYPE_DESCRIPTION</param>
            <param name="parameterCd">PARAMETER_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.SysTypeDescription">
            SYS_TYPE_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.SystemTypeCodeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysTypeDescription">SYS_TYPE_DESCRIPTION</param>
            <param name="parameterCd">PARAMETER_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow">
            Ecmps.Dbo.Table.TEST_BASIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testBasisCd">TEST_BASIS_CD</param>
            <param name="testBasisDescription">TEST_BASIS_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.TestBasisCd">
            TEST_BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.TestBasisDescription">
            TEST_BASIS_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestBasisCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testBasisCd">TEST_BASIS_CD</param>
            <param name="testBasisDescription">TEST_BASIS_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow">
            Ecmps.Dbo.Table.TEST_REASON_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testReasonCdDescription">TEST_REASON_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.TestReasonCdDescription">
            TEST_REASON_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestReasonCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testReasonCdDescription">TEST_REASON_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow">
            Ecmps.Dbo.Table.TEST_RESULT_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testResultCdDescription">TEST_RESULT_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.TestResultCdDescription">
            TEST_RESULT_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.TestResultCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testResultCdDescription">TEST_RESULT_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow">
            Ecmps.Dbo.Table.UNIT_CAPACITY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitCapId">UNIT_CAP_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="maxHiCapacity">MAX_HI_CAPACITY</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.UnitCapId">
            UNIT_CAP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.MaxHiCapacity">
            MAX_HI_CAPACITY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitCapacityRow.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitCapId">UNIT_CAP_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="maxHiCapacity">MAX_HI_CAPACITY</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow">
            Ecmps.Dbo.Table.UNIT_CONTROL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ctlId">CTL_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="ceParam">CE_PARAM</param>
            <param name="controlCd">CONTROL_CD</param>
            <param name="origInd">ORIG_IND</param>
            <param name="seasInd">SEAS_IND</param>
            <param name="optDate">OPT_DATE</param>
            <param name="installDate">INSTALL_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.CtlId">
            CTL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.CeParam">
            CE_PARAM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.ControlCd">
            CONTROL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.OrigInd">
            ORIG_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.SeasInd">
            SEAS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.OptDate">
            OPT_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.InstallDate">
            INSTALL_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.RetireDate">
            RETIRE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitControlRow.Set(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ctlId">CTL_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="ceParam">CE_PARAM</param>
            <param name="controlCd">CONTROL_CD</param>
            <param name="origInd">ORIG_IND</param>
            <param name="seasInd">SEAS_IND</param>
            <param name="optDate">OPT_DATE</param>
            <param name="installDate">INSTALL_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow">
            Ecmps.Dbo.Table.UNITS_OF_MEASURE_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="uomCd">UOM_CD</param>
            <param name="uomCdDescription">UOM_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.UomCd">
            UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.UomCdDescription">
            UOM_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitsOfMeasureCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="uomCd">UOM_CD</param>
            <param name="uomCdDescription">UOM_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow">
            Ecmps.Dbo.Table.UNIT_STACK_CONFIGURATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="configId">CONFIG_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.ConfigId">
            CONFIG_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.UnitStackConfigurationRow.Set(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="configId">CONFIG_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow">
            Ecmps.Dbo.Table.WAF_METHOD_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="wafMethodCd">WAF_METHOD_CD</param>
            <param name="wafMethodCdDescription">WAF_METHOD_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.WafMethodCd">
            WAF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.WafMethodCdDescription">
            WAF_METHOD_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.Table.WafMethodCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="wafMethodCd">WAF_METHOD_CD</param>
            <param name="wafMethodCdDescription">WAF_METHOD_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow">
            Ecmps.Dbo.View.VW_ANALYZER_RANGE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="dualRangeInd">DUAL_RANGE_IND</param>
            <param name="analyzerRangeId">ANALYZER_RANGE_ID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.AnalyzerRangeCd">
            ANALYZER_RANGE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.DualRangeInd">
            DUAL_RANGE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.AnalyzerRangeId">
            ANALYZER_RANGE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.Manufacturer">
            MANUFACTURER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.BasisCd">
            BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.ModelVersion">
            MODEL_VERSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwAnalyzerRangeRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="dualRangeInd">DUAL_RANGE_IND</param>
            <param name="analyzerRangeId">ANALYZER_RANGE_ID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow">
            Ecmps.Dbo.View.VW_CE_MP_MONITOR_LOCATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorPlanLocationId">MONITOR_PLAN_LOCATION_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="stackPipeActiveDate">STACK_PIPE_ACTIVE_DATE</param>
            <param name="stackPipeRetireDate">STACK_PIPE_RETIRE_DATE</param>
            <param name="earliestReportDate">EARLIEST_REPORT_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.MonitorPlanLocationId">
            MONITOR_PLAN_LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.StackPipeActiveDate">
            STACK_PIPE_ACTIVE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.StackPipeRetireDate">
            STACK_PIPE_RETIRE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.EarliestReportDate">
            EARLIEST_REPORT_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwCeMpMonitorLocationRow.Set(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorPlanLocationId">MONITOR_PLAN_LOCATION_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="stackPipeActiveDate">STACK_PIPE_ACTIVE_DATE</param>
            <param name="stackPipeRetireDate">STACK_PIPE_RETIRE_DATE</param>
            <param name="earliestReportDate">EARLIEST_REPORT_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow">
            Ecmps.Dbo.View.VW_COMPONENT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.ModelVersion">
            MODEL_VERSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.Manufacturer">
            MANUFACTURER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.BasisCd">
            BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.HgConverterInd">
            HG_CONVERTER_IND
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwComponentRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow">
            Ecmps.Dbo.View.VW_EM_DAILY_TEST_SUMMARY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testTypeCdDescription">TEST_TYPE_CD_DESCRIPTION</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.DailyTestSumId">
            DAILY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.TestTypeCdDescription">
            TEST_TYPE_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.DailyTestDate">
            DAILY_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.DailyTestHour">
            DAILY_TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.DailyTestMin">
            DAILY_TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEmDailyTestSummaryRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testTypeCdDescription">TEST_TYPE_CD_DESCRIPTION</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow">
            Ecmps.Dbo.View.VW_EVEM_DHV_TOTAL_AND_APRIL_LOAD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="total">TOTAL</param>
            <param name="april">APRIL</param>
            <param name="totalOptime">TOTAL_OPTIME</param>
            <param name="aprilOptime">APRIL_OPTIME</param>
            <param name="problemOccurred">PROBLEM_OCCURRED</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.Total">
            TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.April">
            APRIL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.TotalOptime">
            TOTAL_OPTIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.AprilOptime">
            APRIL_OPTIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.ProblemOccurred">
            PROBLEM_OCCURRED
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemDhvTotalAndAprilLoadRow.Set(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="total">TOTAL</param>
            <param name="april">APRIL</param>
            <param name="totalOptime">TOTAL_OPTIME</param>
            <param name="aprilOptime">APRIL_OPTIME</param>
            <param name="problemOccurred">PROBLEM_OCCURRED</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow">
            Ecmps.Dbo.View.VW_EVEM_EMISSIONS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="canSubmit">CAN_SUBMIT</param>
            <param name="submissionAvailabilityCd">SUBMISSION_AVAILABILITY_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.SeverityCd">
            SEVERITY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.CanSubmit">
            CAN_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.SubmissionAvailabilityCd">
            SUBMISSION_AVAILABILITY_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemEmissionsRow.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="canSubmit">CAN_SUBMIT</param>
            <param name="submissionAvailabilityCd">SUBMISSION_AVAILABILITY_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow">
            Ecmps.Dbo.View.VW_EVEM_LONG_TERM_FUEL_FLOW
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ltffId">LTFF_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="fuelFlowPeriodCd">FUEL_FLOW_PERIOD_CD</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="longTermFuelFlowValue">LONG_TERM_FUEL_FLOW_VALUE</param>
            <param name="ltffUomCd">LTFF_UOM_CD</param>
            <param name="grossCalorificValue">GROSS_CALORIFIC_VALUE</param>
            <param name="gcvUomCd">GCV_UOM_CD</param>
            <param name="totalHeatInput">TOTAL_HEAT_INPUT</param>
            <param name="calcTotalHeatInput">CALC_TOTAL_HEAT_INPUT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.LtffId">
            LTFF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.FuelFlowPeriodCd">
            FUEL_FLOW_PERIOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.LongTermFuelFlowValue">
            LONG_TERM_FUEL_FLOW_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.LtffUomCd">
            LTFF_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.GrossCalorificValue">
            GROSS_CALORIFIC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.GcvUomCd">
            GCV_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.TotalHeatInput">
            TOTAL_HEAT_INPUT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.CalcTotalHeatInput">
            CALC_TOTAL_HEAT_INPUT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemLongTermFuelFlowRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ltffId">LTFF_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="fuelFlowPeriodCd">FUEL_FLOW_PERIOD_CD</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="longTermFuelFlowValue">LONG_TERM_FUEL_FLOW_VALUE</param>
            <param name="ltffUomCd">LTFF_UOM_CD</param>
            <param name="grossCalorificValue">GROSS_CALORIFIC_VALUE</param>
            <param name="gcvUomCd">GCV_UOM_CD</param>
            <param name="totalHeatInput">TOTAL_HEAT_INPUT</param>
            <param name="calcTotalHeatInput">CALC_TOTAL_HEAT_INPUT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow">
            Ecmps.Dbo.View.VW_EVEM_SUMMARY_VALUE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sumValueId">SUM_VALUE_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="currentRptPeriodTotal">CURRENT_RPT_PERIOD_TOTAL</param>
            <param name="calcCurrentRptPeriodTotal">CALC_CURRENT_RPT_PERIOD_TOTAL</param>
            <param name="osTotal">OS_TOTAL</param>
            <param name="calcOsTotal">CALC_OS_TOTAL</param>
            <param name="yearTotal">YEAR_TOTAL</param>
            <param name="calcYearTotal">CALC_YEAR_TOTAL</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.SumValueId">
            SUM_VALUE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.CurrentRptPeriodTotal">
            CURRENT_RPT_PERIOD_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.CalcCurrentRptPeriodTotal">
            CALC_CURRENT_RPT_PERIOD_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.OsTotal">
            OS_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.CalcOsTotal">
            CALC_OS_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.YearTotal">
            YEAR_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.CalcYearTotal">
            CALC_YEAR_TOTAL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwEvemSummaryValueRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="sumValueId">SUM_VALUE_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="currentRptPeriodTotal">CURRENT_RPT_PERIOD_TOTAL</param>
            <param name="calcCurrentRptPeriodTotal">CALC_CURRENT_RPT_PERIOD_TOTAL</param>
            <param name="osTotal">OS_TOTAL</param>
            <param name="calcOsTotal">CALC_OS_TOTAL</param>
            <param name="yearTotal">YEAR_TOTAL</param>
            <param name="calcYearTotal">CALC_YEAR_TOTAL</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow">
            Ecmps.Dbo.View.VW_LOCATION_ATTRIBUTE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="grdElevation">GRD_ELEVATION</param>
            <param name="ductInd">DUCT_IND</param>
            <param name="bypassInd">BYPASS_IND</param>
            <param name="crossAreaFlow">CROSS_AREA_FLOW</param>
            <param name="crossAreaExit">CROSS_AREA_EXIT</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackHeight">STACK_HEIGHT</param>
            <param name="shapeCd">SHAPE_CD</param>
            <param name="materialCd">MATERIAL_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="monLocAttribId">MON_LOC_ATTRIB_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.GrdElevation">
            GRD_ELEVATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.DuctInd">
            DUCT_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.BypassInd">
            BYPASS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.CrossAreaFlow">
            CROSS_AREA_FLOW
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.CrossAreaExit">
            CROSS_AREA_EXIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.StackHeight">
            STACK_HEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.ShapeCd">
            SHAPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.MaterialCd">
            MATERIAL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.MonLocAttribId">
            MON_LOC_ATTRIB_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.Unitid">
            UNITID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationAttributeRow.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="grdElevation">GRD_ELEVATION</param>
            <param name="ductInd">DUCT_IND</param>
            <param name="bypassInd">BYPASS_IND</param>
            <param name="crossAreaFlow">CROSS_AREA_FLOW</param>
            <param name="crossAreaExit">CROSS_AREA_EXIT</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackHeight">STACK_HEIGHT</param>
            <param name="shapeCd">SHAPE_CD</param>
            <param name="materialCd">MATERIAL_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="monLocAttribId">MON_LOC_ATTRIB_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow">
            Ecmps.Dbo.View.VW_LOCATION_CAPACITY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitCapId">UNIT_CAP_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="unitId">UNIT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitid">UNITID</param>
            <param name="commOpDate">COMM_OP_DATE</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="maxHiCapacity">MAX_HI_CAPACITY</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.UnitCapId">
            UNIT_CAP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.CommOpDate">
            COMM_OP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.ComrOpDate">
            COMR_OP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.MaxHiCapacity">
            MAX_HI_CAPACITY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationCapacityRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitCapId">UNIT_CAP_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="unitId">UNIT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitid">UNITID</param>
            <param name="commOpDate">COMM_OP_DATE</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="maxHiCapacity">MAX_HI_CAPACITY</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow">
            Ecmps.Dbo.View.VW_LOCATION_CONTROL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ctlId">CTL_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="commOpDate">COMM_OP_DATE</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="ceParam">CE_PARAM</param>
            <param name="controlCd">CONTROL_CD</param>
            <param name="controlCdDescription">CONTROL_CD_DESCRIPTION</param>
            <param name="origInd">ORIG_IND</param>
            <param name="seasInd">SEAS_IND</param>
            <param name="optDate">OPT_DATE</param>
            <param name="installDate">INSTALL_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.CtlId">
            CTL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.CommOpDate">
            COMM_OP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.ComrOpDate">
            COMR_OP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.CeParam">
            CE_PARAM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.ControlCd">
            CONTROL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.ControlCdDescription">
            CONTROL_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.OrigInd">
            ORIG_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.SeasInd">
            SEAS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.OptDate">
            OPT_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.InstallDate">
            INSTALL_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.RetireDate">
            RETIRE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationControlRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ctlId">CTL_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="commOpDate">COMM_OP_DATE</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="ceParam">CE_PARAM</param>
            <param name="controlCd">CONTROL_CD</param>
            <param name="controlCdDescription">CONTROL_CD_DESCRIPTION</param>
            <param name="origInd">ORIG_IND</param>
            <param name="seasInd">SEAS_IND</param>
            <param name="optDate">OPT_DATE</param>
            <param name="installDate">INSTALL_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow">
            Ecmps.Dbo.View.VW_LOCATION_FUEL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ufId">UF_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="commOpDate">COMM_OP_DATE</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="demGcv">DEM_GCV</param>
            <param name="demSo2">DEM_SO2</param>
            <param name="indicatorCd">INDICATOR_CD</param>
            <param name="ozoneSeasInd">OZONE_SEAS_IND</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.UfId">
            UF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.CommOpDate">
            COMM_OP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.ComrOpDate">
            COMR_OP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.DemGcv">
            DEM_GCV
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.DemSo2">
            DEM_SO2
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.IndicatorCd">
            INDICATOR_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.OzoneSeasInd">
            OZONE_SEAS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationFuelRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ufId">UF_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="commOpDate">COMM_OP_DATE</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="demGcv">DEM_GCV</param>
            <param name="demSo2">DEM_SO2</param>
            <param name="indicatorCd">INDICATOR_CD</param>
            <param name="ozoneSeasInd">OZONE_SEAS_IND</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow">
            Ecmps.Dbo.View.VW_LOCATION_OPERATING_STATUS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="uosId">UOS_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="opStatusCd">OP_STATUS_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.UosId">
            UOS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.OpStatusCd">
            OP_STATUS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationOperatingStatusRow.Set(System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="uosId">UOS_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="opStatusCd">OP_STATUS_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow">
            Ecmps.Dbo.View.VW_LOCATION_PROGRAM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="upId">UP_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="unitMonitorCertBeginDate">UNIT_MONITOR_CERT_BEGIN_DATE</param>
            <param name="emissionsRecordingBeginDate">EMISSIONS_RECORDING_BEGIN_DATE</param>
            <param name="unitMonitoringBeginDate">UNIT_MONITORING_BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.UpId">
            UP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.PrgCd">
            PRG_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.Class">
            CLASS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.UnitMonitorCertBeginDate">
            UNIT_MONITOR_CERT_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.EmissionsRecordingBeginDate">
            EMISSIONS_RECORDING_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.UnitMonitoringBeginDate">
            UNIT_MONITORING_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationProgramRow.Set(System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="upId">UP_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="unitMonitorCertBeginDate">UNIT_MONITOR_CERT_BEGIN_DATE</param>
            <param name="emissionsRecordingBeginDate">EMISSIONS_RECORDING_BEGIN_DATE</param>
            <param name="unitMonitoringBeginDate">UNIT_MONITORING_BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow">
            Ecmps.Dbo.View.VW_LOCATION_REPORTING_FREQUENCY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanRfId">MON_PLAN_RF_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="reportFreqCd">REPORT_FREQ_CD</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="beginQuarter">BEGIN_QUARTER</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
            <param name="endQuarter">END_QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.MonPlanRfId">
            MON_PLAN_RF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.ReportFreqCd">
            REPORT_FREQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.BeginRptPeriodId">
            BEGIN_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.BeginQuarter">
            BEGIN_QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.EndRptPeriodId">
            END_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.EndQuarter">
            END_QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationReportingFrequencyRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanRfId">MON_PLAN_RF_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="reportFreqCd">REPORT_FREQ_CD</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="beginQuarter">BEGIN_QUARTER</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
            <param name="endQuarter">END_QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow">
            Ecmps.Dbo.View.VW_LOCATION_UNIT_TYPE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitBtId">UNIT_BT_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="unitId">UNIT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitid">UNITID</param>
            <param name="unitTypeCd">UNIT_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.UnitBtId">
            UNIT_BT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.UnitTypeCd">
            UNIT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwLocationUnitTypeRow.Set(System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitBtId">UNIT_BT_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="unitId">UNIT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="unitid">UNITID</param>
            <param name="unitTypeCd">UNIT_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow">
            Ecmps.Dbo.View.VW_MONITOR_DEFAULT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.MondefId">
            MONDEF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.DefaultValue">
            DEFAULT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.DefaultUomCd">
            DEFAULT_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.DefaultPurposeCd">
            DEFAULT_PURPOSE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.DefaultSourceCd">
            DEFAULT_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.GroupId">
            GROUP_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorDefaultRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow">
            Ecmps.Dbo.View.VW_MONITOR_FORMULA
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="formulaEquation">FORMULA_EQUATION</param>
            <param name="equationCdDescription">EQUATION_CD_DESCRIPTION</param>
            <param name="moistureInd">MOISTURE_IND</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.FormulaEquation">
            FORMULA_EQUATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.EquationCdDescription">
            EQUATION_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.MoistureInd">
            MOISTURE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorFormulaRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="formulaEquation">FORMULA_EQUATION</param>
            <param name="equationCdDescription">EQUATION_CD_DESCRIPTION</param>
            <param name="moistureInd">MOISTURE_IND</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow">
            Ecmps.Dbo.View.VW_MONITOR_LOAD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="loadId">LOAD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="loadAnalysisDate">LOAD_ANALYSIS_DATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="maxLoadValue">MAX_LOAD_VALUE</param>
            <param name="secondNormalInd">SECOND_NORMAL_IND</param>
            <param name="upOpBoundary">UP_OP_BOUNDARY</param>
            <param name="lowOpBoundary">LOW_OP_BOUNDARY</param>
            <param name="normalLevelCd">NORMAL_LEVEL_CD</param>
            <param name="secondLevelCd">SECOND_LEVEL_CD</param>
            <param name="maxLoadUomCd">MAX_LOAD_UOM_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.LoadId">
            LOAD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.LoadAnalysisDate">
            LOAD_ANALYSIS_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.MaxLoadValue">
            MAX_LOAD_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.SecondNormalInd">
            SECOND_NORMAL_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.UpOpBoundary">
            UP_OP_BOUNDARY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.LowOpBoundary">
            LOW_OP_BOUNDARY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.NormalLevelCd">
            NORMAL_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.SecondLevelCd">
            SECOND_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.MaxLoadUomCd">
            MAX_LOAD_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLoadRow.Set(System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="loadId">LOAD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="loadAnalysisDate">LOAD_ANALYSIS_DATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="maxLoadValue">MAX_LOAD_VALUE</param>
            <param name="secondNormalInd">SECOND_NORMAL_IND</param>
            <param name="upOpBoundary">UP_OP_BOUNDARY</param>
            <param name="lowOpBoundary">LOW_OP_BOUNDARY</param>
            <param name="normalLevelCd">NORMAL_LEVEL_CD</param>
            <param name="secondLevelCd">SECOND_LEVEL_CD</param>
            <param name="maxLoadUomCd">MAX_LOAD_UOM_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow">
            Ecmps.Dbo.View.VW_MONITOR_LOCATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facilityName">FACILITY_NAME</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="state">STATE</param>
            <param name="countyCd">COUNTY_CD</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="commOpDate">COMM_OP_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.FacilityName">
            FACILITY_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.State">
            STATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.CountyCd">
            COUNTY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.ActiveDate">
            ACTIVE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.RetireDate">
            RETIRE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.ComrOpDate">
            COMR_OP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.CommOpDate">
            COMM_OP_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorLocationRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facilityName">FACILITY_NAME</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="state">STATE</param>
            <param name="countyCd">COUNTY_CD</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="commOpDate">COMM_OP_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow">
            Ecmps.Dbo.View.VW_MONITOR_METHOD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorMethodRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow">
            Ecmps.Dbo.View.VW_MONITOR_PLAN_COMMENT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanCommentId">MON_PLAN_COMMENT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monPlanComment">MON_PLAN_COMMENT</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facilityName">FACILITY_NAME</param>
            <param name="state">STATE</param>
            <param name="facId">FAC_ID</param>
            <param name="submissionAvailabilityCd">SUBMISSION_AVAILABILITY_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.MonPlanCommentId">
            MON_PLAN_COMMENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.MonPlanComment">
            MON_PLAN_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.FacilityName">
            FACILITY_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.State">
            STATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.SubmissionAvailabilityCd">
            SUBMISSION_AVAILABILITY_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanCommentRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanCommentId">MON_PLAN_COMMENT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monPlanComment">MON_PLAN_COMMENT</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facilityName">FACILITY_NAME</param>
            <param name="state">STATE</param>
            <param name="facId">FAC_ID</param>
            <param name="submissionAvailabilityCd">SUBMISSION_AVAILABILITY_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow">
            Ecmps.Dbo.View.VW_MONITOR_PLAN_LOCATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="beginYear">BEGIN_YEAR</param>
            <param name="beginQuarter">BEGIN_QUARTER</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
            <param name="endYear">END_YEAR</param>
            <param name="endQuarter">END_QUARTER</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.ActiveDate">
            ACTIVE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.RetireDate">
            RETIRE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.SeverityCd">
            SEVERITY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.MustSubmit">
            MUST_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.BeginRptPeriodId">
            BEGIN_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.BeginYear">
            BEGIN_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.BeginQuarter">
            BEGIN_QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.EndRptPeriodId">
            END_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.EndYear">
            END_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.EndQuarter">
            END_QUARTER
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorPlanLocationRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="beginYear">BEGIN_YEAR</param>
            <param name="beginQuarter">BEGIN_QUARTER</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
            <param name="endYear">END_YEAR</param>
            <param name="endQuarter">END_QUARTER</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow">
            Ecmps.Dbo.View.VW_MONITOR_QUALIFICATION_LME
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
            <param name="monLmeId">MON_LME_ID</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="qualDataYear">QUAL_DATA_YEAR</param>
            <param name="so2Tons">SO2_TONS</param>
            <param name="noxTons">NOX_TONS</param>
            <param name="opHours">OP_HOURS</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.LocationId">
            LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.MonLmeId">
            MON_LME_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.QualDataYear">
            QUAL_DATA_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.So2Tons">
            SO2_TONS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.NoxTons">
            NOX_TONS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.OpHours">
            OP_HOURS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationLmeRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
            <param name="monLmeId">MON_LME_ID</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="qualDataYear">QUAL_DATA_YEAR</param>
            <param name="so2Tons">SO2_TONS</param>
            <param name="noxTons">NOX_TONS</param>
            <param name="opHours">OP_HOURS</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow">
            Ecmps.Dbo.View.VW_MONITOR_QUALIFICATION_PCT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
            <param name="monPctId">MON_PCT_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="qualYear">QUAL_YEAR</param>
            <param name="yr1QualDataTypeCd">YR1_QUAL_DATA_TYPE_CD</param>
            <param name="yr1QualDataYear">YR1_QUAL_DATA_YEAR</param>
            <param name="yr1PctValue">YR1_PCT_VALUE</param>
            <param name="yr2QualDataTypeCd">YR2_QUAL_DATA_TYPE_CD</param>
            <param name="yr2QualDataYear">YR2_QUAL_DATA_YEAR</param>
            <param name="yr2PctValue">YR2_PCT_VALUE</param>
            <param name="yr3QualDataTypeCd">YR3_QUAL_DATA_TYPE_CD</param>
            <param name="yr3QualDataYear">YR3_QUAL_DATA_YEAR</param>
            <param name="yr3PctValue">YR3_PCT_VALUE</param>
            <param name="avgPctValue">AVG_PCT_VALUE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.LocationId">
            LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.MonPctId">
            MON_PCT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.QualYear">
            QUAL_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr1QualDataTypeCd">
            YR1_QUAL_DATA_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr1QualDataYear">
            YR1_QUAL_DATA_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr1PctValue">
            YR1_PCT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr2QualDataTypeCd">
            YR2_QUAL_DATA_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr2QualDataYear">
            YR2_QUAL_DATA_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr2PctValue">
            YR2_PCT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr3QualDataTypeCd">
            YR3_QUAL_DATA_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr3QualDataYear">
            YR3_QUAL_DATA_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Yr3PctValue">
            YR3_PCT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.AvgPctValue">
            AVG_PCT_VALUE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationPctRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
            <param name="monPctId">MON_PCT_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="qualYear">QUAL_YEAR</param>
            <param name="yr1QualDataTypeCd">YR1_QUAL_DATA_TYPE_CD</param>
            <param name="yr1QualDataYear">YR1_QUAL_DATA_YEAR</param>
            <param name="yr1PctValue">YR1_PCT_VALUE</param>
            <param name="yr2QualDataTypeCd">YR2_QUAL_DATA_TYPE_CD</param>
            <param name="yr2QualDataYear">YR2_QUAL_DATA_YEAR</param>
            <param name="yr2PctValue">YR2_PCT_VALUE</param>
            <param name="yr3QualDataTypeCd">YR3_QUAL_DATA_TYPE_CD</param>
            <param name="yr3QualDataYear">YR3_QUAL_DATA_YEAR</param>
            <param name="yr3PctValue">YR3_PCT_VALUE</param>
            <param name="avgPctValue">AVG_PCT_VALUE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow">
            Ecmps.Dbo.View.VW_MONITOR_QUALIFICATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.LocationId">
            LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorQualificationRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow">
            Ecmps.Dbo.View.VW_MONITOR_SPAN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="spanId">SPAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="mpcValue">MPC_VALUE</param>
            <param name="mecValue">MEC_VALUE</param>
            <param name="mpfValue">MPF_VALUE</param>
            <param name="maxLowRange">MAX_LOW_RANGE</param>
            <param name="spanValue">SPAN_VALUE</param>
            <param name="fullScaleRange">FULL_SCALE_RANGE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="defaultHighRange">DEFAULT_HIGH_RANGE</param>
            <param name="flowSpanValue">FLOW_SPAN_VALUE</param>
            <param name="flowFullScaleRange">FLOW_FULL_SCALE_RANGE</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="spanUomCd">SPAN_UOM_CD</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.SpanId">
            SPAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.MpcValue">
            MPC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.MecValue">
            MEC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.MpfValue">
            MPF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.MaxLowRange">
            MAX_LOW_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.SpanValue">
            SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.FullScaleRange">
            FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.DefaultHighRange">
            DEFAULT_HIGH_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.FlowSpanValue">
            FLOW_SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.FlowFullScaleRange">
            FLOW_FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.SpanMethodCd">
            SPAN_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.SpanUomCd">
            SPAN_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSpanRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="spanId">SPAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="mpcValue">MPC_VALUE</param>
            <param name="mecValue">MEC_VALUE</param>
            <param name="mpfValue">MPF_VALUE</param>
            <param name="maxLowRange">MAX_LOW_RANGE</param>
            <param name="spanValue">SPAN_VALUE</param>
            <param name="fullScaleRange">FULL_SCALE_RANGE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="defaultHighRange">DEFAULT_HIGH_RANGE</param>
            <param name="flowSpanValue">FLOW_SPAN_VALUE</param>
            <param name="flowFullScaleRange">FLOW_FULL_SCALE_RANGE</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="spanUomCd">SPAN_UOM_CD</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow">
            Ecmps.Dbo.View.VW_MONITOR_SYSTEM_COMPONENT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monSysCompId">MON_SYS_COMP_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="systemBeginDate">SYSTEM_BEGIN_DATE</param>
            <param name="systemBeginHour">SYSTEM_BEGIN_HOUR</param>
            <param name="systemEndDate">SYSTEM_END_DATE</param>
            <param name="systemEndHour">SYSTEM_END_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.MonSysCompId">
            MON_SYS_COMP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.BasisCd">
            BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.SystemBeginDate">
            SYSTEM_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.SystemBeginHour">
            SYSTEM_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.SystemEndDate">
            SYSTEM_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.SystemEndHour">
            SYSTEM_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemComponentRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monSysCompId">MON_SYS_COMP_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="systemBeginDate">SYSTEM_BEGIN_DATE</param>
            <param name="systemBeginHour">SYSTEM_BEGIN_HOUR</param>
            <param name="systemEndDate">SYSTEM_END_DATE</param>
            <param name="systemEndHour">SYSTEM_END_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow">
            Ecmps.Dbo.View.VW_MONITOR_SYSTEM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMonitorSystemRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow">
            Ecmps.Dbo.View.VW_MP_ANALYZER_RANGE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="dualRangeInd">DUAL_RANGE_IND</param>
            <param name="analyzerRangeId">ANALYZER_RANGE_ID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.AnalyzerRangeCd">
            ANALYZER_RANGE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.DualRangeInd">
            DUAL_RANGE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.AnalyzerRangeId">
            ANALYZER_RANGE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.Manufacturer">
            MANUFACTURER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.BasisCd">
            BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.ModelVersion">
            MODEL_VERSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpAnalyzerRangeRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="dualRangeInd">DUAL_RANGE_IND</param>
            <param name="analyzerRangeId">ANALYZER_RANGE_ID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow">
            Ecmps.Dbo.View.VW_MP_COMPONENT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="locationName">LOCATION_NAME</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.ModelVersion">
            MODEL_VERSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.Manufacturer">
            MANUFACTURER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.BasisCd">
            BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpComponentRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="locationName">LOCATION_NAME</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow">
            Ecmps.Dbo.View.VW_MP_DAILY_CALIBRATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="dailyTestDatetime">DAILY_TEST_DATETIME</param>
            <param name="dailyTestDatehour">DAILY_TEST_DATEHOUR</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="upscaleInjectionDatetime">UPSCALE_INJECTION_DATETIME</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="zeroInjectionDatetime">ZERO_INJECTION_DATETIME</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="formattedTestDate">FORMATTED_TEST_DATE</param>
            <param name="upscaleGasTypeCd">UPSCALE_GAS_TYPE_CD</param>
            <param name="vendorId">VENDOR_ID</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.DailyTestDatetime">
            DAILY_TEST_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.DailyTestDatehour">
            DAILY_TEST_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.DailyTestDate">
            DAILY_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.DailyTestHour">
            DAILY_TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.DailyTestMin">
            DAILY_TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.OnlineOfflineInd">
            ONLINE_OFFLINE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleGasLevelCd">
            UPSCALE_GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleInjectionDatetime">
            UPSCALE_INJECTION_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleInjectionDate">
            UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleInjectionHour">
            UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleInjectionMin">
            UPSCALE_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleMeasuredValue">
            UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleRefValue">
            UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleCalError">
            UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleApsInd">
            UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ZeroInjectionDatetime">
            ZERO_INJECTION_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ZeroInjectionDate">
            ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ZeroInjectionHour">
            ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ZeroInjectionMin">
            ZERO_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ZeroMeasuredValue">
            ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ZeroRefValue">
            ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ZeroCalError">
            ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ZeroApsInd">
            ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.CalInjId">
            CAL_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.DailyTestSumId">
            DAILY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.FormattedTestDate">
            FORMATTED_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.UpscaleGasTypeCd">
            UPSCALE_GAS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.VendorId">
            VENDOR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.CylinderId">
            CYLINDER_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.ExpirationDate">
            EXPIRATION_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyCalibrationRow.Set(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="dailyTestDatetime">DAILY_TEST_DATETIME</param>
            <param name="dailyTestDatehour">DAILY_TEST_DATEHOUR</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="upscaleInjectionDatetime">UPSCALE_INJECTION_DATETIME</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="zeroInjectionDatetime">ZERO_INJECTION_DATETIME</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="formattedTestDate">FORMATTED_TEST_DATE</param>
            <param name="upscaleGasTypeCd">UPSCALE_GAS_TYPE_CD</param>
            <param name="vendorId">VENDOR_ID</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow">
            Ecmps.Dbo.View.VW_MP_DAILY_EMISSION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="dailyEmissionId">DAILY_EMISSION_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="totalDailyEmission">TOTAL_DAILY_EMISSION</param>
            <param name="totalCarbonBurned">TOTAL_CARBON_BURNED</param>
            <param name="adjustedDailyEmission">ADJUSTED_DAILY_EMISSION</param>
            <param name="unadjustedDailyEmission">UNADJUSTED_DAILY_EMISSION</param>
            <param name="sorbentMassEmission">SORBENT_MASS_EMISSION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.DailyEmissionId">
            DAILY_EMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.TotalDailyEmission">
            TOTAL_DAILY_EMISSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.TotalCarbonBurned">
            TOTAL_CARBON_BURNED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.AdjustedDailyEmission">
            ADJUSTED_DAILY_EMISSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.UnadjustedDailyEmission">
            UNADJUSTED_DAILY_EMISSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.SorbentMassEmission">
            SORBENT_MASS_EMISSION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyEmissionRow.Set(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="dailyEmissionId">DAILY_EMISSION_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="totalDailyEmission">TOTAL_DAILY_EMISSION</param>
            <param name="totalCarbonBurned">TOTAL_CARBON_BURNED</param>
            <param name="adjustedDailyEmission">ADJUSTED_DAILY_EMISSION</param>
            <param name="unadjustedDailyEmission">UNADJUSTED_DAILY_EMISSION</param>
            <param name="sorbentMassEmission">SORBENT_MASS_EMISSION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow">
            Ecmps.Dbo.View.VW_MP_DAILY_FUEL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="dailyEmissionId">DAILY_EMISSION_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="totalDailyEmission">TOTAL_DAILY_EMISSION</param>
            <param name="adjustedDailyEmission">ADJUSTED_DAILY_EMISSION</param>
            <param name="unadjustedDailyEmission">UNADJUSTED_DAILY_EMISSION</param>
            <param name="sorbentMassEmission">SORBENT_MASS_EMISSION</param>
            <param name="dailyFuelId">DAILY_FUEL_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="dailyFuelFeed">DAILY_FUEL_FEED</param>
            <param name="carbonContentUsed">CARBON_CONTENT_USED</param>
            <param name="fuelCarbonBurned">FUEL_CARBON_BURNED</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.DailyEmissionId">
            DAILY_EMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.TotalDailyEmission">
            TOTAL_DAILY_EMISSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.AdjustedDailyEmission">
            ADJUSTED_DAILY_EMISSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.UnadjustedDailyEmission">
            UNADJUSTED_DAILY_EMISSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.SorbentMassEmission">
            SORBENT_MASS_EMISSION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.DailyFuelId">
            DAILY_FUEL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.DailyFuelFeed">
            DAILY_FUEL_FEED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.CarbonContentUsed">
            CARBON_CONTENT_USED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.FuelCarbonBurned">
            FUEL_CARBON_BURNED
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDailyFuelRow.Set(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="dailyEmissionId">DAILY_EMISSION_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="totalDailyEmission">TOTAL_DAILY_EMISSION</param>
            <param name="adjustedDailyEmission">ADJUSTED_DAILY_EMISSION</param>
            <param name="unadjustedDailyEmission">UNADJUSTED_DAILY_EMISSION</param>
            <param name="sorbentMassEmission">SORBENT_MASS_EMISSION</param>
            <param name="dailyFuelId">DAILY_FUEL_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="dailyFuelFeed">DAILY_FUEL_FEED</param>
            <param name="carbonContentUsed">CARBON_CONTENT_USED</param>
            <param name="fuelCarbonBurned">FUEL_CARBON_BURNED</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE_CO2C
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2cRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE_CO2
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueCo2Row.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE_H2O
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueH2oRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE_HI
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueHiRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE_NOX
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE_NOXR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueNoxrRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE_SO2
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2Row.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow">
            Ecmps.Dbo.View.VW_MP_DERIVED_HRLY_VALUE_SO2R
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.DervId">
            DERV_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.DiluentCapInd">
            DILUENT_CAP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpDerivedHrlyValueSo2rRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dervId">DERV_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="modcCd">MODC_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="diluentCapInd">DILUENT_CAP_IND</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow">
            Ecmps.Dbo.View.VW_MP_HRLY_FUEL_FLOW
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="hrlyFuelFlowId">HRLY_FUEL_FLOW_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelUsageTime">FUEL_USAGE_TIME</param>
            <param name="volumetricFlowRate">VOLUMETRIC_FLOW_RATE</param>
            <param name="calcVolumetricFlowRate">CALC_VOLUMETRIC_FLOW_RATE</param>
            <param name="volumetricUomCd">VOLUMETRIC_UOM_CD</param>
            <param name="sodVolumetricCd">SOD_VOLUMETRIC_CD</param>
            <param name="massFlowRate">MASS_FLOW_RATE</param>
            <param name="calcMassFlowRate">CALC_MASS_FLOW_RATE</param>
            <param name="sodMassCd">SOD_MASS_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="systemBeginDate">SYSTEM_BEGIN_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.HrlyFuelFlowId">
            HRLY_FUEL_FLOW_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.UnitFuelCd">
            UNIT_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.FuelUsageTime">
            FUEL_USAGE_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.VolumetricFlowRate">
            VOLUMETRIC_FLOW_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.CalcVolumetricFlowRate">
            CALC_VOLUMETRIC_FLOW_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.VolumetricUomCd">
            VOLUMETRIC_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.SodVolumetricCd">
            SOD_VOLUMETRIC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.MassFlowRate">
            MASS_FLOW_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.CalcMassFlowRate">
            CALC_MASS_FLOW_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.SodMassCd">
            SOD_MASS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.SystemBeginDate">
            SYSTEM_BEGIN_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyFuelFlowRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="hrlyFuelFlowId">HRLY_FUEL_FLOW_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelUsageTime">FUEL_USAGE_TIME</param>
            <param name="volumetricFlowRate">VOLUMETRIC_FLOW_RATE</param>
            <param name="calcVolumetricFlowRate">CALC_VOLUMETRIC_FLOW_RATE</param>
            <param name="volumetricUomCd">VOLUMETRIC_UOM_CD</param>
            <param name="sodVolumetricCd">SOD_VOLUMETRIC_CD</param>
            <param name="massFlowRate">MASS_FLOW_RATE</param>
            <param name="calcMassFlowRate">CALC_MASS_FLOW_RATE</param>
            <param name="sodMassCd">SOD_MASS_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="systemBeginDate">SYSTEM_BEGIN_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow">
            Ecmps.Dbo.View.VW_MP_HRLY_OP_DATA
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="hourId">HOUR_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="loadUomCd">LOAD_UOM_CD</param>
            <param name="opTime">OP_TIME</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="hrLoad">HR_LOAD</param>
            <param name="loadRange">LOAD_RANGE</param>
            <param name="commonStackLoadRange">COMMON_STACK_LOAD_RANGE</param>
            <param name="fcFactor">FC_FACTOR</param>
            <param name="fdFactor">FD_FACTOR</param>
            <param name="fwFactor">FW_FACTOR</param>
            <param name="multiFuelFlg">MULTI_FUEL_FLG</param>
            <param name="fuelCdList">FUEL_CD_LIST</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="mhhiIndicator">MHHI_INDICATOR</param>
            <param name="matsHourLoad">MATS_HOUR_LOAD</param>
            <param name="matsStartupShutdownFlg">MATS_STARTUP_SHUTDOWN_FLG</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.UnitFuelCd">
            UNIT_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.LoadUomCd">
            LOAD_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.OpTime">
            OP_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.HrLoad">
            HR_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.LoadRange">
            LOAD_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.CommonStackLoadRange">
            COMMON_STACK_LOAD_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.FcFactor">
            FC_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.FdFactor">
            FD_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.FwFactor">
            FW_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.MultiFuelFlg">
            MULTI_FUEL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.FuelCdList">
            FUEL_CD_LIST
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.MhhiIndicator">
            MHHI_INDICATOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.MatsHourLoad">
            MATS_HOUR_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.MatsStartupShutdownFlg">
            MATS_STARTUP_SHUTDOWN_FLG
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyOpDataRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="hourId">HOUR_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="loadUomCd">LOAD_UOM_CD</param>
            <param name="opTime">OP_TIME</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="hrLoad">HR_LOAD</param>
            <param name="loadRange">LOAD_RANGE</param>
            <param name="commonStackLoadRange">COMMON_STACK_LOAD_RANGE</param>
            <param name="fcFactor">FC_FACTOR</param>
            <param name="fdFactor">FD_FACTOR</param>
            <param name="fwFactor">FW_FACTOR</param>
            <param name="multiFuelFlg">MULTI_FUEL_FLG</param>
            <param name="fuelCdList">FUEL_CD_LIST</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="mhhiIndicator">MHHI_INDICATOR</param>
            <param name="matsHourLoad">MATS_HOUR_LOAD</param>
            <param name="matsStartupShutdownFlg">MATS_STARTUP_SHUTDOWN_FLG</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow">
            Ecmps.Dbo.View.VW_MP_HRLY_PARAM_FUEL_FLOW
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="hrlyParamFfId">HRLY_PARAM_FF_ID</param>
            <param name="hrlyFuelFlowId">HRLY_FUEL_FLOW_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="paramValFuel">PARAM_VAL_FUEL</param>
            <param name="calcParamValFuel">CALC_PARAM_VAL_FUEL</param>
            <param name="sampleTypeCd">SAMPLE_TYPE_CD</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="parameterUomCd">PARAMETER_UOM_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.HrlyParamFfId">
            HRLY_PARAM_FF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.HrlyFuelFlowId">
            HRLY_FUEL_FLOW_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.ParamValFuel">
            PARAM_VAL_FUEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.CalcParamValFuel">
            CALC_PARAM_VAL_FUEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.SampleTypeCd">
            SAMPLE_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.SegmentNum">
            SEGMENT_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.ParameterUomCd">
            PARAMETER_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.FormulaParameterCd">
            FORMULA_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlyParamFuelFlowRow.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="hrlyParamFfId">HRLY_PARAM_FF_ID</param>
            <param name="hrlyFuelFlowId">HRLY_FUEL_FLOW_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="paramValFuel">PARAM_VAL_FUEL</param>
            <param name="calcParamValFuel">CALC_PARAM_VAL_FUEL</param>
            <param name="sampleTypeCd">SAMPLE_TYPE_CD</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="segmentNum">SEGMENT_NUM</param>
            <param name="parameterUomCd">PARAMETER_UOM_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="formulaParameterCd">FORMULA_PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow">
            Ecmps.Dbo.View.VW_MP_HRLY_SUBMISSION_COMMENT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="hrlySubCommentId">HRLY_SUB_COMMENT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="submissionComment">SUBMISSION_COMMENT</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.HrlySubCommentId">
            HRLY_SUB_COMMENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.SubmissionComment">
            SUBMISSION_COMMENT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpHrlySubmissionCommentRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="hrlySubCommentId">HRLY_SUB_COMMENT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="submissionComment">SUBMISSION_COMMENT</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow">
            Ecmps.Dbo.View.VW_MP_LOCATION_ATTRIBUTE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="grdElevation">GRD_ELEVATION</param>
            <param name="ductInd">DUCT_IND</param>
            <param name="bypassInd">BYPASS_IND</param>
            <param name="crossAreaFlow">CROSS_AREA_FLOW</param>
            <param name="crossAreaExit">CROSS_AREA_EXIT</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackHeight">STACK_HEIGHT</param>
            <param name="shapeCd">SHAPE_CD</param>
            <param name="materialCd">MATERIAL_CD</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="monLocAttribId">MON_LOC_ATTRIB_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.GrdElevation">
            GRD_ELEVATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.DuctInd">
            DUCT_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.BypassInd">
            BYPASS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.CrossAreaFlow">
            CROSS_AREA_FLOW
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.CrossAreaExit">
            CROSS_AREA_EXIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.StackHeight">
            STACK_HEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.ShapeCd">
            SHAPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.MaterialCd">
            MATERIAL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.MonLocAttribId">
            MON_LOC_ATTRIB_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationAttributeRow.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="grdElevation">GRD_ELEVATION</param>
            <param name="ductInd">DUCT_IND</param>
            <param name="bypassInd">BYPASS_IND</param>
            <param name="crossAreaFlow">CROSS_AREA_FLOW</param>
            <param name="crossAreaExit">CROSS_AREA_EXIT</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackHeight">STACK_HEIGHT</param>
            <param name="shapeCd">SHAPE_CD</param>
            <param name="materialCd">MATERIAL_CD</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="monLocAttribId">MON_LOC_ATTRIB_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow">
            Ecmps.Dbo.View.VW_MP_LOCATION_FUEL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="ufId">UF_ID</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="unitName">UNIT_NAME</param>
            <param name="demGcv">DEM_GCV</param>
            <param name="demSo2">DEM_SO2</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="indicatorCd">INDICATOR_CD</param>
            <param name="ozoneSeasInd">OZONE_SEAS_IND</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="unitId">UNIT_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.UfId">
            UF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.UnitName">
            UNIT_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.DemGcv">
            DEM_GCV
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.DemSo2">
            DEM_SO2
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.IndicatorCd">
            INDICATOR_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.OzoneSeasInd">
            OZONE_SEAS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.UnitId">
            UNIT_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationFuelRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="ufId">UF_ID</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="unitName">UNIT_NAME</param>
            <param name="demGcv">DEM_GCV</param>
            <param name="demSo2">DEM_SO2</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="indicatorCd">INDICATOR_CD</param>
            <param name="ozoneSeasInd">OZONE_SEAS_IND</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="unitId">UNIT_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow">
            Ecmps.Dbo.View.VW_MP_LOCATION_PROGRAM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="upId">UP_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="unitMonitorCertBeginDate">UNIT_MONITOR_CERT_BEGIN_DATE</param>
            <param name="emissionsRecordingBeginDate">EMISSIONS_RECORDING_BEGIN_DATE</param>
            <param name="trueupBeginYear">TRUEUP_BEGIN_YEAR</param>
            <param name="unitMonitorCertDeadline">UNIT_MONITOR_CERT_DEADLINE</param>
            <param name="nonEguFlg">NON_EGU_FLG</param>
            <param name="appStatus">APP_STATUS</param>
            <param name="noxGroup">NOX_GROUP</param>
            <param name="optinInd">OPTIN_IND</param>
            <param name="defInd">DEF_IND</param>
            <param name="defEndDate">DEF_END_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.UpId">
            UP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.PrgCd">
            PRG_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.Class">
            CLASS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.UnitMonitorCertBeginDate">
            UNIT_MONITOR_CERT_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.EmissionsRecordingBeginDate">
            EMISSIONS_RECORDING_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.TrueupBeginYear">
            TRUEUP_BEGIN_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.UnitMonitorCertDeadline">
            UNIT_MONITOR_CERT_DEADLINE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.NonEguFlg">
            NON_EGU_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.AppStatus">
            APP_STATUS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.NoxGroup">
            NOX_GROUP
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.OptinInd">
            OPTIN_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.DefInd">
            DEF_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.DefEndDate">
            DEF_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationProgramRow.Set(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="upId">UP_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="unitId">UNIT_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="unitMonitorCertBeginDate">UNIT_MONITOR_CERT_BEGIN_DATE</param>
            <param name="emissionsRecordingBeginDate">EMISSIONS_RECORDING_BEGIN_DATE</param>
            <param name="trueupBeginYear">TRUEUP_BEGIN_YEAR</param>
            <param name="unitMonitorCertDeadline">UNIT_MONITOR_CERT_DEADLINE</param>
            <param name="nonEguFlg">NON_EGU_FLG</param>
            <param name="appStatus">APP_STATUS</param>
            <param name="noxGroup">NOX_GROUP</param>
            <param name="optinInd">OPTIN_IND</param>
            <param name="defInd">DEF_IND</param>
            <param name="defEndDate">DEF_END_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow">
            Ecmps.Dbo.View.VW_MP_LOCATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="locationType">LOCATION_TYPE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.ActiveDate">
            ACTIVE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.RetireDate">
            RETIRE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.ComrOpDate">
            COMR_OP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.LocationType">
            LOCATION_TYPE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLocationRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="comrOpDate">COMR_OP_DATE</param>
            <param name="locationType">LOCATION_TYPE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow">
            Ecmps.Dbo.View.VW_MP_LONG_TERM_FUEL_FLOW
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.#ctor(System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="ltffId">LTFF_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="fuelFlowPeriodCd">FUEL_FLOW_PERIOD_CD</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="longTermFuelFlowValue">LONG_TERM_FUEL_FLOW_VALUE</param>
            <param name="ltffUomCd">LTFF_UOM_CD</param>
            <param name="grossCalorificValue">GROSS_CALORIFIC_VALUE</param>
            <param name="gcvUomCd">GCV_UOM_CD</param>
            <param name="totalHeatInput">TOTAL_HEAT_INPUT</param>
            <param name="calcTotalHeatInput">CALC_TOTAL_HEAT_INPUT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.LtffId">
            LTFF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.FuelFlowPeriodCd">
            FUEL_FLOW_PERIOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.LongTermFuelFlowValue">
            LONG_TERM_FUEL_FLOW_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.LtffUomCd">
            LTFF_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.GrossCalorificValue">
            GROSS_CALORIFIC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.GcvUomCd">
            GCV_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.TotalHeatInput">
            TOTAL_HEAT_INPUT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.CalcTotalHeatInput">
            CALC_TOTAL_HEAT_INPUT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpLongTermFuelFlowRow.Set(System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="ltffId">LTFF_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="fuelFlowPeriodCd">FUEL_FLOW_PERIOD_CD</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="longTermFuelFlowValue">LONG_TERM_FUEL_FLOW_VALUE</param>
            <param name="ltffUomCd">LTFF_UOM_CD</param>
            <param name="grossCalorificValue">GROSS_CALORIFIC_VALUE</param>
            <param name="gcvUomCd">GCV_UOM_CD</param>
            <param name="totalHeatInput">TOTAL_HEAT_INPUT</param>
            <param name="calcTotalHeatInput">CALC_TOTAL_HEAT_INPUT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_DEFAULT_CO2N_NFS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.MondefId">
            MONDEF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.DefaultValue">
            DEFAULT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.DefaultUomCd">
            DEFAULT_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.DefaultPurposeCd">
            DEFAULT_PURPOSE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.DefaultSourceCd">
            DEFAULT_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.GroupId">
            GROUP_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultCo2nNfsRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_DEFAULT_O2X
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.MondefId">
            MONDEF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.DefaultValue">
            DEFAULT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.DefaultUomCd">
            DEFAULT_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.DefaultPurposeCd">
            DEFAULT_PURPOSE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.DefaultSourceCd">
            DEFAULT_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.GroupId">
            GROUP_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultO2xRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_DEFAULT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.MondefId">
            MONDEF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.DefaultValue">
            DEFAULT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.DefaultUomCd">
            DEFAULT_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.DefaultPurposeCd">
            DEFAULT_PURPOSE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.DefaultSourceCd">
            DEFAULT_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.GroupId">
            GROUP_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row">
            Ecmps.Dbo.View.VW_MP_MONITOR_DEFAULT_SO2R_F23
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.MondefId">
            MONDEF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.DefaultValue">
            DEFAULT_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.DefaultUomCd">
            DEFAULT_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.DefaultPurposeCd">
            DEFAULT_PURPOSE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.DefaultSourceCd">
            DEFAULT_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.GroupId">
            GROUP_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorDefaultSo2rF23Row.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mondefId">MONDEF_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="defaultValue">DEFAULT_VALUE</param>
            <param name="defaultUomCd">DEFAULT_UOM_CD</param>
            <param name="defaultPurposeCd">DEFAULT_PURPOSE_CD</param>
            <param name="defaultSourceCd">DEFAULT_SOURCE_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="groupId">GROUP_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_FORMULA
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="formulaEquation">FORMULA_EQUATION</param>
            <param name="facId">FAC_ID</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="equationCdDescription">EQUATION_CD_DESCRIPTION</param>
            <param name="moistureInd">MOISTURE_IND</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.FormulaEquation">
            FORMULA_EQUATION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.EquationCdDescription">
            EQUATION_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.MoistureInd">
            MOISTURE_IND
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorFormulaRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="formulaEquation">FORMULA_EQUATION</param>
            <param name="facId">FAC_ID</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="equationCdDescription">EQUATION_CD_DESCRIPTION</param>
            <param name="moistureInd">MOISTURE_IND</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_HRLY_VALUE_CO2C
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueCo2cRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_HRLY_VALUE_FLOW
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueFlowRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_HRLY_VALUE_H2O
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueH2oRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_HRLY_VALUE_O2_DRY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2DryRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_HRLY_VALUE_O2_NULL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2NullRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_HRLY_VALUE_O2_WET
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueO2WetRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_HRLY_VALUE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_HRLY_VALUE_SO2C
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.MonitorHrlyValId">
            MONITOR_HRLY_VAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.HourId">
            HOUR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.ModcCd">
            MODC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.AdjustedHrlyValue">
            ADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.UnadjustedHrlyValue">
            UNADJUSTED_HRLY_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.PctAvailable">
            PCT_AVAILABLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.MoistureBasis">
            MOISTURE_BASIS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorHrlyValueSo2cRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorHrlyValId">MONITOR_HRLY_VAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="hourId">HOUR_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="modcCd">MODC_CD</param>
            <param name="adjustedHrlyValue">ADJUSTED_HRLY_VALUE</param>
            <param name="unadjustedHrlyValue">UNADJUSTED_HRLY_VALUE</param>
            <param name="pctAvailable">PCT_AVAILABLE</param>
            <param name="moistureBasis">MOISTURE_BASIS</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_LOAD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="loadId">LOAD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="loadAnalysisDate">LOAD_ANALYSIS_DATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="maxLoadValue">MAX_LOAD_VALUE</param>
            <param name="secondNormalInd">SECOND_NORMAL_IND</param>
            <param name="upOpBoundary">UP_OP_BOUNDARY</param>
            <param name="lowOpBoundary">LOW_OP_BOUNDARY</param>
            <param name="normalLevelCd">NORMAL_LEVEL_CD</param>
            <param name="secondLevelCd">SECOND_LEVEL_CD</param>
            <param name="maxLoadUomCd">MAX_LOAD_UOM_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.LoadId">
            LOAD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.LoadAnalysisDate">
            LOAD_ANALYSIS_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.MaxLoadValue">
            MAX_LOAD_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.SecondNormalInd">
            SECOND_NORMAL_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.UpOpBoundary">
            UP_OP_BOUNDARY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.LowOpBoundary">
            LOW_OP_BOUNDARY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.NormalLevelCd">
            NORMAL_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.SecondLevelCd">
            SECOND_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.MaxLoadUomCd">
            MAX_LOAD_UOM_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLoadRow.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="loadId">LOAD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="loadAnalysisDate">LOAD_ANALYSIS_DATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="maxLoadValue">MAX_LOAD_VALUE</param>
            <param name="secondNormalInd">SECOND_NORMAL_IND</param>
            <param name="upOpBoundary">UP_OP_BOUNDARY</param>
            <param name="lowOpBoundary">LOW_OP_BOUNDARY</param>
            <param name="normalLevelCd">NORMAL_LEVEL_CD</param>
            <param name="secondLevelCd">SECOND_LEVEL_CD</param>
            <param name="maxLoadUomCd">MAX_LOAD_UOM_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_LOCATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monitorPlanLocationId">MONITOR_PLAN_LOCATION_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="stackPipeActiveDate">STACK_PIPE_ACTIVE_DATE</param>
            <param name="stackPipeRetireDate">STACK_PIPE_RETIRE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.MonitorPlanLocationId">
            MONITOR_PLAN_LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.LocationName">
            LOCATION_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.StackPipeActiveDate">
            STACK_PIPE_ACTIVE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.StackPipeRetireDate">
            STACK_PIPE_RETIRE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorLocationRow.Set(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monitorPlanLocationId">MONITOR_PLAN_LOCATION_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationName">LOCATION_NAME</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="stackPipeActiveDate">STACK_PIPE_ACTIVE_DATE</param>
            <param name="stackPipeRetireDate">STACK_PIPE_RETIRE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row">
            Ecmps.Dbo.View.VW_MP_MONITOR_METHOD_CO2
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.EndHour">
            END_HOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodCo2Row.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_METHOD_H2O
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.EndHour">
            END_HOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodH2oRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_METHOD_HI
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.EndHour">
            END_HOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodHiRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_METHOD_NOX
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.EndHour">
            END_HOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_METHOD_NOXR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.EndHour">
            END_HOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodNoxrRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_METHOD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.MonMethodId">
            MON_METHOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.SubDataCd">
            SUB_DATA_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.BypassApproachCd">
            BYPASS_APPROACH_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.MethodCd">
            METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.Unitid">
            UNITID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorMethodRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monMethodId">MON_METHOD_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="subDataCd">SUB_DATA_CD</param>
            <param name="bypassApproachCd">BYPASS_APPROACH_CD</param>
            <param name="methodCd">METHOD_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_PLAN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facilityName">FACILITY_NAME</param>
            <param name="state">STATE</param>
            <param name="facId">FAC_ID</param>
            <param name="configTypeCd">CONFIG_TYPE_CD</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
            <param name="status">STATUS</param>
            <param name="displayStatus">DISPLAY_STATUS</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="lastEvaluatedDate">LAST_EVALUATED_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="submissionAvailabilityCd">SUBMISSION_AVAILABILITY_CD</param>
            <param name="firstEcmpsRptPeriodId">FIRST_ECMPS_RPT_PERIOD_ID</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.FacilityName">
            FACILITY_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.State">
            STATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.ConfigTypeCd">
            CONFIG_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.BeginRptPeriodId">
            BEGIN_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.EndRptPeriodId">
            END_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.Status">
            STATUS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.DisplayStatus">
            DISPLAY_STATUS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.LastEvaluatedDate">
            LAST_EVALUATED_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.SubmissionAvailabilityCd">
            SUBMISSION_AVAILABILITY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.FirstEcmpsRptPeriodId">
            FIRST_ECMPS_RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.SeverityCd">
            SEVERITY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.MustSubmit">
            MUST_SUBMIT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorPlanRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facilityName">FACILITY_NAME</param>
            <param name="state">STATE</param>
            <param name="facId">FAC_ID</param>
            <param name="configTypeCd">CONFIG_TYPE_CD</param>
            <param name="beginRptPeriodId">BEGIN_RPT_PERIOD_ID</param>
            <param name="endRptPeriodId">END_RPT_PERIOD_ID</param>
            <param name="status">STATUS</param>
            <param name="displayStatus">DISPLAY_STATUS</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="lastEvaluatedDate">LAST_EVALUATED_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="submissionAvailabilityCd">SUBMISSION_AVAILABILITY_CD</param>
            <param name="firstEcmpsRptPeriodId">FIRST_ECMPS_RPT_PERIOD_ID</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_QUALIFICATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.LocationId">
            LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorQualificationRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_SPAN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.#ctor(System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="spanId">SPAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="mpcValue">MPC_VALUE</param>
            <param name="mecValue">MEC_VALUE</param>
            <param name="mpfValue">MPF_VALUE</param>
            <param name="maxLowRange">MAX_LOW_RANGE</param>
            <param name="spanValue">SPAN_VALUE</param>
            <param name="fullScaleRange">FULL_SCALE_RANGE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="defaultHighRange">DEFAULT_HIGH_RANGE</param>
            <param name="flowSpanValue">FLOW_SPAN_VALUE</param>
            <param name="flowFullScaleRange">FLOW_FULL_SCALE_RANGE</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="spanUomCd">SPAN_UOM_CD</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.SpanId">
            SPAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.MpcValue">
            MPC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.MecValue">
            MEC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.MpfValue">
            MPF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.MaxLowRange">
            MAX_LOW_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.SpanValue">
            SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.FullScaleRange">
            FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.DefaultHighRange">
            DEFAULT_HIGH_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.FlowSpanValue">
            FLOW_SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.FlowFullScaleRange">
            FLOW_FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.SpanMethodCd">
            SPAN_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.SpanUomCd">
            SPAN_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSpanRow.Set(System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="spanId">SPAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="mpcValue">MPC_VALUE</param>
            <param name="mecValue">MEC_VALUE</param>
            <param name="mpfValue">MPF_VALUE</param>
            <param name="maxLowRange">MAX_LOW_RANGE</param>
            <param name="spanValue">SPAN_VALUE</param>
            <param name="fullScaleRange">FULL_SCALE_RANGE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="defaultHighRange">DEFAULT_HIGH_RANGE</param>
            <param name="flowSpanValue">FLOW_SPAN_VALUE</param>
            <param name="flowFullScaleRange">FLOW_FULL_SCALE_RANGE</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="spanUomCd">SPAN_UOM_CD</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_SYSTEM_COMPONENT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="systemBeginDatehour">SYSTEM_BEGIN_DATEHOUR</param>
            <param name="systemBeginDate">SYSTEM_BEGIN_DATE</param>
            <param name="systemBeginHour">SYSTEM_BEGIN_HOUR</param>
            <param name="systemEndDatehour">SYSTEM_END_DATEHOUR</param>
            <param name="systemEndDate">SYSTEM_END_DATE</param>
            <param name="systemEndHour">SYSTEM_END_HOUR</param>
            <param name="monSysCompId">MON_SYS_COMP_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.BasisCd">
            BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SystemBeginDatehour">
            SYSTEM_BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SystemBeginDate">
            SYSTEM_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SystemBeginHour">
            SYSTEM_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SystemEndDatehour">
            SYSTEM_END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SystemEndDate">
            SYSTEM_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.SystemEndHour">
            SYSTEM_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.MonSysCompId">
            MON_SYS_COMP_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemComponentRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="systemBeginDatehour">SYSTEM_BEGIN_DATEHOUR</param>
            <param name="systemBeginDate">SYSTEM_BEGIN_DATE</param>
            <param name="systemBeginHour">SYSTEM_BEGIN_HOUR</param>
            <param name="systemEndDatehour">SYSTEM_END_DATEHOUR</param>
            <param name="systemEndDate">SYSTEM_END_DATE</param>
            <param name="systemEndHour">SYSTEM_END_HOUR</param>
            <param name="monSysCompId">MON_SYS_COMP_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow">
            Ecmps.Dbo.View.VW_MP_MONITOR_SYSTEM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpMonitorSystemRow.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDatehour">END_DATEHOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow">
            Ecmps.Dbo.View.VW_MP_OPERATING_STATUS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="opStatusCd">OP_STATUS_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="endDate">END_DATE</param>
            <param name="uosId">UOS_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.OpStatusCd">
            OP_STATUS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.UosId">
            UOS_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOperatingStatusRow.Set(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="opStatusCd">OP_STATUS_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="endDate">END_DATE</param>
            <param name="uosId">UOS_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow">
            Ecmps.Dbo.View.VW_MP_OP_SUPP_DATA
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="opSuppDataId">OP_SUPP_DATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="opTypeCd">OP_TYPE_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="opValue">OP_VALUE</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="quarterBeginDate">QUARTER_BEGIN_DATE</param>
            <param name="quarterEndDate">QUARTER_END_DATE</param>
            <param name="quarterOrd">QUARTER_ORD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.OpSuppDataId">
            OP_SUPP_DATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.OpTypeCd">
            OP_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.OpValue">
            OP_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.QuarterBeginDate">
            QUARTER_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.QuarterEndDate">
            QUARTER_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.QuarterOrd">
            QUARTER_ORD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpOpSuppDataRow.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="opSuppDataId">OP_SUPP_DATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="opTypeCd">OP_TYPE_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="opValue">OP_VALUE</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="quarterBeginDate">QUARTER_BEGIN_DATE</param>
            <param name="quarterEndDate">QUARTER_END_DATE</param>
            <param name="quarterOrd">QUARTER_ORD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow">
            Ecmps.Dbo.View.VW_MP_PROGRAM_EXEMPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="upId">UP_ID</param>
            <param name="upeId">UPE_ID</param>
            <param name="exemptTypeCd">EXEMPT_TYPE_CD</param>
            <param name="exRecDate">EX_REC_DATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.PrgCd">
            PRG_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.UpId">
            UP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.UpeId">
            UPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.ExemptTypeCd">
            EXEMPT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.ExRecDate">
            EX_REC_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpProgramExemptionRow.Set(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="upId">UP_ID</param>
            <param name="upeId">UPE_ID</param>
            <param name="exemptTypeCd">EXEMPT_TYPE_CD</param>
            <param name="exRecDate">EX_REC_DATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow">
            Ecmps.Dbo.View.VW_MP_QUALIFICATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpQualificationRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow">
            Ecmps.Dbo.View.VW_MP_SUMMARY_VALUE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sumValueId">SUM_VALUE_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="currentRptPeriodTotal">CURRENT_RPT_PERIOD_TOTAL</param>
            <param name="calcCurrentRptPeriodTotal">CALC_CURRENT_RPT_PERIOD_TOTAL</param>
            <param name="osTotal">OS_TOTAL</param>
            <param name="calcOsTotal">CALC_OS_TOTAL</param>
            <param name="yearTotal">YEAR_TOTAL</param>
            <param name="calcYearTotal">CALC_YEAR_TOTAL</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.SumValueId">
            SUM_VALUE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.CurrentRptPeriodTotal">
            CURRENT_RPT_PERIOD_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.CalcCurrentRptPeriodTotal">
            CALC_CURRENT_RPT_PERIOD_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.OsTotal">
            OS_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.CalcOsTotal">
            CALC_OS_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.YearTotal">
            YEAR_TOTAL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.CalcYearTotal">
            CALC_YEAR_TOTAL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSummaryValueRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="sumValueId">SUM_VALUE_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="currentRptPeriodTotal">CURRENT_RPT_PERIOD_TOTAL</param>
            <param name="calcCurrentRptPeriodTotal">CALC_CURRENT_RPT_PERIOD_TOTAL</param>
            <param name="osTotal">OS_TOTAL</param>
            <param name="calcOsTotal">CALC_OS_TOTAL</param>
            <param name="yearTotal">YEAR_TOTAL</param>
            <param name="calcYearTotal">CALC_YEAR_TOTAL</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow">
            Ecmps.Dbo.View.VW_MP_SYSTEM_FUEL_FLOW
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sysFuelId">SYS_FUEL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="maxRate">MAX_RATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysFuelUomCd">SYS_FUEL_UOM_CD</param>
            <param name="maxRateSourceCd">MAX_RATE_SOURCE_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.SysFuelId">
            SYS_FUEL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.MaxRate">
            MAX_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.SysFuelUomCd">
            SYS_FUEL_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.MaxRateSourceCd">
            MAX_RATE_SOURCE_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpSystemFuelFlowRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="sysFuelId">SYS_FUEL_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="maxRate">MAX_RATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="sysFuelUomCd">SYS_FUEL_UOM_CD</param>
            <param name="maxRateSourceCd">MAX_RATE_SOURCE_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow">
            Ecmps.Dbo.View.VW_MP_UNIT_PROGRAM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="upId">UP_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="unitMonitorCertBeginDate">UNIT_MONITOR_CERT_BEGIN_DATE</param>
            <param name="emissionsRecordingBeginDate">EMISSIONS_RECORDING_BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="unitMonitorCertBeginQuarter">UNIT_MONITOR_CERT_BEGIN_QUARTER</param>
            <param name="endQuarter">END_QUARTER</param>
            <param name="prgId">PRG_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.UpId">
            UP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.PrgCd">
            PRG_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.Class">
            CLASS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.UnitMonitorCertBeginDate">
            UNIT_MONITOR_CERT_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.EmissionsRecordingBeginDate">
            EMISSIONS_RECORDING_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.UnitMonitorCertBeginQuarter">
            UNIT_MONITOR_CERT_BEGIN_QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.EndQuarter">
            END_QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.PrgId">
            PRG_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitProgramRow.Set(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="upId">UP_ID</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="classCd">CLASS</param>
            <param name="unitMonitorCertBeginDate">UNIT_MONITOR_CERT_BEGIN_DATE</param>
            <param name="emissionsRecordingBeginDate">EMISSIONS_RECORDING_BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="unitMonitorCertBeginQuarter">UNIT_MONITOR_CERT_BEGIN_QUARTER</param>
            <param name="endQuarter">END_QUARTER</param>
            <param name="prgId">PRG_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow">
            Ecmps.Dbo.View.VW_MP_UNIT_STACK_CONFIGURATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="configId">CONFIG_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="stackPipeMonLocId">STACK_PIPE_MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.ConfigId">
            CONFIG_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.StackPipeMonLocId">
            STACK_PIPE_MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwMpUnitStackConfigurationRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="configId">CONFIG_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="stackPipeMonLocId">STACK_PIPE_MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow">
            Ecmps.Dbo.View.VW_QA_AE_CORRELATION_TEST_RUN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="responseTime">RESPONSE_TIME</param>
            <param name="refValue">REF_VALUE</param>
            <param name="hourlyHiRate">HOURLY_HI_RATE</param>
            <param name="totalHi">TOTAL_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestBeginDate">
            TEST_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestBeginHour">
            TEST_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestBeginMin">
            TEST_BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestEndDate">
            TEST_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestEndHour">
            TEST_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TestEndMin">
            TEST_END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.AeCorrTestSumId">
            AE_CORR_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.OpLevelNum">
            OP_LEVEL_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.AeCorrTestRunId">
            AE_CORR_TEST_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.RunNum">
            RUN_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.ResponseTime">
            RESPONSE_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.RefValue">
            REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.HourlyHiRate">
            HOURLY_HI_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.TotalHi">
            TOTAL_HI
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestRunRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="responseTime">RESPONSE_TIME</param>
            <param name="refValue">REF_VALUE</param>
            <param name="hourlyHiRate">HOURLY_HI_RATE</param>
            <param name="totalHi">TOTAL_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow">
            Ecmps.Dbo.View.VW_QA_AE_CORRELATION_TEST_SUM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="fFactor">F_FACTOR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.AeCorrTestSumId">
            AE_CORR_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.OpLevelNum">
            OP_LEVEL_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.MeanRefValue">
            MEAN_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.AvgHrlyHiRate">
            AVG_HRLY_HI_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.FFactor">
            F_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeCorrelationTestSumRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="fFactor">F_FACTOR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow">
            Ecmps.Dbo.View.VW_QA_AE_HI_GAS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="noxeSysTypeCd">NOXE_SYS_TYPE_CD</param>
            <param name="noxeSystemIdentifier">NOXE_SYSTEM_IDENTIFIER</param>
            <param name="noxeMonSysId">NOXE_MON_SYS_ID</param>
            <param name="noxeFuelCd">NOXE_FUEL_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="aeHiGasId">AE_HI_GAS_ID</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="gasVolume">GAS_VOLUME</param>
            <param name="gasGcv">GAS_GCV</param>
            <param name="gasHi">GAS_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestBeginDate">
            TEST_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestBeginHour">
            TEST_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestBeginMin">
            TEST_BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestEndDate">
            TEST_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestEndHour">
            TEST_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.TestEndMin">
            TEST_END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.NoxeSysTypeCd">
            NOXE_SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.NoxeSystemIdentifier">
            NOXE_SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.NoxeMonSysId">
            NOXE_MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.NoxeFuelCd">
            NOXE_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.AeCorrTestSumId">
            AE_CORR_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.OpLevelNum">
            OP_LEVEL_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.AeCorrTestRunId">
            AE_CORR_TEST_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.AeHiGasId">
            AE_HI_GAS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.RunNum">
            RUN_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.GasVolume">
            GAS_VOLUME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.GasGcv">
            GAS_GCV
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.GasHi">
            GAS_HI
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiGasRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="noxeSysTypeCd">NOXE_SYS_TYPE_CD</param>
            <param name="noxeSystemIdentifier">NOXE_SYSTEM_IDENTIFIER</param>
            <param name="noxeMonSysId">NOXE_MON_SYS_ID</param>
            <param name="noxeFuelCd">NOXE_FUEL_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="aeHiGasId">AE_HI_GAS_ID</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="gasVolume">GAS_VOLUME</param>
            <param name="gasGcv">GAS_GCV</param>
            <param name="gasHi">GAS_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow">
            Ecmps.Dbo.View.VW_QA_AE_HI_OIL
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="noxeSysTypeCd">NOXE_SYS_TYPE_CD</param>
            <param name="noxeSystemIdentifier">NOXE_SYSTEM_IDENTIFIER</param>
            <param name="noxeMonSysId">NOXE_MON_SYS_ID</param>
            <param name="noxeFuelCd">NOXE_FUEL_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="aeHiOilId">AE_HI_OIL_ID</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="oilMass">OIL_MASS</param>
            <param name="oilDensity">OIL_DENSITY</param>
            <param name="oilDensityUomCd">OIL_DENSITY_UOM_CD</param>
            <param name="oilVolume">OIL_VOLUME</param>
            <param name="oilVolumeUomCd">OIL_VOLUME_UOM_CD</param>
            <param name="oilGcv">OIL_GCV</param>
            <param name="oilGcvUomCd">OIL_GCV_UOM_CD</param>
            <param name="oilHi">OIL_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestBeginDate">
            TEST_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestBeginHour">
            TEST_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestBeginMin">
            TEST_BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestEndDate">
            TEST_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestEndHour">
            TEST_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.TestEndMin">
            TEST_END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.NoxeSysTypeCd">
            NOXE_SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.NoxeSystemIdentifier">
            NOXE_SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.NoxeMonSysId">
            NOXE_MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.NoxeFuelCd">
            NOXE_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.AeCorrTestSumId">
            AE_CORR_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OpLevelNum">
            OP_LEVEL_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.AeCorrTestRunId">
            AE_CORR_TEST_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.AeHiOilId">
            AE_HI_OIL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.RunNum">
            RUN_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OilMass">
            OIL_MASS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OilDensity">
            OIL_DENSITY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OilDensityUomCd">
            OIL_DENSITY_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OilVolume">
            OIL_VOLUME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OilVolumeUomCd">
            OIL_VOLUME_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OilGcv">
            OIL_GCV
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OilGcvUomCd">
            OIL_GCV_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.OilHi">
            OIL_HI
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaAeHiOilRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="noxeSysTypeCd">NOXE_SYS_TYPE_CD</param>
            <param name="noxeSystemIdentifier">NOXE_SYSTEM_IDENTIFIER</param>
            <param name="noxeMonSysId">NOXE_MON_SYS_ID</param>
            <param name="noxeFuelCd">NOXE_FUEL_CD</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="aeHiOilId">AE_HI_OIL_ID</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="oilMass">OIL_MASS</param>
            <param name="oilDensity">OIL_DENSITY</param>
            <param name="oilDensityUomCd">OIL_DENSITY_UOM_CD</param>
            <param name="oilVolume">OIL_VOLUME</param>
            <param name="oilVolumeUomCd">OIL_VOLUME_UOM_CD</param>
            <param name="oilGcv">OIL_GCV</param>
            <param name="oilGcvUomCd">OIL_GCV_UOM_CD</param>
            <param name="oilHi">OIL_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow">
            Ecmps.Dbo.View.VW_QA_CALIBRATION_INJECTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.CalInjId">
            CAL_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.OnlineOfflineInd">
            ONLINE_OFFLINE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ZeroInjectionDate">
            ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ZeroInjectionHour">
            ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ZeroInjectionMin">
            ZERO_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ZeroMeasuredValue">
            ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ZeroRefValue">
            ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ZeroCalError">
            ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ZeroApsInd">
            ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpscaleInjectionDate">
            UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpscaleInjectionHour">
            UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpscaleInjectionMin">
            UPSCALE_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpscaleMeasuredValue">
            UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpscaleRefValue">
            UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpscaleGasLevelCd">
            UPSCALE_GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpscaleCalError">
            UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.UpscaleApsInd">
            UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCalibrationInjectionRow.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow">
            Ecmps.Dbo.View.VW_QA_CERT_EVENT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int16},System.Nullable{System.Int32},System.Nullable{System.Int16},System.Nullable{System.Int32},System.Nullable{System.Int16},System.Nullable{System.Int32},System.Nullable{System.Int16})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="qaCertEventId">QA_CERT_EVENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="qaCertEventCd">QA_CERT_EVENT_CD</param>
            <param name="requiredTestCd">REQUIRED_TEST_CD</param>
            <param name="qaCertEventDate">QA_CERT_EVENT_DATE</param>
            <param name="qaCertEventHour">QA_CERT_EVENT_HOUR</param>
            <param name="qaCertEventDatehour">QA_CERT_EVENT_DATEHOUR</param>
            <param name="conditionalDataBeginDate">CONDITIONAL_DATA_BEGIN_DATE</param>
            <param name="conditionalDataBeginHour">CONDITIONAL_DATA_BEGIN_HOUR</param>
            <param name="conditionalDataBeginDatehour">CONDITIONAL_DATA_BEGIN_DATEHOUR</param>
            <param name="lastTestCompletedDate">LAST_TEST_COMPLETED_DATE</param>
            <param name="lastTestCompletedHour">LAST_TEST_COMPLETED_HOUR</param>
            <param name="lastTestCompletedDatehour">LAST_TEST_COMPLETED_DATEHOUR</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="sysBeginDate">SYS_BEGIN_DATE</param>
            <param name="linearityRequired">LINEARITY_REQUIRED</param>
            <param name="rataRequired">RATA_REQUIRED</param>
            <param name="rata2Required">RATA2_REQUIRED</param>
            <param name="rata3Required">RATA3_REQUIRED</param>
            <param name="ffaccRequired">FFACC_REQUIRED</param>
            <param name="peiRequired">PEI_REQUIRED</param>
            <param name="linearityCertEvent">LINEARITY_CERT_EVENT</param>
            <param name="rataCertEvent">RATA_CERT_EVENT</param>
            <param name="oocRequired">OOC_REQUIRED</param>
            <param name="leakRequired">LEAK_REQUIRED</param>
            <param name="maxOpDaysPriorQtr">MAX_OP_DAYS_PRIOR_QTR</param>
            <param name="minOpDaysPriorQtr">MIN_OP_DAYS_PRIOR_QTR</param>
            <param name="maxOpHoursPriorQtr">MAX_OP_HOURS_PRIOR_QTR</param>
            <param name="minOpHoursPriorQtr">MIN_OP_HOURS_PRIOR_QTR</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="qaCertEventDateSuppDataExistsInd">QA_CERT_EVENT_DATE_SUPP_DATA_EXISTS_IND</param>
            <param name="qaCertEventOpDayCount">QA_CERT_EVENT_OP_DAY_COUNT</param>
            <param name="conditionalBeginHourSuppDataExistsInd">CONDITIONAL_BEGIN_HOUR_SUPP_DATA_EXISTS_IND</param>
            <param name="conditionalBeginOpHourCount">CONDITIONAL_BEGIN_OP_HOUR_COUNT</param>
            <param name="qaCertEventDateSystemSuppDataExistsInd">QA_CERT_EVENT_DATE_SYSTEM_SUPP_DATA_EXISTS_IND</param>
            <param name="qaCertEventSystemOpDayCount">QA_CERT_EVENT_SYSTEM_OP_DAY_COUNT</param>
            <param name="conditionalBeginHourSystemSuppDataExistsInd">CONDITIONAL_BEGIN_HOUR_SYSTEM_SUPP_DATA_EXISTS_IND</param>
            <param name="conditionalBeginSystemOpHourCount">CONDITIONAL_BEGIN_SYSTEM_OP_HOUR_COUNT</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventId">
            QA_CERT_EVENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventCd">
            QA_CERT_EVENT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.RequiredTestCd">
            REQUIRED_TEST_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventDate">
            QA_CERT_EVENT_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventHour">
            QA_CERT_EVENT_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventDatehour">
            QA_CERT_EVENT_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ConditionalDataBeginDate">
            CONDITIONAL_DATA_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ConditionalDataBeginHour">
            CONDITIONAL_DATA_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ConditionalDataBeginDatehour">
            CONDITIONAL_DATA_BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.LastTestCompletedDate">
            LAST_TEST_COMPLETED_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.LastTestCompletedHour">
            LAST_TEST_COMPLETED_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.LastTestCompletedDatehour">
            LAST_TEST_COMPLETED_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.SysBeginDate">
            SYS_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.LinearityRequired">
            LINEARITY_REQUIRED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.RataRequired">
            RATA_REQUIRED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.Rata2Required">
            RATA2_REQUIRED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.Rata3Required">
            RATA3_REQUIRED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.FfaccRequired">
            FFACC_REQUIRED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.PeiRequired">
            PEI_REQUIRED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.LinearityCertEvent">
            LINEARITY_CERT_EVENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.RataCertEvent">
            RATA_CERT_EVENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.OocRequired">
            OOC_REQUIRED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.LeakRequired">
            LEAK_REQUIRED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.MaxOpDaysPriorQtr">
            MAX_OP_DAYS_PRIOR_QTR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.MinOpDaysPriorQtr">
            MIN_OP_DAYS_PRIOR_QTR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.MaxOpHoursPriorQtr">
            MAX_OP_HOURS_PRIOR_QTR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.MinOpHoursPriorQtr">
            MIN_OP_HOURS_PRIOR_QTR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.SeverityCd">
            SEVERITY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.MustSubmit">
            MUST_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventDateSuppDataExistsInd">
            QA_CERT_EVENT_DATE_SUPP_DATA_EXISTS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventOpDayCount">
            QA_CERT_EVENT_OP_DAY_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ConditionalBeginHourSuppDataExistsInd">
            CONDITIONAL_BEGIN_HOUR_SUPP_DATA_EXISTS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ConditionalBeginOpHourCount">
            CONDITIONAL_BEGIN_OP_HOUR_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventDateSystemSuppDataExistsInd">
            QA_CERT_EVENT_DATE_SYSTEM_SUPP_DATA_EXISTS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.QaCertEventSystemOpDayCount">
            QA_CERT_EVENT_SYSTEM_OP_DAY_COUNT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ConditionalBeginHourSystemSuppDataExistsInd">
            CONDITIONAL_BEGIN_HOUR_SYSTEM_SUPP_DATA_EXISTS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.ConditionalBeginSystemOpHourCount">
            CONDITIONAL_BEGIN_SYSTEM_OP_HOUR_COUNT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCertEventRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int16},System.Nullable{System.Int32},System.Nullable{System.Int16},System.Nullable{System.Int32},System.Nullable{System.Int16},System.Nullable{System.Int32},System.Nullable{System.Int16})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="qaCertEventId">QA_CERT_EVENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="qaCertEventCd">QA_CERT_EVENT_CD</param>
            <param name="requiredTestCd">REQUIRED_TEST_CD</param>
            <param name="qaCertEventDate">QA_CERT_EVENT_DATE</param>
            <param name="qaCertEventHour">QA_CERT_EVENT_HOUR</param>
            <param name="qaCertEventDatehour">QA_CERT_EVENT_DATEHOUR</param>
            <param name="conditionalDataBeginDate">CONDITIONAL_DATA_BEGIN_DATE</param>
            <param name="conditionalDataBeginHour">CONDITIONAL_DATA_BEGIN_HOUR</param>
            <param name="conditionalDataBeginDatehour">CONDITIONAL_DATA_BEGIN_DATEHOUR</param>
            <param name="lastTestCompletedDate">LAST_TEST_COMPLETED_DATE</param>
            <param name="lastTestCompletedHour">LAST_TEST_COMPLETED_HOUR</param>
            <param name="lastTestCompletedDatehour">LAST_TEST_COMPLETED_DATEHOUR</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="sysBeginDate">SYS_BEGIN_DATE</param>
            <param name="linearityRequired">LINEARITY_REQUIRED</param>
            <param name="rataRequired">RATA_REQUIRED</param>
            <param name="rata2Required">RATA2_REQUIRED</param>
            <param name="rata3Required">RATA3_REQUIRED</param>
            <param name="ffaccRequired">FFACC_REQUIRED</param>
            <param name="peiRequired">PEI_REQUIRED</param>
            <param name="linearityCertEvent">LINEARITY_CERT_EVENT</param>
            <param name="rataCertEvent">RATA_CERT_EVENT</param>
            <param name="oocRequired">OOC_REQUIRED</param>
            <param name="leakRequired">LEAK_REQUIRED</param>
            <param name="maxOpDaysPriorQtr">MAX_OP_DAYS_PRIOR_QTR</param>
            <param name="minOpDaysPriorQtr">MIN_OP_DAYS_PRIOR_QTR</param>
            <param name="maxOpHoursPriorQtr">MAX_OP_HOURS_PRIOR_QTR</param>
            <param name="minOpHoursPriorQtr">MIN_OP_HOURS_PRIOR_QTR</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="qaCertEventDateSuppDataExistsInd">QA_CERT_EVENT_DATE_SUPP_DATA_EXISTS_IND</param>
            <param name="qaCertEventOpDayCount">QA_CERT_EVENT_OP_DAY_COUNT</param>
            <param name="conditionalBeginHourSuppDataExistsInd">CONDITIONAL_BEGIN_HOUR_SUPP_DATA_EXISTS_IND</param>
            <param name="conditionalBeginOpHourCount">CONDITIONAL_BEGIN_OP_HOUR_COUNT</param>
            <param name="qaCertEventDateSystemSuppDataExistsInd">QA_CERT_EVENT_DATE_SYSTEM_SUPP_DATA_EXISTS_IND</param>
            <param name="qaCertEventSystemOpDayCount">QA_CERT_EVENT_SYSTEM_OP_DAY_COUNT</param>
            <param name="conditionalBeginHourSystemSuppDataExistsInd">CONDITIONAL_BEGIN_HOUR_SYSTEM_SUPP_DATA_EXISTS_IND</param>
            <param name="conditionalBeginSystemOpHourCount">CONDITIONAL_BEGIN_SYSTEM_OP_HOUR_COUNT</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow">
            Ecmps.Dbo.View.VW_QA_CYCLE_TIME_INJECTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="cycleTimeInjId">CYCLE_TIME_INJ_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="calGasValue">CAL_GAS_VALUE</param>
            <param name="beginMonitorValue">BEGIN_MONITOR_VALUE</param>
            <param name="endMonitorValue">END_MONITOR_VALUE</param>
            <param name="injectionCycleTime">INJECTION_CYCLE_TIME</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="totalTime">TOTAL_TIME</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="cycleTimeSumId">CYCLE_TIME_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.CycleTimeInjId">
            CYCLE_TIME_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.CalGasValue">
            CAL_GAS_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.BeginMonitorValue">
            BEGIN_MONITOR_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.EndMonitorValue">
            END_MONITOR_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.InjectionCycleTime">
            INJECTION_CYCLE_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestBeginDate">
            TEST_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestBeginHour">
            TEST_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestBeginMin">
            TEST_BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestEndDate">
            TEST_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestEndHour">
            TEST_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestEndMin">
            TEST_END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TotalTime">
            TOTAL_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.CycleTimeSumId">
            CYCLE_TIME_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaCycleTimeInjectionRow.Set(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="cycleTimeInjId">CYCLE_TIME_INJ_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="calGasValue">CAL_GAS_VALUE</param>
            <param name="beginMonitorValue">BEGIN_MONITOR_VALUE</param>
            <param name="endMonitorValue">END_MONITOR_VALUE</param>
            <param name="injectionCycleTime">INJECTION_CYCLE_TIME</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="totalTime">TOTAL_TIME</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="cycleTimeSumId">CYCLE_TIME_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow">
            Ecmps.Dbo.View.VW_QA_FLOW_RATA_RUN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.#ctor(System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="flowRataRunId">FLOW_RATA_RUN_ID</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="barometricPressure">BAROMETRIC_PRESSURE</param>
            <param name="staticStackPressure">STATIC_STACK_PRESSURE</param>
            <param name="percentCo2">PERCENT_CO2</param>
            <param name="percentO2">PERCENT_O2</param>
            <param name="percentMoisture">PERCENT_MOISTURE</param>
            <param name="dryMolecularWeight">DRY_MOLECULAR_WEIGHT</param>
            <param name="wetMolecularWeight">WET_MOLECULAR_WEIGHT</param>
            <param name="avgVelWoWall">AVG_VEL_WO_WALL</param>
            <param name="avgVelWWall">AVG_VEL_W_WALL</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="avgStackFlowRate">AVG_STACK_FLOW_RATE</param>
            <param name="rataRunId">RATA_RUN_ID</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="runStatusCd">RUN_STATUS_CD</param>
            <param name="levelCalcWaf">LEVEL_CALC_WAF</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="cemValue">CEM_VALUE</param>
            <param name="rataRefValue">RATA_REF_VALUE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="stackDiameter">STACK_DIAMETER</param>
            <param name="rataId">RATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.FlowRataRunId">
            FLOW_RATA_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.NumTraversePoint">
            NUM_TRAVERSE_POINT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.BarometricPressure">
            BAROMETRIC_PRESSURE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.StaticStackPressure">
            STATIC_STACK_PRESSURE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.PercentCo2">
            PERCENT_CO2
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.PercentO2">
            PERCENT_O2
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.PercentMoisture">
            PERCENT_MOISTURE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.DryMolecularWeight">
            DRY_MOLECULAR_WEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.WetMolecularWeight">
            WET_MOLECULAR_WEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.AvgVelWoWall">
            AVG_VEL_WO_WALL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.AvgVelWWall">
            AVG_VEL_W_WALL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.CalcWaf">
            CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.AvgStackFlowRate">
            AVG_STACK_FLOW_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.RataRunId">
            RATA_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.RataSumId">
            RATA_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.RunNum">
            RUN_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.RunStatusCd">
            RUN_STATUS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.LevelCalcWaf">
            LEVEL_CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.DefaultWaf">
            DEFAULT_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.CemValue">
            CEM_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.RataRefValue">
            RATA_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.RefMethodCd">
            REF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.StackDiameter">
            STACK_DIAMETER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.RataId">
            RATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaFlowRataRunRow.Set(System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="flowRataRunId">FLOW_RATA_RUN_ID</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="barometricPressure">BAROMETRIC_PRESSURE</param>
            <param name="staticStackPressure">STATIC_STACK_PRESSURE</param>
            <param name="percentCo2">PERCENT_CO2</param>
            <param name="percentO2">PERCENT_O2</param>
            <param name="percentMoisture">PERCENT_MOISTURE</param>
            <param name="dryMolecularWeight">DRY_MOLECULAR_WEIGHT</param>
            <param name="wetMolecularWeight">WET_MOLECULAR_WEIGHT</param>
            <param name="avgVelWoWall">AVG_VEL_WO_WALL</param>
            <param name="avgVelWWall">AVG_VEL_W_WALL</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="avgStackFlowRate">AVG_STACK_FLOW_RATE</param>
            <param name="rataRunId">RATA_RUN_ID</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="runStatusCd">RUN_STATUS_CD</param>
            <param name="levelCalcWaf">LEVEL_CALC_WAF</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="cemValue">CEM_VALUE</param>
            <param name="rataRefValue">RATA_REF_VALUE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="stackDiameter">STACK_DIAMETER</param>
            <param name="rataId">RATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow">
            Ecmps.Dbo.View.VW_QA_RATA_RUN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.#ctor(System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="rataRunId">RATA_RUN_ID</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="cemValue">CEM_VALUE</param>
            <param name="grossUnitLoad">GROSS_UNIT_LOAD</param>
            <param name="runStatusCd">RUN_STATUS_CD</param>
            <param name="rataRefValue">RATA_REF_VALUE</param>
            <param name="calcRataRefValue">CALC_RATA_REF_VALUE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="rataBeginDate">RATA_BEGIN_DATE</param>
            <param name="rataBeginHour">RATA_BEGIN_HOUR</param>
            <param name="rataBeginMin">RATA_BEGIN_MIN</param>
            <param name="rataEndDate">RATA_END_DATE</param>
            <param name="rataEndHour">RATA_END_HOUR</param>
            <param name="rataEndMin">RATA_END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="rataId">RATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackDiameter">STACK_DIAMETER</param>
            <param name="stackArea">STACK_AREA</param>
            <param name="levelCalcWaf">LEVEL_CALC_WAF</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="flowRataRunId">FLOW_RATA_RUN_ID</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="barometricPressure">BAROMETRIC_PRESSURE</param>
            <param name="staticStackPressure">STATIC_STACK_PRESSURE</param>
            <param name="percentCo2">PERCENT_CO2</param>
            <param name="percentO2">PERCENT_O2</param>
            <param name="percentMoisture">PERCENT_MOISTURE</param>
            <param name="dryMolecularWeight">DRY_MOLECULAR_WEIGHT</param>
            <param name="wetMolecularWeight">WET_MOLECULAR_WEIGHT</param>
            <param name="avgVelWoWall">AVG_VEL_WO_WALL</param>
            <param name="avgVelWWall">AVG_VEL_W_WALL</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="avgStackFlowRate">AVG_STACK_FLOW_RATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataRunId">
            RATA_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataSumId">
            RATA_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RunNum">
            RUN_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.CemValue">
            CEM_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.GrossUnitLoad">
            GROSS_UNIT_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RunStatusCd">
            RUN_STATUS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataRefValue">
            RATA_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.CalcRataRefValue">
            CALC_RATA_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RefMethodCd">
            REF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataBeginDate">
            RATA_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataBeginHour">
            RATA_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataBeginMin">
            RATA_BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataEndDate">
            RATA_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataEndHour">
            RATA_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataEndMin">
            RATA_END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.RataId">
            RATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.StackDiameter">
            STACK_DIAMETER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.StackArea">
            STACK_AREA
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.LevelCalcWaf">
            LEVEL_CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.DefaultWaf">
            DEFAULT_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.FlowRataRunId">
            FLOW_RATA_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.NumTraversePoint">
            NUM_TRAVERSE_POINT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.BarometricPressure">
            BAROMETRIC_PRESSURE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.StaticStackPressure">
            STATIC_STACK_PRESSURE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.PercentCo2">
            PERCENT_CO2
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.PercentO2">
            PERCENT_O2
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.PercentMoisture">
            PERCENT_MOISTURE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.DryMolecularWeight">
            DRY_MOLECULAR_WEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.WetMolecularWeight">
            WET_MOLECULAR_WEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.AvgVelWoWall">
            AVG_VEL_WO_WALL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.AvgVelWWall">
            AVG_VEL_W_WALL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.CalcWaf">
            CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.AvgStackFlowRate">
            AVG_STACK_FLOW_RATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataRunRow.Set(System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="rataRunId">RATA_RUN_ID</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="cemValue">CEM_VALUE</param>
            <param name="grossUnitLoad">GROSS_UNIT_LOAD</param>
            <param name="runStatusCd">RUN_STATUS_CD</param>
            <param name="rataRefValue">RATA_REF_VALUE</param>
            <param name="calcRataRefValue">CALC_RATA_REF_VALUE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="rataBeginDate">RATA_BEGIN_DATE</param>
            <param name="rataBeginHour">RATA_BEGIN_HOUR</param>
            <param name="rataBeginMin">RATA_BEGIN_MIN</param>
            <param name="rataEndDate">RATA_END_DATE</param>
            <param name="rataEndHour">RATA_END_HOUR</param>
            <param name="rataEndMin">RATA_END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="rataId">RATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackDiameter">STACK_DIAMETER</param>
            <param name="stackArea">STACK_AREA</param>
            <param name="levelCalcWaf">LEVEL_CALC_WAF</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="flowRataRunId">FLOW_RATA_RUN_ID</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="barometricPressure">BAROMETRIC_PRESSURE</param>
            <param name="staticStackPressure">STATIC_STACK_PRESSURE</param>
            <param name="percentCo2">PERCENT_CO2</param>
            <param name="percentO2">PERCENT_O2</param>
            <param name="percentMoisture">PERCENT_MOISTURE</param>
            <param name="dryMolecularWeight">DRY_MOLECULAR_WEIGHT</param>
            <param name="wetMolecularWeight">WET_MOLECULAR_WEIGHT</param>
            <param name="avgVelWoWall">AVG_VEL_WO_WALL</param>
            <param name="avgVelWWall">AVG_VEL_W_WALL</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="avgStackFlowRate">AVG_STACK_FLOW_RATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow">
            Ecmps.Dbo.View.VW_QA_RATA_SUMMARY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="avgGrossUnitLoad">AVG_GROSS_UNIT_LOAD</param>
            <param name="relativeAccuracy">RELATIVE_ACCURACY</param>
            <param name="biasAdjFactor">BIAS_ADJ_FACTOR</param>
            <param name="meanCemValue">MEAN_CEM_VALUE</param>
            <param name="meanDiff">MEAN_DIFF</param>
            <param name="meanRataRefValue">MEAN_RATA_REF_VALUE</param>
            <param name="apsInd">APS_IND</param>
            <param name="apsCd">APS_CD</param>
            <param name="stndDevDiff">STND_DEV_DIFF</param>
            <param name="confidenceCoef">CONFIDENCE_COEF</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="co2O2RefMethodCd">CO2_O2_REF_METHOD_CD</param>
            <param name="tValue">T_VALUE</param>
            <param name="stackDiameter">STACK_DIAMETER</param>
            <param name="stackArea">STACK_AREA</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="rataId">RATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.AvgGrossUnitLoad">
            AVG_GROSS_UNIT_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.RelativeAccuracy">
            RELATIVE_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.BiasAdjFactor">
            BIAS_ADJ_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.MeanCemValue">
            MEAN_CEM_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.MeanDiff">
            MEAN_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.MeanRataRefValue">
            MEAN_RATA_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.ApsInd">
            APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.ApsCd">
            APS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.StndDevDiff">
            STND_DEV_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.ConfidenceCoef">
            CONFIDENCE_COEF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.RefMethodCd">
            REF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.Co2O2RefMethodCd">
            CO2_O2_REF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.TValue">
            T_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.StackDiameter">
            STACK_DIAMETER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.StackArea">
            STACK_AREA
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.CalcWaf">
            CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.DefaultWaf">
            DEFAULT_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.NumTraversePoint">
            NUM_TRAVERSE_POINT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.RataSumId">
            RATA_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.RataId">
            RATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataSummaryRow.Set(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="avgGrossUnitLoad">AVG_GROSS_UNIT_LOAD</param>
            <param name="relativeAccuracy">RELATIVE_ACCURACY</param>
            <param name="biasAdjFactor">BIAS_ADJ_FACTOR</param>
            <param name="meanCemValue">MEAN_CEM_VALUE</param>
            <param name="meanDiff">MEAN_DIFF</param>
            <param name="meanRataRefValue">MEAN_RATA_REF_VALUE</param>
            <param name="apsInd">APS_IND</param>
            <param name="apsCd">APS_CD</param>
            <param name="stndDevDiff">STND_DEV_DIFF</param>
            <param name="confidenceCoef">CONFIDENCE_COEF</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="co2O2RefMethodCd">CO2_O2_REF_METHOD_CD</param>
            <param name="tValue">T_VALUE</param>
            <param name="stackDiameter">STACK_DIAMETER</param>
            <param name="stackArea">STACK_AREA</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="rataId">RATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow">
            Ecmps.Dbo.View.VW_QA_RATA_TRAVERSE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.#ctor(System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="rataRunId">RATA_RUN_ID</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="runNum">RUN_NUM</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="runBeginDate">RUN_BEGIN_DATE</param>
            <param name="runBeginHour">RUN_BEGIN_HOUR</param>
            <param name="runEndDate">RUN_END_DATE</param>
            <param name="runEndHour">RUN_END_HOUR</param>
            <param name="rataId">RATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="flowRataRunId">FLOW_RATA_RUN_ID</param>
            <param name="rataTraverseId">RATA_TRAVERSE_ID</param>
            <param name="probeid">PROBEID</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="probeTypeCd">PROBE_TYPE_CD</param>
            <param name="pressureMeasCd">PRESSURE_MEAS_CD</param>
            <param name="methodTraversePointId">METHOD_TRAVERSE_POINT_ID</param>
            <param name="velCalCoef">VEL_CAL_COEF</param>
            <param name="lastProbeDate">LAST_PROBE_DATE</param>
            <param name="avgVelDiffPressure">AVG_VEL_DIFF_PRESSURE</param>
            <param name="avgSqVelDiffPressure">AVG_SQ_VEL_DIFF_PRESSURE</param>
            <param name="tStackTemp">T_STACK_TEMP</param>
            <param name="pitchAngle">PITCH_ANGLE</param>
            <param name="yawAngle">YAW_ANGLE</param>
            <param name="pointUsedInd">POINT_USED_IND</param>
            <param name="numWallEffectsPoints">NUM_WALL_EFFECTS_POINTS</param>
            <param name="calcVel">CALC_VEL</param>
            <param name="repVel">REP_VEL</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="userid">USERID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RataRunId">
            RATA_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RataSumId">
            RATA_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RunNum">
            RUN_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RunBeginDate">
            RUN_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RunBeginHour">
            RUN_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RunEndDate">
            RUN_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RunEndHour">
            RUN_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RataId">
            RATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RefMethodCd">
            REF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.FlowRataRunId">
            FLOW_RATA_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RataTraverseId">
            RATA_TRAVERSE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.Probeid">
            PROBEID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.DefaultWaf">
            DEFAULT_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.ProbeTypeCd">
            PROBE_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.PressureMeasCd">
            PRESSURE_MEAS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.MethodTraversePointId">
            METHOD_TRAVERSE_POINT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.VelCalCoef">
            VEL_CAL_COEF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.LastProbeDate">
            LAST_PROBE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.AvgVelDiffPressure">
            AVG_VEL_DIFF_PRESSURE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.AvgSqVelDiffPressure">
            AVG_SQ_VEL_DIFF_PRESSURE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.TStackTemp">
            T_STACK_TEMP
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.PitchAngle">
            PITCH_ANGLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.YawAngle">
            YAW_ANGLE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.PointUsedInd">
            POINT_USED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.NumWallEffectsPoints">
            NUM_WALL_EFFECTS_POINTS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.CalcVel">
            CALC_VEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.RepVel">
            REP_VEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.Userid">
            USERID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaRataTraverseRow.Set(System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="rataRunId">RATA_RUN_ID</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="runNum">RUN_NUM</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="runBeginDate">RUN_BEGIN_DATE</param>
            <param name="runBeginHour">RUN_BEGIN_HOUR</param>
            <param name="runEndDate">RUN_END_DATE</param>
            <param name="runEndHour">RUN_END_HOUR</param>
            <param name="rataId">RATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="flowRataRunId">FLOW_RATA_RUN_ID</param>
            <param name="rataTraverseId">RATA_TRAVERSE_ID</param>
            <param name="probeid">PROBEID</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="probeTypeCd">PROBE_TYPE_CD</param>
            <param name="pressureMeasCd">PRESSURE_MEAS_CD</param>
            <param name="methodTraversePointId">METHOD_TRAVERSE_POINT_ID</param>
            <param name="velCalCoef">VEL_CAL_COEF</param>
            <param name="lastProbeDate">LAST_PROBE_DATE</param>
            <param name="avgVelDiffPressure">AVG_VEL_DIFF_PRESSURE</param>
            <param name="avgSqVelDiffPressure">AVG_SQ_VEL_DIFF_PRESSURE</param>
            <param name="tStackTemp">T_STACK_TEMP</param>
            <param name="pitchAngle">PITCH_ANGLE</param>
            <param name="yawAngle">YAW_ANGLE</param>
            <param name="pointUsedInd">POINT_USED_IND</param>
            <param name="numWallEffectsPoints">NUM_WALL_EFFECTS_POINTS</param>
            <param name="calcVel">CALC_VEL</param>
            <param name="repVel">REP_VEL</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="userid">USERID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow">
            Ecmps.Dbo.View.VW_QA_SUPP_ATTRIBUTE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="qaSuppAttributeId">QA_SUPP_ATTRIBUTE_ID</param>
            <param name="qaSuppDataId">QA_SUPP_DATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="attributeName">ATTRIBUTE_NAME</param>
            <param name="attributeValue">ATTRIBUTE_VALUE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="spanScale">SPAN_SCALE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="reinstallationDate">REINSTALLATION_DATE</param>
            <param name="reinstallationHour">REINSTALLATION_HOUR</param>
            <param name="testExpireDate">TEST_EXPIRE_DATE</param>
            <param name="testExpireHour">TEST_EXPIRE_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="canSubmit">CAN_SUBMIT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="opConditionCdDescription">OP_CONDITION_CD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.QaSuppAttributeId">
            QA_SUPP_ATTRIBUTE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.QaSuppDataId">
            QA_SUPP_DATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.AttributeName">
            ATTRIBUTE_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.AttributeValue">
            ATTRIBUTE_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.SpanScale">
            SPAN_SCALE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.ReinstallationDate">
            REINSTALLATION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.ReinstallationHour">
            REINSTALLATION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.TestExpireDate">
            TEST_EXPIRE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.TestExpireHour">
            TEST_EXPIRE_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.CanSubmit">
            CAN_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.UnitFuelCd">
            UNIT_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.FuelCdDescription">
            FUEL_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.OpConditionCdDescription">
            OP_CONDITION_CD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppAttributeRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="qaSuppAttributeId">QA_SUPP_ATTRIBUTE_ID</param>
            <param name="qaSuppDataId">QA_SUPP_DATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="attributeName">ATTRIBUTE_NAME</param>
            <param name="attributeValue">ATTRIBUTE_VALUE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="spanScale">SPAN_SCALE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="reinstallationDate">REINSTALLATION_DATE</param>
            <param name="reinstallationHour">REINSTALLATION_HOUR</param>
            <param name="testExpireDate">TEST_EXPIRE_DATE</param>
            <param name="testExpireHour">TEST_EXPIRE_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="canSubmit">CAN_SUBMIT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="opConditionCdDescription">OP_CONDITION_CD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow">
            Ecmps.Dbo.View.VW_QA_SUPP_DATA_HOURLY_STATUS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="qaSuppDataId">QA_SUPP_DATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDatetime">END_DATETIME</param>
            <param name="reinstallationDate">REINSTALLATION_DATE</param>
            <param name="reinstallationHour">REINSTALLATION_HOUR</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="canSubmit">CAN_SUBMIT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="opConditionCdDescription">OP_CONDITION_CD_DESCRIPTION</param>
            <param name="testExpDate">TEST_EXP_DATE</param>
            <param name="testExpDateWithExt">TEST_EXP_DATE_WITH_EXT</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="qaNeedsEvalFlg">QA_NEEDS_EVAL_FLG</param>
            <param name="qaSuppOrTestSummary">QA_SUPP_OR_TEST_SUMMARY</param>
            <param name="rataFrequencyCd">RATA_FREQUENCY_CD</param>
            <param name="overallBiasAdjFactor">OVERALL_BIAS_ADJ_FACTOR</param>
            <param name="opLevelCdList">OP_LEVEL_CD_LIST</param>
            <param name="testClaimCd">TEST_CLAIM_CD</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="ignoreGraceForExtensions">IGNORE_GRACE_FOR_EXTENSIONS</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.QaSuppDataId">
            QA_SUPP_DATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.CalcTestResultCd">
            CALC_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.BeginDatehour">
            BEGIN_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.EndDatehour">
            END_DATEHOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.EndDatetime">
            END_DATETIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.ReinstallationDate">
            REINSTALLATION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.ReinstallationHour">
            REINSTALLATION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.ReinstallDate">
            REINSTALL_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.ReinstallHour">
            REINSTALL_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.CanSubmit">
            CAN_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.UnitFuelCd">
            UNIT_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.FuelCdDescription">
            FUEL_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.OpConditionCdDescription">
            OP_CONDITION_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.TestExpDate">
            TEST_EXP_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.TestExpDateWithExt">
            TEST_EXP_DATE_WITH_EXT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.QaNeedsEvalFlg">
            QA_NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.QaSuppOrTestSummary">
            QA_SUPP_OR_TEST_SUMMARY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.RataFrequencyCd">
            RATA_FREQUENCY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.OverallBiasAdjFactor">
            OVERALL_BIAS_ADJ_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.OpLevelCdList">
            OP_LEVEL_CD_LIST
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.TestClaimCd">
            TEST_CLAIM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.SeverityCd">
            SEVERITY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.MustSubmit">
            MUST_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.IgnoreGraceForExtensions">
            IGNORE_GRACE_FOR_EXTENSIONS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataHourlyStatusRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="qaSuppDataId">QA_SUPP_DATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="beginDatehour">BEGIN_DATEHOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="endDatehour">END_DATEHOUR</param>
            <param name="endDatetime">END_DATETIME</param>
            <param name="reinstallationDate">REINSTALLATION_DATE</param>
            <param name="reinstallationHour">REINSTALLATION_HOUR</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="canSubmit">CAN_SUBMIT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="opConditionCdDescription">OP_CONDITION_CD_DESCRIPTION</param>
            <param name="testExpDate">TEST_EXP_DATE</param>
            <param name="testExpDateWithExt">TEST_EXP_DATE_WITH_EXT</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="qaNeedsEvalFlg">QA_NEEDS_EVAL_FLG</param>
            <param name="qaSuppOrTestSummary">QA_SUPP_OR_TEST_SUMMARY</param>
            <param name="rataFrequencyCd">RATA_FREQUENCY_CD</param>
            <param name="overallBiasAdjFactor">OVERALL_BIAS_ADJ_FACTOR</param>
            <param name="opLevelCdList">OP_LEVEL_CD_LIST</param>
            <param name="testClaimCd">TEST_CLAIM_CD</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="ignoreGraceForExtensions">IGNORE_GRACE_FOR_EXTENSIONS</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow">
            Ecmps.Dbo.View.VW_QA_SUPP_DATA
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="qaSuppDataId">QA_SUPP_DATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="spanScale">SPAN_SCALE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="reinstallationDate">REINSTALLATION_DATE</param>
            <param name="reinstallationHour">REINSTALLATION_HOUR</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="testExpireDate">TEST_EXPIRE_DATE</param>
            <param name="testExpireHour">TEST_EXPIRE_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="canSubmit">CAN_SUBMIT</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="opConditionCdDescription">OP_CONDITION_CD_DESCRIPTION</param>
            <param name="submissionAvailabilityCd">SUBMISSION_AVAILABILITY_CD</param>
            <param name="pendingStatusCd">PENDING_STATUS_CD</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facilityName">FACILITY_NAME</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.QaSuppDataId">
            QA_SUPP_DATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.SpanScale">
            SPAN_SCALE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.ReinstallationDate">
            REINSTALLATION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.ReinstallationHour">
            REINSTALLATION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.ReinstallDate">
            REINSTALL_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.ReinstallHour">
            REINSTALL_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.TestExpireDate">
            TEST_EXPIRE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.TestExpireHour">
            TEST_EXPIRE_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.CanSubmit">
            CAN_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.MustSubmit">
            MUST_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.UnitFuelCd">
            UNIT_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.FuelCdDescription">
            FUEL_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.OpConditionCdDescription">
            OP_CONDITION_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.SubmissionAvailabilityCd">
            SUBMISSION_AVAILABILITY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.PendingStatusCd">
            PENDING_STATUS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.FacilityName">
            FACILITY_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaSuppDataRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="qaSuppDataId">QA_SUPP_DATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="spanScale">SPAN_SCALE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="reinstallationDate">REINSTALLATION_DATE</param>
            <param name="reinstallationHour">REINSTALLATION_HOUR</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="testExpireDate">TEST_EXPIRE_DATE</param>
            <param name="testExpireHour">TEST_EXPIRE_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="canSubmit">CAN_SUBMIT</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="opConditionCdDescription">OP_CONDITION_CD_DESCRIPTION</param>
            <param name="submissionAvailabilityCd">SUBMISSION_AVAILABILITY_CD</param>
            <param name="pendingStatusCd">PENDING_STATUS_CD</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="facilityName">FACILITY_NAME</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow">
            Ecmps.Dbo.View.VW_QA_TEST_CLAIM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="numLoadLevel">NUM_LOAD_LEVEL</param>
            <param name="testClaimCd">TEST_CLAIM_CD</param>
            <param name="claimBeginDate">CLAIM_BEGIN_DATE</param>
            <param name="claimEndDate">CLAIM_END_DATE</param>
            <param name="hiLoadPct">HI_LOAD_PCT</param>
            <param name="midLoadPct">MID_LOAD_PCT</param>
            <param name="lowLoadPct">LOW_LOAD_PCT</param>
            <param name="testQualificationId">TEST_QUALIFICATION_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.NumLoadLevel">
            NUM_LOAD_LEVEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.TestClaimCd">
            TEST_CLAIM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.ClaimBeginDate">
            CLAIM_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.ClaimEndDate">
            CLAIM_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.HiLoadPct">
            HI_LOAD_PCT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.MidLoadPct">
            MID_LOAD_PCT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.LowLoadPct">
            LOW_LOAD_PCT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.TestQualificationId">
            TEST_QUALIFICATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestClaimRow.Set(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="numLoadLevel">NUM_LOAD_LEVEL</param>
            <param name="testClaimCd">TEST_CLAIM_CD</param>
            <param name="claimBeginDate">CLAIM_BEGIN_DATE</param>
            <param name="claimEndDate">CLAIM_END_DATE</param>
            <param name="hiLoadPct">HI_LOAD_PCT</param>
            <param name="midLoadPct">MID_LOAD_PCT</param>
            <param name="lowLoadPct">LOW_LOAD_PCT</param>
            <param name="testQualificationId">TEST_QUALIFICATION_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow">
            Ecmps.Dbo.View.VW_QA_TEST_EXTENSION_EXEMPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testExtensionExemptionId">TEST_EXTENSION_EXEMPTION_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="extensExemptCd">EXTENS_EXEMPT_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="hoursUsed">HOURS_USED</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="periodBeginDate">PERIOD_BEGIN_DATE</param>
            <param name="periodEndDate">PERIOD_END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.TestExtensionExemptionId">
            TEST_EXTENSION_EXEMPTION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.ExtensExemptCd">
            EXTENS_EXEMPT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.HoursUsed">
            HOURS_USED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.SeverityCd">
            SEVERITY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.MustSubmit">
            MUST_SUBMIT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.PeriodBeginDate">
            PERIOD_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.PeriodEndDate">
            PERIOD_END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestExtensionExemptionRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testExtensionExemptionId">TEST_EXTENSION_EXEMPTION_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="extensExemptCd">EXTENS_EXEMPT_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="hoursUsed">HOURS_USED</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="severityCd">SEVERITY_CD</param>
            <param name="mustSubmit">MUST_SUBMIT</param>
            <param name="periodBeginDate">PERIOD_BEGIN_DATE</param>
            <param name="periodEndDate">PERIOD_END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_7DAY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.InjectionProtocolCd">
            INJECTION_PROTOCOL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.AcqCd">
            ACQ_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummary7DayRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_APPE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.FuelCd">
            FUEL_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryAppeRow.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_CYCLE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="cycleTimeSumId">CYCLE_TIME_SUM_ID</param>
            <param name="totalTime">TOTAL_TIME</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.InjectionProtocolCd">
            INJECTION_PROTOCOL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.CycleTimeSumId">
            CYCLE_TIME_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.TotalTime">
            TOTAL_TIME
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryCycleRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="cycleTimeSumId">CYCLE_TIME_SUM_ID</param>
            <param name="totalTime">TOTAL_TIME</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_FF2LBAS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelFlowBaselineId">FUEL_FLOW_BASELINE_ID</param>
            <param name="accuracyTestNumber">ACCURACY_TEST_NUMBER</param>
            <param name="peiTestNumber">PEI_TEST_NUMBER</param>
            <param name="avgFuelFlowRate">AVG_FUEL_FLOW_RATE</param>
            <param name="avgLoad">AVG_LOAD</param>
            <param name="baselineFuelFlowLoadRatio">BASELINE_FUEL_FLOW_LOAD_RATIO</param>
            <param name="fuelFlowLoadUomCd">FUEL_FLOW_LOAD_UOM_CD</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="baselineGhr">BASELINE_GHR</param>
            <param name="ghrUomCd">GHR_UOM_CD</param>
            <param name="nheCofiring">NHE_COFIRING</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheLowRange">NHE_LOW_RANGE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.FuelFlowBaselineId">
            FUEL_FLOW_BASELINE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.AccuracyTestNumber">
            ACCURACY_TEST_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.PeiTestNumber">
            PEI_TEST_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.AvgFuelFlowRate">
            AVG_FUEL_FLOW_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.AvgLoad">
            AVG_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.BaselineFuelFlowLoadRatio">
            BASELINE_FUEL_FLOW_LOAD_RATIO
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.FuelFlowLoadUomCd">
            FUEL_FLOW_LOAD_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.AvgHrlyHiRate">
            AVG_HRLY_HI_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.BaselineGhr">
            BASELINE_GHR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.GhrUomCd">
            GHR_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.NheCofiring">
            NHE_COFIRING
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.NheRamping">
            NHE_RAMPING
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.NheLowRange">
            NHE_LOW_RANGE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2lbasRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelFlowBaselineId">FUEL_FLOW_BASELINE_ID</param>
            <param name="accuracyTestNumber">ACCURACY_TEST_NUMBER</param>
            <param name="peiTestNumber">PEI_TEST_NUMBER</param>
            <param name="avgFuelFlowRate">AVG_FUEL_FLOW_RATE</param>
            <param name="avgLoad">AVG_LOAD</param>
            <param name="baselineFuelFlowLoadRatio">BASELINE_FUEL_FLOW_LOAD_RATIO</param>
            <param name="fuelFlowLoadUomCd">FUEL_FLOW_LOAD_UOM_CD</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="baselineGhr">BASELINE_GHR</param>
            <param name="ghrUomCd">GHR_UOM_CD</param>
            <param name="nheCofiring">NHE_COFIRING</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheLowRange">NHE_LOW_RANGE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_FF2LTST
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelFlowLoadId">FUEL_FLOW_LOAD_ID</param>
            <param name="testBasisCd">TEST_BASIS_CD</param>
            <param name="avgDiff">AVG_DIFF</param>
            <param name="numHrs">NUM_HRS</param>
            <param name="nheCofiring">NHE_COFIRING</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheLowRange">NHE_LOW_RANGE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.FuelFlowLoadId">
            FUEL_FLOW_LOAD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.TestBasisCd">
            TEST_BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.AvgDiff">
            AVG_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.NumHrs">
            NUM_HRS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.NheCofiring">
            NHE_COFIRING
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.NheRamping">
            NHE_RAMPING
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.NheLowRange">
            NHE_LOW_RANGE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFf2ltstRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelFlowLoadId">FUEL_FLOW_LOAD_ID</param>
            <param name="testBasisCd">TEST_BASIS_CD</param>
            <param name="avgDiff">AVG_DIFF</param>
            <param name="numHrs">NUM_HRS</param>
            <param name="nheCofiring">NHE_COFIRING</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheLowRange">NHE_LOW_RANGE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_FFACC
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="fuelFlowAccId">FUEL_FLOW_ACC_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="accTestMethodCd">ACC_TEST_METHOD_CD</param>
            <param name="lowFuelAccuracy">LOW_FUEL_ACCURACY</param>
            <param name="midFuelAccuracy">MID_FUEL_ACCURACY</param>
            <param name="highFuelAccuracy">HIGH_FUEL_ACCURACY</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.FuelFlowAccId">
            FUEL_FLOW_ACC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.ReinstallDate">
            REINSTALL_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.ReinstallHour">
            REINSTALL_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.AccTestMethodCd">
            ACC_TEST_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.LowFuelAccuracy">
            LOW_FUEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.MidFuelAccuracy">
            MID_FUEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.HighFuelAccuracy">
            HIGH_FUEL_ACCURACY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="fuelFlowAccId">FUEL_FLOW_ACC_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="accTestMethodCd">ACC_TEST_METHOD_CD</param>
            <param name="lowFuelAccuracy">LOW_FUEL_ACCURACY</param>
            <param name="midFuelAccuracy">MID_FUEL_ACCURACY</param>
            <param name="highFuelAccuracy">HIGH_FUEL_ACCURACY</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_FFACCTT
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="transAcId">TRANS_AC_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="lowLevelAccuracy">LOW_LEVEL_ACCURACY</param>
            <param name="lowLevelAccuracySpecCd">LOW_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="midLevelAccuracy">MID_LEVEL_ACCURACY</param>
            <param name="midLevelAccuracySpecCd">MID_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="highLevelAccuracy">HIGH_LEVEL_ACCURACY</param>
            <param name="highLevelAccuracySpecCd">HIGH_LEVEL_ACCURACY_SPEC_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.TransAcId">
            TRANS_AC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.LowLevelAccuracy">
            LOW_LEVEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.LowLevelAccuracySpecCd">
            LOW_LEVEL_ACCURACY_SPEC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.MidLevelAccuracy">
            MID_LEVEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.MidLevelAccuracySpecCd">
            MID_LEVEL_ACCURACY_SPEC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.HighLevelAccuracy">
            HIGH_LEVEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.HighLevelAccuracySpecCd">
            HIGH_LEVEL_ACCURACY_SPEC_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryFfaccttRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="transAcId">TRANS_AC_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="lowLevelAccuracy">LOW_LEVEL_ACCURACY</param>
            <param name="lowLevelAccuracySpecCd">LOW_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="midLevelAccuracy">MID_LEVEL_ACCURACY</param>
            <param name="midLevelAccuracySpecCd">MID_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="highLevelAccuracy">HIGH_LEVEL_ACCURACY</param>
            <param name="highLevelAccuracySpecCd">HIGH_LEVEL_ACCURACY_SPEC_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_LINE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.HgConverterInd">
            HG_CONVERTER_IND
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryLineRow.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="hgConverterInd">HG_CONVERTER_IND</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_ONOFF
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="onlineZeroInjectionDate">ONLINE_ZERO_INJECTION_DATE</param>
            <param name="onlineZeroInjectionHour">ONLINE_ZERO_INJECTION_HOUR</param>
            <param name="onOffCalId">ON_OFF_CAL_ID</param>
            <param name="onlineZeroMeasuredValue">ONLINE_ZERO_MEASURED_VALUE</param>
            <param name="onlineZeroRefValue">ONLINE_ZERO_REF_VALUE</param>
            <param name="onlineZeroCalError">ONLINE_ZERO_CAL_ERROR</param>
            <param name="onlineZeroApsInd">ONLINE_ZERO_APS_IND</param>
            <param name="offlineZeroInjectionDate">OFFLINE_ZERO_INJECTION_DATE</param>
            <param name="offlineZeroInjectionHour">OFFLINE_ZERO_INJECTION_HOUR</param>
            <param name="offlineZeroMeasuredValue">OFFLINE_ZERO_MEASURED_VALUE</param>
            <param name="offlineZeroRefValue">OFFLINE_ZERO_REF_VALUE</param>
            <param name="offlineZeroCalError">OFFLINE_ZERO_CAL_ERROR</param>
            <param name="offlineZeroApsInd">OFFLINE_ZERO_APS_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="onlineUpscaleInjectionDate">ONLINE_UPSCALE_INJECTION_DATE</param>
            <param name="onlineUpscaleInjectionHour">ONLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="onlineUpscaleMeasuredValue">ONLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="onlineUpscaleRefValue">ONLINE_UPSCALE_REF_VALUE</param>
            <param name="onlineUpscaleCalError">ONLINE_UPSCALE_CAL_ERROR</param>
            <param name="onlineUpscaleApsInd">ONLINE_UPSCALE_APS_IND</param>
            <param name="offlineUpscaleInjectionDate">OFFLINE_UPSCALE_INJECTION_DATE</param>
            <param name="offlineUpscaleInjectionHour">OFFLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="offlineUpscaleMeasuredValue">OFFLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="offlineUpscaleRefValue">OFFLINE_UPSCALE_REF_VALUE</param>
            <param name="offlineUpscaleCalError">OFFLINE_UPSCALE_CAL_ERROR</param>
            <param name="offlineUpscaleApsInd">OFFLINE_UPSCALE_APS_IND</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineZeroInjectionDate">
            ONLINE_ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineZeroInjectionHour">
            ONLINE_ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnOffCalId">
            ON_OFF_CAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineZeroMeasuredValue">
            ONLINE_ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineZeroRefValue">
            ONLINE_ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineZeroCalError">
            ONLINE_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineZeroApsInd">
            ONLINE_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineZeroInjectionDate">
            OFFLINE_ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineZeroInjectionHour">
            OFFLINE_ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineZeroMeasuredValue">
            OFFLINE_ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineZeroRefValue">
            OFFLINE_ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineZeroCalError">
            OFFLINE_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineZeroApsInd">
            OFFLINE_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.UpscaleGasLevelCd">
            UPSCALE_GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineUpscaleInjectionDate">
            ONLINE_UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineUpscaleInjectionHour">
            ONLINE_UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineUpscaleMeasuredValue">
            ONLINE_UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineUpscaleRefValue">
            ONLINE_UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineUpscaleCalError">
            ONLINE_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OnlineUpscaleApsInd">
            ONLINE_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineUpscaleInjectionDate">
            OFFLINE_UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineUpscaleInjectionHour">
            OFFLINE_UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineUpscaleMeasuredValue">
            OFFLINE_UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineUpscaleRefValue">
            OFFLINE_UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineUpscaleCalError">
            OFFLINE_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.OfflineUpscaleApsInd">
            OFFLINE_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryOnoffRow.Set(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="onlineZeroInjectionDate">ONLINE_ZERO_INJECTION_DATE</param>
            <param name="onlineZeroInjectionHour">ONLINE_ZERO_INJECTION_HOUR</param>
            <param name="onOffCalId">ON_OFF_CAL_ID</param>
            <param name="onlineZeroMeasuredValue">ONLINE_ZERO_MEASURED_VALUE</param>
            <param name="onlineZeroRefValue">ONLINE_ZERO_REF_VALUE</param>
            <param name="onlineZeroCalError">ONLINE_ZERO_CAL_ERROR</param>
            <param name="onlineZeroApsInd">ONLINE_ZERO_APS_IND</param>
            <param name="offlineZeroInjectionDate">OFFLINE_ZERO_INJECTION_DATE</param>
            <param name="offlineZeroInjectionHour">OFFLINE_ZERO_INJECTION_HOUR</param>
            <param name="offlineZeroMeasuredValue">OFFLINE_ZERO_MEASURED_VALUE</param>
            <param name="offlineZeroRefValue">OFFLINE_ZERO_REF_VALUE</param>
            <param name="offlineZeroCalError">OFFLINE_ZERO_CAL_ERROR</param>
            <param name="offlineZeroApsInd">OFFLINE_ZERO_APS_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="onlineUpscaleInjectionDate">ONLINE_UPSCALE_INJECTION_DATE</param>
            <param name="onlineUpscaleInjectionHour">ONLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="onlineUpscaleMeasuredValue">ONLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="onlineUpscaleRefValue">ONLINE_UPSCALE_REF_VALUE</param>
            <param name="onlineUpscaleCalError">ONLINE_UPSCALE_CAL_ERROR</param>
            <param name="onlineUpscaleApsInd">ONLINE_UPSCALE_APS_IND</param>
            <param name="offlineUpscaleInjectionDate">OFFLINE_UPSCALE_INJECTION_DATE</param>
            <param name="offlineUpscaleInjectionHour">OFFLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="offlineUpscaleMeasuredValue">OFFLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="offlineUpscaleRefValue">OFFLINE_UPSCALE_REF_VALUE</param>
            <param name="offlineUpscaleCalError">OFFLINE_UPSCALE_CAL_ERROR</param>
            <param name="offlineUpscaleApsInd">OFFLINE_UPSCALE_APS_IND</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_RATA
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="rataId">RATA_ID</param>
            <param name="relativeAccuracy">RELATIVE_ACCURACY</param>
            <param name="overallBiasAdjFactor">OVERALL_BIAS_ADJ_FACTOR</param>
            <param name="numLoadLevel">NUM_LOAD_LEVEL</param>
            <param name="rataFrequencyCd">RATA_FREQUENCY_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="systemBeginDate">SYSTEM_BEGIN_DATE</param>
            <param name="systemBeginHour">SYSTEM_BEGIN_HOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.RataId">
            RATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.RelativeAccuracy">
            RELATIVE_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.OverallBiasAdjFactor">
            OVERALL_BIAS_ADJ_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.NumLoadLevel">
            NUM_LOAD_LEVEL
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.RataFrequencyCd">
            RATA_FREQUENCY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.SystemBeginDate">
            SYSTEM_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.SystemBeginHour">
            SYSTEM_BEGIN_HOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRataRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="rataId">RATA_ID</param>
            <param name="relativeAccuracy">RELATIVE_ACCURACY</param>
            <param name="overallBiasAdjFactor">OVERALL_BIAS_ADJ_FACTOR</param>
            <param name="numLoadLevel">NUM_LOAD_LEVEL</param>
            <param name="rataFrequencyCd">RATA_FREQUENCY_CD</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="systemBeginDate">SYSTEM_BEGIN_DATE</param>
            <param name="systemBeginHour">SYSTEM_BEGIN_HOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="testDescription">TEST_DESCRIPTION</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="opConditionCdDescription">OP_CONDITION_CD_DESCRIPTION</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.CalcTestResultCd">
            CALC_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.TestDescription">
            TEST_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.InjectionProtocolCd">
            INJECTION_PROTOCOL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.ReinstallDate">
            REINSTALL_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.ReinstallHour">
            REINSTALL_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.FuelGroupCd">
            FUEL_GROUP_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.UnitFuelCd">
            UNIT_FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.FuelCdDescription">
            FUEL_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.OpConditionCdDescription">
            OP_CONDITION_CD_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryRow.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="gpInd">GP_IND</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="testDescription">TEST_DESCRIPTION</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="fuelGroupCd">FUEL_GROUP_CD</param>
            <param name="unitFuelCd">UNIT_FUEL_CD</param>
            <param name="fuelCdDescription">FUEL_CD_DESCRIPTION</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="opConditionCdDescription">OP_CONDITION_CD_DESCRIPTION</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow">
            Ecmps.Dbo.View.VW_QA_TEST_SUMMARY_UNITDEF
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="unitDefaultTestSumId">UNIT_DEFAULT_TEST_SUM_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="noxDefaultRate">NOX_DEFAULT_RATE</param>
            <param name="groupId">GROUP_ID</param>
            <param name="numUnitsInGroup">NUM_UNITS_IN_GROUP</param>
            <param name="numTestsForGroup">NUM_TESTS_FOR_GROUP</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.LastUpdated">
            LAST_UPDATED
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.UpdatedStatusFlg">
            UPDATED_STATUS_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.NeedsEvalFlg">
            NEEDS_EVAL_FLG
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.UnitDefaultTestSumId">
            UNIT_DEFAULT_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.NoxDefaultRate">
            NOX_DEFAULT_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.GroupId">
            GROUP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.NumUnitsInGroup">
            NUM_UNITS_IN_GROUP
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.NumTestsForGroup">
            NUM_TESTS_FOR_GROUP
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaTestSummaryUnitdefRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="lastUpdated">LAST_UPDATED</param>
            <param name="updatedStatusFlg">UPDATED_STATUS_FLG</param>
            <param name="needsEvalFlg">NEEDS_EVAL_FLG</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="unitDefaultTestSumId">UNIT_DEFAULT_TEST_SUM_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="noxDefaultRate">NOX_DEFAULT_RATE</param>
            <param name="groupId">GROUP_ID</param>
            <param name="numUnitsInGroup">NUM_UNITS_IN_GROUP</param>
            <param name="numTestsForGroup">NUM_TESTS_FOR_GROUP</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow">
            Ecmps.Dbo.View.VW_QA_UNIT_DEFAULT_TEST_RUN
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="noxDefaultRate">NOX_DEFAULT_RATE</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="unitDefaultTestSumId">UNIT_DEFAULT_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="unitDefaultTestRunId">UNIT_DEFAULT_TEST_RUN_ID</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="responseTime">RESPONSE_TIME</param>
            <param name="refValue">REF_VALUE</param>
            <param name="runUsedInd">RUN_USED_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestBeginDate">
            TEST_BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestBeginHour">
            TEST_BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestBeginMin">
            TEST_BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestEndDate">
            TEST_END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestEndHour">
            TEST_END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.TestEndMin">
            TEST_END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.NoxDefaultRate">
            NOX_DEFAULT_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.UnitDefaultTestSumId">
            UNIT_DEFAULT_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.OpLevelNum">
            OP_LEVEL_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.UnitDefaultTestRunId">
            UNIT_DEFAULT_TEST_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.RunNum">
            RUN_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.ResponseTime">
            RESPONSE_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.RefValue">
            REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.RunUsedInd">
            RUN_USED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQaUnitDefaultTestRunRow.Set(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testBeginDate">TEST_BEGIN_DATE</param>
            <param name="testBeginHour">TEST_BEGIN_HOUR</param>
            <param name="testBeginMin">TEST_BEGIN_MIN</param>
            <param name="testEndDate">TEST_END_DATE</param>
            <param name="testEndHour">TEST_END_HOUR</param>
            <param name="testEndMin">TEST_END_MIN</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="noxDefaultRate">NOX_DEFAULT_RATE</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="unitDefaultTestSumId">UNIT_DEFAULT_TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="unitDefaultTestRunId">UNIT_DEFAULT_TEST_RUN_ID</param>
            <param name="runNum">RUN_NUM</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="responseTime">RESPONSE_TIME</param>
            <param name="refValue">REF_VALUE</param>
            <param name="runUsedInd">RUN_USED_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow">
            Ecmps.Dbo.View.VW_QUAL_LEE_TEST_TYPE_CD
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="qualLeeTestTypeCd">QUAL_LEE_TEST_TYPE_CD</param>
            <param name="qualLeeTestTypeDescription">QUAL_LEE_TEST_TYPE_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.QualLeeTestTypeCd">
            QUAL_LEE_TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.QualLeeTestTypeDescription">
            QUAL_LEE_TEST_TYPE_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwQualLeeTestTypeCdRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="qualLeeTestTypeCd">QUAL_LEE_TEST_TYPE_CD</param>
            <param name="qualLeeTestTypeDescription">QUAL_LEE_TEST_TYPE_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow">
            Ecmps.Dbo.View.VW_RECT_DUCT_WAF
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="rectDuctWafDataId">RECT_DUCT_WAF_DATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="wafDeterminedDate">WAF_DETERMINED_DATE</param>
            <param name="wafEffectiveHour">WAF_EFFECTIVE_HOUR</param>
            <param name="wafEffectiveDate">WAF_EFFECTIVE_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="wafMethodCd">WAF_METHOD_CD</param>
            <param name="wafValue">WAF_VALUE</param>
            <param name="numTestRuns">NUM_TEST_RUNS</param>
            <param name="numTestPorts">NUM_TEST_PORTS</param>
            <param name="numTraversePointsWaf">NUM_TRAVERSE_POINTS_WAF</param>
            <param name="numTraversePointsRef">NUM_TRAVERSE_POINTS_REF</param>
            <param name="ductWidth">DUCT_WIDTH</param>
            <param name="ductDepth">DUCT_DEPTH</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.RectDuctWafDataId">
            RECT_DUCT_WAF_DATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.WafDeterminedDate">
            WAF_DETERMINED_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.WafEffectiveHour">
            WAF_EFFECTIVE_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.WafEffectiveDate">
            WAF_EFFECTIVE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.WafMethodCd">
            WAF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.WafValue">
            WAF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.NumTestRuns">
            NUM_TEST_RUNS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.NumTestPorts">
            NUM_TEST_PORTS
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.NumTraversePointsWaf">
            NUM_TRAVERSE_POINTS_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.NumTraversePointsRef">
            NUM_TRAVERSE_POINTS_REF
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.DuctWidth">
            DUCT_WIDTH
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.DuctDepth">
            DUCT_DEPTH
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwRectDuctWafRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="rectDuctWafDataId">RECT_DUCT_WAF_DATA_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="wafDeterminedDate">WAF_DETERMINED_DATE</param>
            <param name="wafEffectiveHour">WAF_EFFECTIVE_HOUR</param>
            <param name="wafEffectiveDate">WAF_EFFECTIVE_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="wafMethodCd">WAF_METHOD_CD</param>
            <param name="wafValue">WAF_VALUE</param>
            <param name="numTestRuns">NUM_TEST_RUNS</param>
            <param name="numTestPorts">NUM_TEST_PORTS</param>
            <param name="numTraversePointsWaf">NUM_TRAVERSE_POINTS_WAF</param>
            <param name="numTraversePointsRef">NUM_TRAVERSE_POINTS_REF</param>
            <param name="ductWidth">DUCT_WIDTH</param>
            <param name="ductDepth">DUCT_DEPTH</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow">
            Ecmps.Dbo.View.VW_STACK_PIPE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.ActiveDate">
            ACTIVE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.RetireDate">
            RETIRE_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwStackPipeRow.Set(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow">
            Ecmps.Dbo.View.VW_SYSTEM_PARAMETER
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sysParamId">SYS_PARAM_ID</param>
            <param name="sysParamName">SYS_PARAM_NAME</param>
            <param name="paramName1">PARAM_NAME1</param>
            <param name="paramValue1">PARAM_VALUE1</param>
            <param name="paramName2">PARAM_NAME2</param>
            <param name="paramValue2">PARAM_VALUE2</param>
            <param name="paramName3">PARAM_NAME3</param>
            <param name="paramValue3">PARAM_VALUE3</param>
            <param name="paramName4">PARAM_NAME4</param>
            <param name="paramValue4">PARAM_VALUE4</param>
            <param name="paramName5">PARAM_NAME5</param>
            <param name="paramValue5">PARAM_VALUE5</param>
            <param name="notes">NOTES</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.SysParamId">
            SYS_PARAM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.SysParamName">
            SYS_PARAM_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamName1">
            PARAM_NAME1
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamValue1">
            PARAM_VALUE1
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamName2">
            PARAM_NAME2
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamValue2">
            PARAM_VALUE2
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamName3">
            PARAM_NAME3
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamValue3">
            PARAM_VALUE3
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamName4">
            PARAM_NAME4
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamValue4">
            PARAM_VALUE4
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamName5">
            PARAM_NAME5
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.ParamValue5">
            PARAM_VALUE5
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.Notes">
            NOTES
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwSystemParameterRow.Set(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="sysParamId">SYS_PARAM_ID</param>
            <param name="sysParamName">SYS_PARAM_NAME</param>
            <param name="paramName1">PARAM_NAME1</param>
            <param name="paramValue1">PARAM_VALUE1</param>
            <param name="paramName2">PARAM_NAME2</param>
            <param name="paramValue2">PARAM_VALUE2</param>
            <param name="paramName3">PARAM_NAME3</param>
            <param name="paramValue3">PARAM_VALUE3</param>
            <param name="paramName4">PARAM_NAME4</param>
            <param name="paramValue4">PARAM_VALUE4</param>
            <param name="paramName5">PARAM_NAME5</param>
            <param name="paramValue5">PARAM_VALUE5</param>
            <param name="notes">NOTES</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow">
            Ecmps.Dbo.View.VW_UNIT_MONITOR_SYSTEM
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.#ctor(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.EndHour">
            END_HOUR
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitMonitorSystemRow.Set(System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow">
            Ecmps.Dbo.View.VW_UNIT_OP_STATUS
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="opStatusCd">OP_STATUS_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="uosId">UOS_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.OpStatusCd">
            OP_STATUS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.UosId">
            UOS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitOpStatusRow.Set(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="opStatusCd">OP_STATUS_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="uosId">UOS_ID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow">
            Ecmps.Dbo.View.VW_UNIT_PROGRAM_EXEMPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="upId">UP_ID</param>
            <param name="upeId">UPE_ID</param>
            <param name="exemptTypeCd">EXEMPT_TYPE_CD</param>
            <param name="exRecDate">EX_REC_DATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.FacId">
            FAC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.PrgCd">
            PRG_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.UpId">
            UP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.UpeId">
            UPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.ExemptTypeCd">
            EXEMPT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.ExRecDate">
            EX_REC_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.EndDate">
            END_DATE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitProgramExemptionRow.Set(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="facId">FAC_ID</param>
            <param name="prgCd">PRG_CD</param>
            <param name="upId">UP_ID</param>
            <param name="upeId">UPE_ID</param>
            <param name="exemptTypeCd">EXEMPT_TYPE_CD</param>
            <param name="exRecDate">EX_REC_DATE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow">
            Ecmps.Dbo.View.VW_UNIT_STACK_CONFIGURATION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="configId">CONFIG_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="stackPipeMonLocId">STACK_PIPE_MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.ConfigId">
            CONFIG_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.StackPipeMonLocId">
            STACK_PIPE_MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUnitStackConfigurationRow.Set(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="configId">CONFIG_ID</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="unitId">UNIT_ID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="stackPipeMonLocId">STACK_PIPE_MON_LOC_ID</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow">
            Ecmps.Dbo.View.VW_USED_IDENTIFIER
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="tableCd">TABLE_CD</param>
            <param name="identifier">IDENTIFIER</param>
            <param name="typeOrParameterCd">TYPE_OR_PARAMETER_CD</param>
            <param name="formulaOrBasisCd">FORMULA_OR_BASIS_CD</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.TableCd">
            TABLE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.Identifier">
            IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.TypeOrParameterCd">
            TYPE_OR_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.FormulaOrBasisCd">
            FORMULA_OR_BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.LocationIdentifier">
            LOCATION_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.FacId">
            FAC_ID
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Dbo.View.VwUsedIdentifierRow.Set(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="tableCd">TABLE_CD</param>
            <param name="identifier">IDENTIFIER</param>
            <param name="typeOrParameterCd">TYPE_OR_PARAMETER_CD</param>
            <param name="formulaOrBasisCd">FORMULA_OR_BASIS_CD</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="locationIdentifier">LOCATION_IDENTIFIER</param>
            <param name="facId">FAC_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow">
            Ecmps.Lookup.Table.APS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="apsCd">APS_CD</param>
            <param name="apsDescription">APS_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.ApsCd">
            APS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.ApsDescription">
            APS_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ApsCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="apsCd">APS_CD</param>
            <param name="apsDescription">APS_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow">
            Ecmps.Lookup.Table.MATS_METHOD_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="matsMethodCd">MATS_METHOD_CD</param>
            <param name="matsMethodDescription">MATS_METHOD_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.MatsMethodCd">
            MATS_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.MatsMethodDescription">
            MATS_METHOD_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="matsMethodCd">MATS_METHOD_CD</param>
            <param name="matsMethodDescription">MATS_METHOD_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow">
            Ecmps.Lookup.Table.MATS_METHOD_PARAMETER_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="matsMethodParameterCd">MATS_METHOD_PARAMETER_CD</param>
            <param name="matsMethodParamDescription">MATS_METHOD_PARAM_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.MatsMethodParameterCd">
            MATS_METHOD_PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.MatsMethodParamDescription">
            MATS_METHOD_PARAM_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.MatsMethodParameterCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="matsMethodParameterCd">MATS_METHOD_PARAMETER_CD</param>
            <param name="matsMethodParamDescription">MATS_METHOD_PARAM_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow">
            Ecmps.Lookup.Table.PROGRAM_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="prgCd">PRG_CD</param>
            <param name="prgName">PRG_NAME</param>
            <param name="osInd">OS_IND</param>
            <param name="rueInd">RUE_IND</param>
            <param name="so2CertInd">SO2_CERT_IND</param>
            <param name="noxCertInd">NOX_CERT_IND</param>
            <param name="noxcCertInd">NOXC_CERT_IND</param>
            <param name="notes">NOTES</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.PrgCd">
            PRG_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.PrgName">
            PRG_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.OsInd">
            OS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.RueInd">
            RUE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.So2CertInd">
            SO2_CERT_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.NoxCertInd">
            NOX_CERT_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.NoxcCertInd">
            NOXC_CERT_IND
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.Notes">
            NOTES
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.ProgramCodeRow.Set(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="prgCd">PRG_CD</param>
            <param name="prgName">PRG_NAME</param>
            <param name="osInd">OS_IND</param>
            <param name="rueInd">RUE_IND</param>
            <param name="so2CertInd">SO2_CERT_IND</param>
            <param name="noxCertInd">NOX_CERT_IND</param>
            <param name="noxcCertInd">NOXC_CERT_IND</param>
            <param name="notes">NOTES</param>
        </member>
        <member name="T:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow">
            Ecmps.Lookup.Table.TRAIN_QA_STATUS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="trainQaStatusCd">TRAIN_QA_STATUS_CD</param>
            <param name="trainQaStatusDescription">TRAIN_QA_STATUS_DESCRIPTION</param>
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.TrainQaStatusCd">
            TRAIN_QA_STATUS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.TrainQaStatusDescription">
            TRAIN_QA_STATUS_DESCRIPTION
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.Ecmps.Lookup.Table.TrainQaStatusCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="trainQaStatusCd">TRAIN_QA_STATUS_CD</param>
            <param name="trainQaStatusDescription">TRAIN_QA_STATUS_DESCRIPTION</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow">
            EcmpsAux.CrossCheck.Virtual.Component Type and Basis to Sample Acquisition Method
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="genericComponentType">GenericComponentType</param>
            <param name="basisCode">BasisCode</param>
            <param name="sampleAcquisitionMethodCode">SampleAcquisitionMethodCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.GenericComponentType">
            GenericComponentType
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.BasisCode">
            BasisCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.SampleAcquisitionMethodCode">
            SampleAcquisitionMethodCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndBasisToSampleAcquisitionMethodRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="genericComponentType">GenericComponentType</param>
            <param name="basisCode">BasisCode</param>
            <param name="sampleAcquisitionMethodCode">SampleAcquisitionMethodCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow">
            EcmpsAux.CrossCheck.Virtual.Component Type and Span Scale to Span Method
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="componentTypeCode">ComponentTypeCode</param>
            <param name="spanScaleCode">SpanScaleCode</param>
            <param name="spanMethodCode">SpanMethodCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.ComponentTypeCode">
            ComponentTypeCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.SpanScaleCode">
            SpanScaleCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.SpanMethodCode">
            SpanMethodCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ComponentTypeAndSpanScaleToSpanMethodRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="componentTypeCode">ComponentTypeCode</param>
            <param name="spanScaleCode">SpanScaleCode</param>
            <param name="spanMethodCode">SpanMethodCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow">
            EcmpsAux.CrossCheck.Virtual.Control to Unit Type Cross Check Table
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="controlCode">ControlCode</param>
            <param name="unitTypeCode">UnitTypeCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.ControlCode">
            ControlCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.UnitTypeCode">
            UnitTypeCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ControlToUnitTypeCrossCheckTableRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="controlCode">ControlCode</param>
            <param name="unitTypeCode">UnitTypeCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow">
            EcmpsAux.CrossCheck.Virtual.Default Parameter, Boiler Type, and Fuel Type to Default Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameterCodeAndBoilerType">ParameterCodeAndBoilerType</param>
            <param name="fuelCode">FuelCode</param>
            <param name="defaultValue">DefaultValue</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.ParameterCodeAndBoilerType">
            ParameterCodeAndBoilerType
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.FuelCode">
            FuelCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.DefaultValue">
            DefaultValue
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameterCodeAndBoilerType">ParameterCodeAndBoilerType</param>
            <param name="fuelCode">FuelCode</param>
            <param name="defaultValue">DefaultValue</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow">
            EcmpsAux.CrossCheck.Virtual.Default Parameter to Purpose
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="defaultPurposeCode">DefaultPurposeCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.ParameterCode">
            ParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.DefaultPurposeCode">
            DefaultPurposeCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToPurposeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="defaultPurposeCode">DefaultPurposeCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow">
            EcmpsAux.CrossCheck.Virtual.Default Parameter to Source of Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="defaultSourceCode">DefaultSourceCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.ParameterCode">
            ParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.DefaultSourceCode">
            DefaultSourceCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.DefaultParameterToSourceOfValueRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="defaultSourceCode">DefaultSourceCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow">
            EcmpsAux.CrossCheck.Virtual.Event Code to System or Component Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="eventCode1">EventCode1</param>
            <param name="eventCode2">EventCode2</param>
            <param name="systemOrComponentType">SystemOrComponentType</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.EventCode1">
            EventCode1
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.EventCode2">
            EventCode2
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.SystemOrComponentType">
            SystemOrComponentType
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToSystemOrComponentTypeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="eventCode1">EventCode1</param>
            <param name="eventCode2">EventCode2</param>
            <param name="systemOrComponentType">SystemOrComponentType</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow">
            EcmpsAux.CrossCheck.Virtual.Event Code to Test Type Codes
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="eventCode1">EventCode1</param>
            <param name="eventCode2">EventCode2</param>
            <param name="testTypeCode">TestTypeCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.EventCode1">
            EventCode1
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.EventCode2">
            EventCode2
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.TestTypeCode">
            TestTypeCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.EventCodeToTestTypeCodesRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="eventCode1">EventCode1</param>
            <param name="eventCode2">EventCode2</param>
            <param name="testTypeCode">TestTypeCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow">
            EcmpsAux.CrossCheck.Virtual.F-Factor Range Checks
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="factor">Factor</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.Factor">
            Factor
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.LowerValue">
            Lower Value
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.UpperValue">
            Upper Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FFactorRangeChecksRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="factor">Factor</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow">
            EcmpsAux.CrossCheck.Virtual.Formula Code to F-Factor Parameter
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="formulaCode">FormulaCode</param>
            <param name="parameterCode">ParameterCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.FormulaCode">
            FormulaCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.ParameterCode">
            ParameterCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaCodeToFFactorParameterRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="formulaCode">FormulaCode</param>
            <param name="parameterCode">ParameterCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow">
            EcmpsAux.CrossCheck.Virtual.Formula Parameter and Component Type and Basis to Formula Code  
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="componentTypeAndBasis">ComponentTypeAndBasis</param>
            <param name="formulaCode">FormulaCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.ParameterCode">
            ParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.ComponentTypeAndBasis">
            ComponentTypeAndBasis
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.FormulaCode">
            FormulaCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaParameterAndComponentTypeAndBasisToFormulaCodeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="componentTypeAndBasis">ComponentTypeAndBasis</param>
            <param name="formulaCode">FormulaCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow">
            EcmpsAux.CrossCheck.Virtual.Formula to Required Method
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="formulaCode">FormulaCode</param>
            <param name="methodParameter">MethodParameter</param>
            <param name="methodCode">MethodCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.FormulaCode">
            FormulaCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.MethodParameter">
            MethodParameter
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.MethodCode">
            MethodCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredMethodRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="formulaCode">FormulaCode</param>
            <param name="methodParameter">MethodParameter</param>
            <param name="methodCode">MethodCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow">
            EcmpsAux.CrossCheck.Virtual.Formula to Required Unit Fuel
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="formulaCode">FormulaCode</param>
            <param name="unitFuelCode">UnitFuelCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.FormulaCode">
            FormulaCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.UnitFuelCode">
            UnitFuelCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FormulaToRequiredUnitFuelRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="formulaCode">FormulaCode</param>
            <param name="unitFuelCode">UnitFuelCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Code to Minimum and Maximum Moisture Default Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelCode">FuelCode</param>
            <param name="minimumValue">MinimumValue</param>
            <param name="maximumValue">MaximumValue</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.FuelCode">
            FuelCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.MinimumValue">
            MinimumValue
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.MaximumValue">
            MaximumValue
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelCodeToMinimumAndMaximumMoistureDefaultValueRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelCode">FuelCode</param>
            <param name="minimumValue">MinimumValue</param>
            <param name="maximumValue">MaximumValue</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Flow to Load Baseline UOM to Load UOM and System Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="baselineUOM">BaselineUOM</param>
            <param name="loadUOM">LoadUOM</param>
            <param name="systemTypeList">SystemTypeList</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.BaselineUOM">
            BaselineUOM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.LoadUOM">
            LoadUOM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.SystemTypeList">
            SystemTypeList
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelFlowToLoadBaselineUomToLoadUomAndSystemTypeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="baselineUOM">BaselineUOM</param>
            <param name="loadUOM">LoadUOM</param>
            <param name="systemTypeList">SystemTypeList</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Type Reality Checks for Density
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelCodeUnitsOfMeasure">Fuel Code - Units of Measure</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.FuelCodeUnitsOfMeasure">
            Fuel Code - Units of Measure
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.LowerValue">
            Lower Value
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.UpperValue">
            Upper Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForDensityRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelCodeUnitsOfMeasure">Fuel Code - Units of Measure</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Type Reality Checks for FC Factor
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelType">FuelType</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.FuelType">
            FuelType
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.LowerValue">
            Lower Value
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.UpperValue">
            Upper Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForFcFactorRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelType">FuelType</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Type Reality Checks for GCV
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelCodeUnitsOfMeasure">Fuel Code - Units of Measure</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.FuelCodeUnitsOfMeasure">
            Fuel Code - Units of Measure
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.LowerValue">
            Lower Value
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.UpperValue">
            Upper Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForGcvRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelCodeUnitsOfMeasure">Fuel Code - Units of Measure</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Type Reality Checks for Sulfur
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelCode">Fuel Code</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.FuelCode">
            Fuel Code
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.LowerValue">
            Lower Value
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.UpperValue">
            Upper Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeRealityChecksForSulfurRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelCode">Fuel Code</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Type Warning Levels for Density
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelCodeUnitsOfMeasure">Fuel Code - Units of Measure</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.FuelCodeUnitsOfMeasure">
            Fuel Code - Units of Measure
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.LowerValue">
            Lower Value
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.UpperValue">
            Upper Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForDensityRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelCodeUnitsOfMeasure">Fuel Code - Units of Measure</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Type Warning Levels for GCV
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelCodeUnitsOfMeasure">Fuel Code - Units of Measure</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.FuelCodeUnitsOfMeasure">
            Fuel Code - Units of Measure
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.LowerValue">
            Lower Value
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.UpperValue">
            Upper Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForGcvRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelCodeUnitsOfMeasure">Fuel Code - Units of Measure</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow">
            EcmpsAux.CrossCheck.Virtual.Fuel Type Warning Levels for Sulfur
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fuelCode">Fuel Code</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.FuelCode">
            Fuel Code
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.LowerValue">
            Lower Value
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.UpperValue">
            Upper Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.FuelTypeWarningLevelsForSulfurRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fuelCode">Fuel Code</param>
            <param name="lowerValue">Lower Value</param>
            <param name="upperValue">Upper Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow">
            EcmpsAux.CrossCheck.Virtual.Hourly Emissions Tolerances
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameter">Parameter</param>
            <param name="uOM">UOM</param>
            <param name="tolerance">Tolerance</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.Parameter">
            Parameter
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.UOM">
            UOM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.Tolerance">
            Tolerance
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.HourlyEmissionsTolerancesRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameter">Parameter</param>
            <param name="uOM">UOM</param>
            <param name="tolerance">Tolerance</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow">
            EcmpsAux.CrossCheck.Virtual.MATS Supplemental Compliance Parameter to Method
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="methodCode">MethodCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.ParameterCode">
            ParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.MethodCode">
            MethodCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MatsSupplementalComplianceParameterToMethodRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="methodCode">MethodCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow">
            EcmpsAux.CrossCheck.Virtual.Method Parameter Equivalent Crosscheck
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="equivalentCode">EquivalentCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.ParameterCode">
            ParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.EquivalentCode">
            EquivalentCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterEquivalentCrosscheckRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="equivalentCode">EquivalentCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow">
            EcmpsAux.CrossCheck.Virtual.Method Parameter to Maximum Default Parameter to Component Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="methodParameterCode">MethodParameterCode</param>
            <param name="defaultParameterCode">DefaultParameterCode</param>
            <param name="componentTypeCode">ComponentTypeCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.MethodParameterCode">
            MethodParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.DefaultParameterCode">
            DefaultParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.ComponentTypeCode">
            ComponentTypeCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMaximumDefaultParameterToComponentTypeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="methodParameterCode">MethodParameterCode</param>
            <param name="defaultParameterCode">DefaultParameterCode</param>
            <param name="componentTypeCode">ComponentTypeCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow">
            EcmpsAux.CrossCheck.Virtual.Method Parameter to Method to System Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="methodParameterCode">MethodParameterCode</param>
            <param name="methodCode">MethodCode</param>
            <param name="systemTypeCode">SystemTypeCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.MethodParameterCode">
            MethodParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.MethodCode">
            MethodCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.SystemTypeCode">
            SystemTypeCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodParameterToMethodToSystemTypeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="methodParameterCode">MethodParameterCode</param>
            <param name="methodCode">MethodCode</param>
            <param name="systemTypeCode">SystemTypeCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow">
            EcmpsAux.CrossCheck.Virtual.Method to Substitute Data Code
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="methodCode">MethodCode</param>
            <param name="substituteDataCode">SubstituteDataCode</param>
            <param name="parameterCode">ParameterCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.MethodCode">
            MethodCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.SubstituteDataCode">
            SubstituteDataCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.ParameterCode">
            ParameterCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.MethodToSubstituteDataCodeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="methodCode">MethodCode</param>
            <param name="substituteDataCode">SubstituteDataCode</param>
            <param name="parameterCode">ParameterCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow">
            EcmpsAux.CrossCheck.Virtual.NOX MPC to Fuel Category and Unit Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="nOXMPC">NOXMPC</param>
            <param name="fuelCategory">FuelCategory</param>
            <param name="unitTypeCode">UnitTypeCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.NOXMPC">
            NOXMPC
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.FuelCategory">
            FuelCategory
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.UnitTypeCode">
            UnitTypeCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.NoxMpcToFuelCategoryAndUnitTypeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="nOXMPC">NOXMPC</param>
            <param name="fuelCategory">FuelCategory</param>
            <param name="unitTypeCode">UnitTypeCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow">
            EcmpsAux.CrossCheck.Virtual.Oil Volume UOM to Density UOM to GCV UOM
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="oilVolumeUOM">OilVolumeUOM</param>
            <param name="oilDensityUOM">OilDensityUOM</param>
            <param name="oilGCVUOM">OilGCVUOM</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.OilVolumeUOM">
            OilVolumeUOM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.OilDensityUOM">
            OilDensityUOM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.OilGCVUOM">
            OilGCVUOM
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.OilVolumeUomToDensityUomToGcvUomRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="oilVolumeUOM">OilVolumeUOM</param>
            <param name="oilDensityUOM">OilDensityUOM</param>
            <param name="oilGCVUOM">OilGCVUOM</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow">
            EcmpsAux.CrossCheck.Virtual.Parameter to Category
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="categoryCode">CategoryCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.ParameterCode">
            ParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.CategoryCode">
            CategoryCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ParameterToCategoryRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameterCode">ParameterCode</param>
            <param name="categoryCode">CategoryCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow">
            EcmpsAux.CrossCheck.Virtual.Program Parameter to Location Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="programParameterCd">ProgramParameterCd</param>
            <param name="commonLocationTypeList">CommonLocationTypeList</param>
            <param name="multipleLocationTypeList">MultipleLocationTypeList</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.ProgramParameterCd">
            ProgramParameterCd
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.CommonLocationTypeList">
            CommonLocationTypeList
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.MultipleLocationTypeList">
            MultipleLocationTypeList
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToLocationTypeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="programParameterCd">ProgramParameterCd</param>
            <param name="commonLocationTypeList">CommonLocationTypeList</param>
            <param name="multipleLocationTypeList">MultipleLocationTypeList</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow">
            EcmpsAux.CrossCheck.Virtual.Program Parameter to Method Code
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="programParameterCd">ProgramParameterCd</param>
            <param name="methodCdList">MethodCdList</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.ProgramParameterCd">
            ProgramParameterCd
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.MethodCdList">
            MethodCdList
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="programParameterCd">ProgramParameterCd</param>
            <param name="methodCdList">MethodCdList</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow">
            EcmpsAux.CrossCheck.Virtual.Program Parameter to Method Parameter
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="programParameterCd">ProgramParameterCd</param>
            <param name="methodParameterList">MethodParameterList</param>
            <param name="methodParameterDescription">MethodParameterDescription</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.ProgramParameterCd">
            ProgramParameterCd
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.MethodParameterList">
            MethodParameterList
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.MethodParameterDescription">
            MethodParameterDescription
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToMethodParameterRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="programParameterCd">ProgramParameterCd</param>
            <param name="methodParameterList">MethodParameterList</param>
            <param name="methodParameterDescription">MethodParameterDescription</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow">
            EcmpsAux.CrossCheck.Virtual.Program Parameter to Severity
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="programParameterCd">ProgramParameterCd</param>
            <param name="severityCd">SeverityCd</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.ProgramParameterCd">
            ProgramParameterCd
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.SeverityCd">
            SeverityCd
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProgramParameterToSeverityRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="programParameterCd">ProgramParameterCd</param>
            <param name="severityCd">SeverityCd</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow">
            EcmpsAux.CrossCheck.Virtual.Protocol Gas Parameter to Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="protocolGasParameter">ProtocolGasParameter</param>
            <param name="gasTypeList">GasTypeList</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.ProtocolGasParameter">
            ProtocolGasParameter
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.GasTypeList">
            GasTypeList
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.ProtocolGasParameterToTypeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="protocolGasParameter">ProtocolGasParameter</param>
            <param name="gasTypeList">GasTypeList</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow">
            EcmpsAux.CrossCheck.Virtual.Quarterly Emissions Tolerances
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameter">Parameter</param>
            <param name="uOM">UOM</param>
            <param name="tolerance">Tolerance</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.Parameter">
            Parameter
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.UOM">
            UOM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.Tolerance">
            Tolerance
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.QuarterlyEmissionsTolerancesRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameter">Parameter</param>
            <param name="uOM">UOM</param>
            <param name="tolerance">Tolerance</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow">
            EcmpsAux.CrossCheck.Virtual.Required Test Code to Required ID and System or Component Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="requiredTestCode">RequiredTestCode</param>
            <param name="requiredIDCode">RequiredIDCode</param>
            <param name="systemOrComponentType">SystemOrComponentType</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.RequiredTestCode">
            RequiredTestCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.RequiredIDCode">
            RequiredIDCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.SystemOrComponentType">
            SystemOrComponentType
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="requiredTestCode">RequiredTestCode</param>
            <param name="requiredIDCode">RequiredIDCode</param>
            <param name="systemOrComponentType">SystemOrComponentType</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow">
            EcmpsAux.CrossCheck.Virtual.System Type to Component Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="systemTypeCode">SystemTypeCode</param>
            <param name="componentTypeCode">ComponentTypeCode</param>
            <param name="mandatory">Mandatory</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.SystemTypeCode">
            SystemTypeCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.ComponentTypeCode">
            ComponentTypeCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.Mandatory">
            Mandatory
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToComponentTypeRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="systemTypeCode">SystemTypeCode</param>
            <param name="componentTypeCode">ComponentTypeCode</param>
            <param name="mandatory">Mandatory</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow">
            EcmpsAux.CrossCheck.Virtual.System Type to Formula Parameter  
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="systemTypeCode">SystemTypeCode</param>
            <param name="parameterCode">ParameterCode</param>
            <param name="optional">optional</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.SystemTypeCode">
            SystemTypeCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.ParameterCode">
            ParameterCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.Optional">
            optional
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFormulaParameterRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="systemTypeCode">SystemTypeCode</param>
            <param name="parameterCode">ParameterCode</param>
            <param name="optional">optional</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow">
            EcmpsAux.CrossCheck.Virtual.System Type to Fuel Group
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="systemTypeCode">SystemTypeCode</param>
            <param name="fuelGroupCode">FuelGroupCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.SystemTypeCode">
            SystemTypeCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.FuelGroupCode">
            FuelGroupCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToFuelGroupRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="systemTypeCode">SystemTypeCode</param>
            <param name="fuelGroupCode">FuelGroupCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow">
            EcmpsAux.CrossCheck.Virtual.System Type to Optional Component Type
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="systemTypeCode">SystemTypeCode</param>
            <param name="optionalComponentTypeCode">OptionalComponentTypeCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.SystemTypeCode">
            SystemTypeCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.OptionalComponentTypeCode">
            OptionalComponentTypeCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.SystemTypeToOptionalComponentTypeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="systemTypeCode">SystemTypeCode</param>
            <param name="optionalComponentTypeCode">OptionalComponentTypeCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow">
            EcmpsAux.CrossCheck.Virtual.Table D-6 Missing Data Values
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="parameter">Parameter</param>
            <param name="fuelCode">FuelCode</param>
            <param name="missingDataValue">MissingDataValue</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.Parameter">
            Parameter
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.FuelCode">
            FuelCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.MissingDataValue">
            MissingDataValue
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TableD6MissingDataValuesRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="parameter">Parameter</param>
            <param name="fuelCode">FuelCode</param>
            <param name="missingDataValue">MissingDataValue</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow">
            EcmpsAux.CrossCheck.Virtual.Test Tolerances
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.#ctor(System.String,System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testTypeCode">TestTypeCode</param>
            <param name="fieldDescription">FieldDescription</param>
            <param name="tolerance">Tolerance</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.TestTypeCode">
            TestTypeCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.FieldDescription">
            FieldDescription
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.Tolerance">
            Tolerance
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTolerancesRow.Set(System.String,System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testTypeCode">TestTypeCode</param>
            <param name="fieldDescription">FieldDescription</param>
            <param name="tolerance">Tolerance</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow">
            EcmpsAux.CrossCheck.Virtual.Test Type to Required Test Code
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="testTypeCode">TestTypeCode</param>
            <param name="requiredTestCode">RequiredTestCode</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.TestTypeCode">
            TestTypeCode
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.RequiredTestCode">
            RequiredTestCode
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TestTypeToRequiredTestCodeRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="testTypeCode">TestTypeCode</param>
            <param name="requiredTestCode">RequiredTestCode</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow">
            EcmpsAux.CrossCheck.Virtual.T-Values
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.#ctor(System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="numberOfItems">NumberOfItems</param>
            <param name="tValue">T-Value</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.NumberOfItems">
            NumberOfItems
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.TValue">
            T-Value
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsAux.CrossCheck.Virtual.TValuesRow.Set(System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="numberOfItems">NumberOfItems</param>
            <param name="tValue">T-Value</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow">
            EcmpsWs.Dbo.Table.EM_DailyCalibration
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dcdPk">DCD_PK</param>
            <param name="dtsdFk">DTSD_FK</param>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="calcOnlineOfflineInd">CALC_ONLINE_OFFLINE_IND</param>
            <param name="calcZeroApsInd">CALC_ZERO_APS_IND</param>
            <param name="calcUpscaleApsInd">CALC_UPSCALE_APS_IND</param>
            <param name="calcZeroCalError">CALC_ZERO_CAL_ERROR</param>
            <param name="calcUpscaleCalError">CALC_UPSCALE_CAL_ERROR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="upscaleGasTypeCd">UPSCALE_GAS_TYPE_CD</param>
            <param name="vendorId">VENDOR_ID</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.DcdPk">
            DCD_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.DtsdFk">
            DTSD_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.CalInjId">
            CAL_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.DailyTestSumId">
            DAILY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.OnlineOfflineInd">
            ONLINE_OFFLINE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleGasLevelCd">
            UPSCALE_GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.ZeroInjectionDate">
            ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.ZeroInjectionHour">
            ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.ZeroInjectionMin">
            ZERO_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleInjectionDate">
            UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleInjectionHour">
            UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleInjectionMin">
            UPSCALE_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.ZeroMeasuredValue">
            ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleMeasuredValue">
            UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.ZeroApsInd">
            ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleApsInd">
            UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.ZeroCalError">
            ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleCalError">
            UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.ZeroRefValue">
            ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleRefValue">
            UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.CalcOnlineOfflineInd">
            CALC_ONLINE_OFFLINE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.CalcZeroApsInd">
            CALC_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.CalcUpscaleApsInd">
            CALC_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.CalcZeroCalError">
            CALC_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.CalcUpscaleCalError">
            CALC_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.UpscaleGasTypeCd">
            UPSCALE_GAS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.VendorId">
            VENDOR_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.CylinderId">
            CYLINDER_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.ExpirationDate">
            EXPIRATION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.InjectionProtocolCd">
            INJECTION_PROTOCOL_CD
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmDailycalibrationRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dcdPk">DCD_PK</param>
            <param name="dtsdFk">DTSD_FK</param>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="calcOnlineOfflineInd">CALC_ONLINE_OFFLINE_IND</param>
            <param name="calcZeroApsInd">CALC_ZERO_APS_IND</param>
            <param name="calcUpscaleApsInd">CALC_UPSCALE_APS_IND</param>
            <param name="calcZeroCalError">CALC_ZERO_CAL_ERROR</param>
            <param name="calcUpscaleCalError">CALC_UPSCALE_CAL_ERROR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="upscaleGasTypeCd">UPSCALE_GAS_TYPE_CD</param>
            <param name="vendorId">VENDOR_ID</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow">
            EcmpsWs.Dbo.Table.EM_WeeklySystemIntegrity
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="wsiPk">WSI_PK</param>
            <param name="wtsdFk">WTSD_FK</param>
            <param name="weeklySysIntegrityId">WEEKLY_SYS_INTEGRITY_ID</param>
            <param name="weeklyTestSumId">WEEKLY_TEST_SUM_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="refValue">REF_VALUE</param>
            <param name="measuredValue">MEASURED_VALUE</param>
            <param name="systemIntegrityError">SYSTEM_INTEGRITY_ERROR</param>
            <param name="apsInd">APS_IND</param>
            <param name="calcSystemIntegrityError">CALC_SYSTEM_INTEGRITY_ERROR</param>
            <param name="calcApsInd">CALC_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.WsiPk">
            WSI_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.WtsdFk">
            WTSD_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.WeeklySysIntegrityId">
            WEEKLY_SYS_INTEGRITY_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.WeeklyTestSumId">
            WEEKLY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.RefValue">
            REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.MeasuredValue">
            MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.SystemIntegrityError">
            SYSTEM_INTEGRITY_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.ApsInd">
            APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.CalcSystemIntegrityError">
            CALC_SYSTEM_INTEGRITY_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.CalcApsInd">
            CALC_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.EmWeeklysystemintegrityRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="wsiPk">WSI_PK</param>
            <param name="wtsdFk">WTSD_FK</param>
            <param name="weeklySysIntegrityId">WEEKLY_SYS_INTEGRITY_ID</param>
            <param name="weeklyTestSumId">WEEKLY_TEST_SUM_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="refValue">REF_VALUE</param>
            <param name="measuredValue">MEASURED_VALUE</param>
            <param name="systemIntegrityError">SYSTEM_INTEGRITY_ERROR</param>
            <param name="apsInd">APS_IND</param>
            <param name="calcSystemIntegrityError">CALC_SYSTEM_INTEGRITY_ERROR</param>
            <param name="calcApsInd">CALC_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow">
            EcmpsWs.Dbo.Table.QA_AECorrTestSummary
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="aectsdPk">AECTSD_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="fFactor">F_FACTOR</param>
            <param name="calcMeanRefValue">CALC_MEAN_REF_VALUE</param>
            <param name="calcAvgHrlyHiRate">CALC_AVG_HRLY_HI_RATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.AectsdPk">
            AECTSD_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.AeCorrTestSumId">
            AE_CORR_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.OpLevelNum">
            OP_LEVEL_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.MeanRefValue">
            MEAN_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.AvgHrlyHiRate">
            AVG_HRLY_HI_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.FFactor">
            F_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.CalcMeanRefValue">
            CALC_MEAN_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.CalcAvgHrlyHiRate">
            CALC_AVG_HRLY_HI_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaAecorrtestsummaryRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="aectsdPk">AECTSD_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="aeCorrTestSumId">AE_CORR_TEST_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="opLevelNum">OP_LEVEL_NUM</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="fFactor">F_FACTOR</param>
            <param name="calcMeanRefValue">CALC_MEAN_REF_VALUE</param>
            <param name="calcAvgHrlyHiRate">CALC_AVG_HRLY_HI_RATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow">
            EcmpsWs.Dbo.Table.QA_CalibrationInjection
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ciPk">CI_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="calcZeroApsInd">CALC_ZERO_APS_IND</param>
            <param name="calcUpscaleApsInd">CALC_UPSCALE_APS_IND</param>
            <param name="calcZeroCalError">CALC_ZERO_CAL_ERROR</param>
            <param name="calcUpscaleCalError">CALC_UPSCALE_CAL_ERROR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.CiPk">
            CI_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.CalInjId">
            CAL_INJ_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.OnlineOfflineInd">
            ONLINE_OFFLINE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpscaleGasLevelCd">
            UPSCALE_GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.ZeroInjectionDate">
            ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.ZeroInjectionHour">
            ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.ZeroInjectionMin">
            ZERO_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpscaleInjectionDate">
            UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpscaleInjectionHour">
            UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpscaleInjectionMin">
            UPSCALE_INJECTION_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.ZeroMeasuredValue">
            ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpscaleMeasuredValue">
            UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.ZeroApsInd">
            ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpscaleApsInd">
            UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.ZeroCalError">
            ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpscaleCalError">
            UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.ZeroRefValue">
            ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpscaleRefValue">
            UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.CalcZeroApsInd">
            CALC_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.CalcUpscaleApsInd">
            CALC_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.CalcZeroCalError">
            CALC_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.CalcUpscaleCalError">
            CALC_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCalibrationinjectionRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ciPk">CI_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="calInjId">CAL_INJ_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="onlineOfflineInd">ONLINE_OFFLINE_IND</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="zeroInjectionDate">ZERO_INJECTION_DATE</param>
            <param name="zeroInjectionHour">ZERO_INJECTION_HOUR</param>
            <param name="zeroInjectionMin">ZERO_INJECTION_MIN</param>
            <param name="upscaleInjectionDate">UPSCALE_INJECTION_DATE</param>
            <param name="upscaleInjectionHour">UPSCALE_INJECTION_HOUR</param>
            <param name="upscaleInjectionMin">UPSCALE_INJECTION_MIN</param>
            <param name="zeroMeasuredValue">ZERO_MEASURED_VALUE</param>
            <param name="upscaleMeasuredValue">UPSCALE_MEASURED_VALUE</param>
            <param name="zeroApsInd">ZERO_APS_IND</param>
            <param name="upscaleApsInd">UPSCALE_APS_IND</param>
            <param name="zeroCalError">ZERO_CAL_ERROR</param>
            <param name="upscaleCalError">UPSCALE_CAL_ERROR</param>
            <param name="zeroRefValue">ZERO_REF_VALUE</param>
            <param name="upscaleRefValue">UPSCALE_REF_VALUE</param>
            <param name="calcZeroApsInd">CALC_ZERO_APS_IND</param>
            <param name="calcUpscaleApsInd">CALC_UPSCALE_APS_IND</param>
            <param name="calcZeroCalError">CALC_ZERO_CAL_ERROR</param>
            <param name="calcUpscaleCalError">CALC_UPSCALE_CAL_ERROR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow">
            EcmpsWs.Dbo.Table.QA_CycleTimeSummary
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ctsPk">CTS_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="cycleTimeSumId">CYCLE_TIME_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="totalTime">TOTAL_TIME</param>
            <param name="calcTotalTime">CALC_TOTAL_TIME</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.CtsPk">
            CTS_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.CycleTimeSumId">
            CYCLE_TIME_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.TotalTime">
            TOTAL_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.CalcTotalTime">
            CALC_TOTAL_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaCycletimesummaryRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ctsPk">CTS_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="cycleTimeSumId">CYCLE_TIME_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="totalTime">TOTAL_TIME</param>
            <param name="calcTotalTime">CALC_TOTAL_TIME</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow">
            EcmpsWs.Dbo.Table.QA_FlowToLoadCheck
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ftlcPk">FTLC_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="flowLoadCheckId">FLOW_LOAD_CHECK_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testBasisCd">TEST_BASIS_CD</param>
            <param name="biasAdjustedInd">BIAS_ADJUSTED_IND</param>
            <param name="avgAbsPctDiff">AVG_ABS_PCT_DIFF</param>
            <param name="numHrs">NUM_HRS</param>
            <param name="nheFuel">NHE_FUEL</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheBypass">NHE_BYPASS</param>
            <param name="nhePreRata">NHE_PRE_RATA</param>
            <param name="nheTest">NHE_TEST</param>
            <param name="nheMainBypass">NHE_MAIN_BYPASS</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.FtlcPk">
            FTLC_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.FlowLoadCheckId">
            FLOW_LOAD_CHECK_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.TestBasisCd">
            TEST_BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.BiasAdjustedInd">
            BIAS_ADJUSTED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.AvgAbsPctDiff">
            AVG_ABS_PCT_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.NumHrs">
            NUM_HRS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.NheFuel">
            NHE_FUEL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.NheRamping">
            NHE_RAMPING
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.NheBypass">
            NHE_BYPASS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.NhePreRata">
            NHE_PRE_RATA
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.NheTest">
            NHE_TEST
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.NheMainBypass">
            NHE_MAIN_BYPASS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadcheckRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ftlcPk">FTLC_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="flowLoadCheckId">FLOW_LOAD_CHECK_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testBasisCd">TEST_BASIS_CD</param>
            <param name="biasAdjustedInd">BIAS_ADJUSTED_IND</param>
            <param name="avgAbsPctDiff">AVG_ABS_PCT_DIFF</param>
            <param name="numHrs">NUM_HRS</param>
            <param name="nheFuel">NHE_FUEL</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheBypass">NHE_BYPASS</param>
            <param name="nhePreRata">NHE_PRE_RATA</param>
            <param name="nheTest">NHE_TEST</param>
            <param name="nheMainBypass">NHE_MAIN_BYPASS</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow">
            EcmpsWs.Dbo.Table.QA_FlowToLoadReference
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ftlrPk">FTLR_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="flowLoadRefId">FLOW_LOAD_REF_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="rataTestNum">RATA_TEST_NUM</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="avgRefMethodFlow">AVG_REF_METHOD_FLOW</param>
            <param name="avgGrossUnitLoad">AVG_GROSS_UNIT_LOAD</param>
            <param name="refFlowLoadRatio">REF_FLOW_LOAD_RATIO</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="refGhr">REF_GHR</param>
            <param name="calcSepRefInd">CALC_SEP_REF_IND</param>
            <param name="calcAvgGrossUnitLoad">CALC_AVG_GROSS_UNIT_LOAD</param>
            <param name="calcAvgRefMethodFlow">CALC_AVG_REF_METHOD_FLOW</param>
            <param name="calcRefFlowLoadRatio">CALC_REF_FLOW_LOAD_RATIO</param>
            <param name="calcRefGhr">CALC_REF_GHR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.FtlrPk">
            FTLR_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.FlowLoadRefId">
            FLOW_LOAD_REF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.RataTestNum">
            RATA_TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.AvgRefMethodFlow">
            AVG_REF_METHOD_FLOW
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.AvgGrossUnitLoad">
            AVG_GROSS_UNIT_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.RefFlowLoadRatio">
            REF_FLOW_LOAD_RATIO
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.AvgHrlyHiRate">
            AVG_HRLY_HI_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.RefGhr">
            REF_GHR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.CalcSepRefInd">
            CALC_SEP_REF_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.CalcAvgGrossUnitLoad">
            CALC_AVG_GROSS_UNIT_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.CalcAvgRefMethodFlow">
            CALC_AVG_REF_METHOD_FLOW
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.CalcRefFlowLoadRatio">
            CALC_REF_FLOW_LOAD_RATIO
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.CalcRefGhr">
            CALC_REF_GHR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFlowtoloadreferenceRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ftlrPk">FTLR_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="flowLoadRefId">FLOW_LOAD_REF_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="rataTestNum">RATA_TEST_NUM</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="avgRefMethodFlow">AVG_REF_METHOD_FLOW</param>
            <param name="avgGrossUnitLoad">AVG_GROSS_UNIT_LOAD</param>
            <param name="refFlowLoadRatio">REF_FLOW_LOAD_RATIO</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="refGhr">REF_GHR</param>
            <param name="calcSepRefInd">CALC_SEP_REF_IND</param>
            <param name="calcAvgGrossUnitLoad">CALC_AVG_GROSS_UNIT_LOAD</param>
            <param name="calcAvgRefMethodFlow">CALC_AVG_REF_METHOD_FLOW</param>
            <param name="calcRefFlowLoadRatio">CALC_REF_FLOW_LOAD_RATIO</param>
            <param name="calcRefGhr">CALC_REF_GHR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow">
            EcmpsWs.Dbo.Table.QA_FuelFlowmeterAccuracy
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ffmaPk">FFMA_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="fuelFlowAccId">FUEL_FLOW_ACC_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="accTestMethodCd">ACC_TEST_METHOD_CD</param>
            <param name="lowFuelAccuracy">LOW_FUEL_ACCURACY</param>
            <param name="midFuelAccuracy">MID_FUEL_ACCURACY</param>
            <param name="highFuelAccuracy">HIGH_FUEL_ACCURACY</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.FfmaPk">
            FFMA_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.FuelFlowAccId">
            FUEL_FLOW_ACC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.AccTestMethodCd">
            ACC_TEST_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.LowFuelAccuracy">
            LOW_FUEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.MidFuelAccuracy">
            MID_FUEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.HighFuelAccuracy">
            HIGH_FUEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.ReinstallDate">
            REINSTALL_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.ReinstallHour">
            REINSTALL_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowmeteraccuracyRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ffmaPk">FFMA_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="fuelFlowAccId">FUEL_FLOW_ACC_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="accTestMethodCd">ACC_TEST_METHOD_CD</param>
            <param name="lowFuelAccuracy">LOW_FUEL_ACCURACY</param>
            <param name="midFuelAccuracy">MID_FUEL_ACCURACY</param>
            <param name="highFuelAccuracy">HIGH_FUEL_ACCURACY</param>
            <param name="reinstallDate">REINSTALL_DATE</param>
            <param name="reinstallHour">REINSTALL_HOUR</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow">
            EcmpsWs.Dbo.Table.QA_FuelFlowToLoadBaseline
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fftlbPk">FFTLB_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="fuelFlowBaselineId">FUEL_FLOW_BASELINE_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="accuracyTestNumber">ACCURACY_TEST_NUMBER</param>
            <param name="peiTestNumber">PEI_TEST_NUMBER</param>
            <param name="avgFuelFlowRate">AVG_FUEL_FLOW_RATE</param>
            <param name="avgLoad">AVG_LOAD</param>
            <param name="baselineFuelFlowLoadRatio">BASELINE_FUEL_FLOW_LOAD_RATIO</param>
            <param name="fuelFlowLoadUomCd">FUEL_FLOW_LOAD_UOM_CD</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="baselineGhr">BASELINE_GHR</param>
            <param name="ghrUomCd">GHR_UOM_CD</param>
            <param name="nheCofiring">NHE_COFIRING</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheLowRange">NHE_LOW_RANGE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.FftlbPk">
            FFTLB_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.FuelFlowBaselineId">
            FUEL_FLOW_BASELINE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.AccuracyTestNumber">
            ACCURACY_TEST_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.PeiTestNumber">
            PEI_TEST_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.AvgFuelFlowRate">
            AVG_FUEL_FLOW_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.AvgLoad">
            AVG_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.BaselineFuelFlowLoadRatio">
            BASELINE_FUEL_FLOW_LOAD_RATIO
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.FuelFlowLoadUomCd">
            FUEL_FLOW_LOAD_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.AvgHrlyHiRate">
            AVG_HRLY_HI_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.BaselineGhr">
            BASELINE_GHR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.GhrUomCd">
            GHR_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.NheCofiring">
            NHE_COFIRING
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.NheRamping">
            NHE_RAMPING
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.NheLowRange">
            NHE_LOW_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadbaselineRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fftlbPk">FFTLB_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="fuelFlowBaselineId">FUEL_FLOW_BASELINE_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="accuracyTestNumber">ACCURACY_TEST_NUMBER</param>
            <param name="peiTestNumber">PEI_TEST_NUMBER</param>
            <param name="avgFuelFlowRate">AVG_FUEL_FLOW_RATE</param>
            <param name="avgLoad">AVG_LOAD</param>
            <param name="baselineFuelFlowLoadRatio">BASELINE_FUEL_FLOW_LOAD_RATIO</param>
            <param name="fuelFlowLoadUomCd">FUEL_FLOW_LOAD_UOM_CD</param>
            <param name="avgHrlyHiRate">AVG_HRLY_HI_RATE</param>
            <param name="baselineGhr">BASELINE_GHR</param>
            <param name="ghrUomCd">GHR_UOM_CD</param>
            <param name="nheCofiring">NHE_COFIRING</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheLowRange">NHE_LOW_RANGE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow">
            EcmpsWs.Dbo.Table.QA_FuelFlowToLoadTest
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="fftltPk">FFTLT_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="fuelFlowLoadId">FUEL_FLOW_LOAD_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testBasisCd">TEST_BASIS_CD</param>
            <param name="avgDiff">AVG_DIFF</param>
            <param name="numHrs">NUM_HRS</param>
            <param name="nheCofiring">NHE_COFIRING</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheLowRange">NHE_LOW_RANGE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.FftltPk">
            FFTLT_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.FuelFlowLoadId">
            FUEL_FLOW_LOAD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.TestBasisCd">
            TEST_BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.AvgDiff">
            AVG_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.NumHrs">
            NUM_HRS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.NheCofiring">
            NHE_COFIRING
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.NheRamping">
            NHE_RAMPING
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.NheLowRange">
            NHE_LOW_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaFuelflowtoloadtestRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="fftltPk">FFTLT_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="fuelFlowLoadId">FUEL_FLOW_LOAD_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testBasisCd">TEST_BASIS_CD</param>
            <param name="avgDiff">AVG_DIFF</param>
            <param name="numHrs">NUM_HRS</param>
            <param name="nheCofiring">NHE_COFIRING</param>
            <param name="nheRamping">NHE_RAMPING</param>
            <param name="nheLowRange">NHE_LOW_RANGE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow">
            EcmpsWs.Dbo.Table.QA_HGTestSummary
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="hgsPk">HGS_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="hgTestSumId">HG_TEST_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="meanMeasuredValue">MEAN_MEASURED_VALUE</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="percentError">PERCENT_ERROR</param>
            <param name="apsInd">APS_IND</param>
            <param name="calcMeanMeasuredValue">CALC_MEAN_MEASURED_VALUE</param>
            <param name="calcMeanRefValue">CALC_MEAN_REF_VALUE</param>
            <param name="calcPercentError">CALC_PERCENT_ERROR</param>
            <param name="calcApsInd">CALC_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.HgsPk">
            HGS_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.HgTestSumId">
            HG_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.MeanMeasuredValue">
            MEAN_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.MeanRefValue">
            MEAN_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.PercentError">
            PERCENT_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.ApsInd">
            APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.CalcMeanMeasuredValue">
            CALC_MEAN_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.CalcMeanRefValue">
            CALC_MEAN_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.CalcPercentError">
            CALC_PERCENT_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.CalcApsInd">
            CALC_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaHgtestsummaryRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="hgsPk">HGS_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="hgTestSumId">HG_TEST_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="meanMeasuredValue">MEAN_MEASURED_VALUE</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="percentError">PERCENT_ERROR</param>
            <param name="apsInd">APS_IND</param>
            <param name="calcMeanMeasuredValue">CALC_MEAN_MEASURED_VALUE</param>
            <param name="calcMeanRefValue">CALC_MEAN_REF_VALUE</param>
            <param name="calcPercentError">CALC_PERCENT_ERROR</param>
            <param name="calcApsInd">CALC_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow">
            EcmpsWs.Dbo.Table.QA_OnOffCalibration
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="oocdPk">OOCD_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="onOffCalId">ON_OFF_CAL_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="onlineZeroRefValue">ONLINE_ZERO_REF_VALUE</param>
            <param name="onlineUpscaleRefValue">ONLINE_UPSCALE_REF_VALUE</param>
            <param name="offlineZeroRefValue">OFFLINE_ZERO_REF_VALUE</param>
            <param name="offlineUpscaleRefValue">OFFLINE_UPSCALE_REF_VALUE</param>
            <param name="onlineZeroMeasuredValue">ONLINE_ZERO_MEASURED_VALUE</param>
            <param name="onlineUpscaleMeasuredValue">ONLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="offlineZeroMeasuredValue">OFFLINE_ZERO_MEASURED_VALUE</param>
            <param name="offlineUpscaleMeasuredValue">OFFLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="onlineZeroCalError">ONLINE_ZERO_CAL_ERROR</param>
            <param name="onlineUpscaleCalError">ONLINE_UPSCALE_CAL_ERROR</param>
            <param name="offlineZeroCalError">OFFLINE_ZERO_CAL_ERROR</param>
            <param name="offlineUpscaleCalError">OFFLINE_UPSCALE_CAL_ERROR</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="onlineZeroApsInd">ONLINE_ZERO_APS_IND</param>
            <param name="onlineUpscaleApsInd">ONLINE_UPSCALE_APS_IND</param>
            <param name="offlineZeroApsInd">OFFLINE_ZERO_APS_IND</param>
            <param name="offlineUpscaleApsInd">OFFLINE_UPSCALE_APS_IND</param>
            <param name="onlineZeroInjectionDate">ONLINE_ZERO_INJECTION_DATE</param>
            <param name="onlineUpscaleInjectionDate">ONLINE_UPSCALE_INJECTION_DATE</param>
            <param name="offlineZeroInjectionDate">OFFLINE_ZERO_INJECTION_DATE</param>
            <param name="offlineUpscaleInjectionDate">OFFLINE_UPSCALE_INJECTION_DATE</param>
            <param name="onlineZeroInjectionHour">ONLINE_ZERO_INJECTION_HOUR</param>
            <param name="onlineUpscaleInjectionHour">ONLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="offlineZeroInjectionHour">OFFLINE_ZERO_INJECTION_HOUR</param>
            <param name="offlineUpscaleInjectionHour">OFFLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="calcOnlineZeroCalError">CALC_ONLINE_ZERO_CAL_ERROR</param>
            <param name="calcOnlineUpscaleCalError">CALC_ONLINE_UPSCALE_CAL_ERROR</param>
            <param name="calcOfflineZeroCalError">CALC_OFFLINE_ZERO_CAL_ERROR</param>
            <param name="calcOfflineUpscaleCalError">CALC_OFFLINE_UPSCALE_CAL_ERROR</param>
            <param name="calcOnlineZeroApsInd">CALC_ONLINE_ZERO_APS_IND</param>
            <param name="calcOnlineUpscaleApsInd">CALC_ONLINE_UPSCALE_APS_IND</param>
            <param name="calcOfflineZeroApsInd">CALC_OFFLINE_ZERO_APS_IND</param>
            <param name="calcOfflineUpscaleApsInd">CALC_OFFLINE_UPSCALE_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OocdPk">
            OOCD_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnOffCalId">
            ON_OFF_CAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineZeroRefValue">
            ONLINE_ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineUpscaleRefValue">
            ONLINE_UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineZeroRefValue">
            OFFLINE_ZERO_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineUpscaleRefValue">
            OFFLINE_UPSCALE_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineZeroMeasuredValue">
            ONLINE_ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineUpscaleMeasuredValue">
            ONLINE_UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineZeroMeasuredValue">
            OFFLINE_ZERO_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineUpscaleMeasuredValue">
            OFFLINE_UPSCALE_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineZeroCalError">
            ONLINE_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineUpscaleCalError">
            ONLINE_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineZeroCalError">
            OFFLINE_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineUpscaleCalError">
            OFFLINE_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.UpscaleGasLevelCd">
            UPSCALE_GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineZeroApsInd">
            ONLINE_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineUpscaleApsInd">
            ONLINE_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineZeroApsInd">
            OFFLINE_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineUpscaleApsInd">
            OFFLINE_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineZeroInjectionDate">
            ONLINE_ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineUpscaleInjectionDate">
            ONLINE_UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineZeroInjectionDate">
            OFFLINE_ZERO_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineUpscaleInjectionDate">
            OFFLINE_UPSCALE_INJECTION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineZeroInjectionHour">
            ONLINE_ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OnlineUpscaleInjectionHour">
            ONLINE_UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineZeroInjectionHour">
            OFFLINE_ZERO_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.OfflineUpscaleInjectionHour">
            OFFLINE_UPSCALE_INJECTION_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CalcOnlineZeroCalError">
            CALC_ONLINE_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CalcOnlineUpscaleCalError">
            CALC_ONLINE_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CalcOfflineZeroCalError">
            CALC_OFFLINE_ZERO_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CalcOfflineUpscaleCalError">
            CALC_OFFLINE_UPSCALE_CAL_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CalcOnlineZeroApsInd">
            CALC_ONLINE_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CalcOnlineUpscaleApsInd">
            CALC_ONLINE_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CalcOfflineZeroApsInd">
            CALC_OFFLINE_ZERO_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CalcOfflineUpscaleApsInd">
            CALC_OFFLINE_UPSCALE_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaOnoffcalibrationRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="oocdPk">OOCD_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="onOffCalId">ON_OFF_CAL_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="onlineZeroRefValue">ONLINE_ZERO_REF_VALUE</param>
            <param name="onlineUpscaleRefValue">ONLINE_UPSCALE_REF_VALUE</param>
            <param name="offlineZeroRefValue">OFFLINE_ZERO_REF_VALUE</param>
            <param name="offlineUpscaleRefValue">OFFLINE_UPSCALE_REF_VALUE</param>
            <param name="onlineZeroMeasuredValue">ONLINE_ZERO_MEASURED_VALUE</param>
            <param name="onlineUpscaleMeasuredValue">ONLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="offlineZeroMeasuredValue">OFFLINE_ZERO_MEASURED_VALUE</param>
            <param name="offlineUpscaleMeasuredValue">OFFLINE_UPSCALE_MEASURED_VALUE</param>
            <param name="onlineZeroCalError">ONLINE_ZERO_CAL_ERROR</param>
            <param name="onlineUpscaleCalError">ONLINE_UPSCALE_CAL_ERROR</param>
            <param name="offlineZeroCalError">OFFLINE_ZERO_CAL_ERROR</param>
            <param name="offlineUpscaleCalError">OFFLINE_UPSCALE_CAL_ERROR</param>
            <param name="upscaleGasLevelCd">UPSCALE_GAS_LEVEL_CD</param>
            <param name="onlineZeroApsInd">ONLINE_ZERO_APS_IND</param>
            <param name="onlineUpscaleApsInd">ONLINE_UPSCALE_APS_IND</param>
            <param name="offlineZeroApsInd">OFFLINE_ZERO_APS_IND</param>
            <param name="offlineUpscaleApsInd">OFFLINE_UPSCALE_APS_IND</param>
            <param name="onlineZeroInjectionDate">ONLINE_ZERO_INJECTION_DATE</param>
            <param name="onlineUpscaleInjectionDate">ONLINE_UPSCALE_INJECTION_DATE</param>
            <param name="offlineZeroInjectionDate">OFFLINE_ZERO_INJECTION_DATE</param>
            <param name="offlineUpscaleInjectionDate">OFFLINE_UPSCALE_INJECTION_DATE</param>
            <param name="onlineZeroInjectionHour">ONLINE_ZERO_INJECTION_HOUR</param>
            <param name="onlineUpscaleInjectionHour">ONLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="offlineZeroInjectionHour">OFFLINE_ZERO_INJECTION_HOUR</param>
            <param name="offlineUpscaleInjectionHour">OFFLINE_UPSCALE_INJECTION_HOUR</param>
            <param name="calcOnlineZeroCalError">CALC_ONLINE_ZERO_CAL_ERROR</param>
            <param name="calcOnlineUpscaleCalError">CALC_ONLINE_UPSCALE_CAL_ERROR</param>
            <param name="calcOfflineZeroCalError">CALC_OFFLINE_ZERO_CAL_ERROR</param>
            <param name="calcOfflineUpscaleCalError">CALC_OFFLINE_UPSCALE_CAL_ERROR</param>
            <param name="calcOnlineZeroApsInd">CALC_ONLINE_ZERO_APS_IND</param>
            <param name="calcOnlineUpscaleApsInd">CALC_ONLINE_UPSCALE_APS_IND</param>
            <param name="calcOfflineZeroApsInd">CALC_OFFLINE_ZERO_APS_IND</param>
            <param name="calcOfflineUpscaleApsInd">CALC_OFFLINE_UPSCALE_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow">
            EcmpsWs.Dbo.Table.QA_RATA
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="rataPk">RATA_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="rataId">RATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="numLoadLevel">NUM_LOAD_LEVEL</param>
            <param name="relativeAccuracy">RELATIVE_ACCURACY</param>
            <param name="rataFrequencyCd">RATA_FREQUENCY_CD</param>
            <param name="overallBiasAdjFactor">OVERALL_BIAS_ADJ_FACTOR</param>
            <param name="calcRelativeAccuracy">CALC_RELATIVE_ACCURACY</param>
            <param name="calcOverallBiasAdjFactor">CALC_OVERALL_BIAS_ADJ_FACTOR</param>
            <param name="calcNumLoadLevel">CALC_NUM_LOAD_LEVEL</param>
            <param name="calcRataFrequencyCd">CALC_RATA_FREQUENCY_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.RataPk">
            RATA_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.RataId">
            RATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.NumLoadLevel">
            NUM_LOAD_LEVEL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.RelativeAccuracy">
            RELATIVE_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.RataFrequencyCd">
            RATA_FREQUENCY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.OverallBiasAdjFactor">
            OVERALL_BIAS_ADJ_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.CalcRelativeAccuracy">
            CALC_RELATIVE_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.CalcOverallBiasAdjFactor">
            CALC_OVERALL_BIAS_ADJ_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.CalcNumLoadLevel">
            CALC_NUM_LOAD_LEVEL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.CalcRataFrequencyCd">
            CALC_RATA_FREQUENCY_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaRataRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="rataPk">RATA_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="rataId">RATA_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="numLoadLevel">NUM_LOAD_LEVEL</param>
            <param name="relativeAccuracy">RELATIVE_ACCURACY</param>
            <param name="rataFrequencyCd">RATA_FREQUENCY_CD</param>
            <param name="overallBiasAdjFactor">OVERALL_BIAS_ADJ_FACTOR</param>
            <param name="calcRelativeAccuracy">CALC_RELATIVE_ACCURACY</param>
            <param name="calcOverallBiasAdjFactor">CALC_OVERALL_BIAS_ADJ_FACTOR</param>
            <param name="calcNumLoadLevel">CALC_NUM_LOAD_LEVEL</param>
            <param name="calcRataFrequencyCd">CALC_RATA_FREQUENCY_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow">
            EcmpsWs.Dbo.Table.QA_TestQualification
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="tqPk">TQ_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="testQualificationId">TEST_QUALIFICATION_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testClaimCd">TEST_CLAIM_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="hiLoadPct">HI_LOAD_PCT</param>
            <param name="midLoadPct">MID_LOAD_PCT</param>
            <param name="lowLoadPct">LOW_LOAD_PCT</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.TqPk">
            TQ_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.TestQualificationId">
            TEST_QUALIFICATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.TestClaimCd">
            TEST_CLAIM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.HiLoadPct">
            HI_LOAD_PCT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.MidLoadPct">
            MID_LOAD_PCT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.LowLoadPct">
            LOW_LOAD_PCT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTestqualificationRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="tqPk">TQ_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="testQualificationId">TEST_QUALIFICATION_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="testClaimCd">TEST_CLAIM_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="hiLoadPct">HI_LOAD_PCT</param>
            <param name="midLoadPct">MID_LOAD_PCT</param>
            <param name="lowLoadPct">LOW_LOAD_PCT</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow">
            EcmpsWs.Dbo.Table.QA_TransAccuracy
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="taPk">TA_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="transAcId">TRANS_AC_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="lowLevelAccuracy">LOW_LEVEL_ACCURACY</param>
            <param name="lowLevelAccuracySpecCd">LOW_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="midLevelAccuracy">MID_LEVEL_ACCURACY</param>
            <param name="midLevelAccuracySpecCd">MID_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="highLevelAccuracy">HIGH_LEVEL_ACCURACY</param>
            <param name="highLevelAccuracySpecCd">HIGH_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.TaPk">
            TA_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.TransAcId">
            TRANS_AC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.LowLevelAccuracy">
            LOW_LEVEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.LowLevelAccuracySpecCd">
            LOW_LEVEL_ACCURACY_SPEC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.MidLevelAccuracy">
            MID_LEVEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.MidLevelAccuracySpecCd">
            MID_LEVEL_ACCURACY_SPEC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.HighLevelAccuracy">
            HIGH_LEVEL_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.HighLevelAccuracySpecCd">
            HIGH_LEVEL_ACCURACY_SPEC_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaTransaccuracyRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="taPk">TA_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="transAcId">TRANS_AC_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="lowLevelAccuracy">LOW_LEVEL_ACCURACY</param>
            <param name="lowLevelAccuracySpecCd">LOW_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="midLevelAccuracy">MID_LEVEL_ACCURACY</param>
            <param name="midLevelAccuracySpecCd">MID_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="highLevelAccuracy">HIGH_LEVEL_ACCURACY</param>
            <param name="highLevelAccuracySpecCd">HIGH_LEVEL_ACCURACY_SPEC_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow">
            EcmpsWs.Dbo.Table.QA_UnitDefaultTest
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="udtPk">UDT_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="unitDefaultTestSumId">UNIT_DEFAULT_TEST_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="noxDefaultRate">NOX_DEFAULT_RATE</param>
            <param name="calcNoxDefaultRate">CALC_NOX_DEFAULT_RATE</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="groupId">GROUP_ID</param>
            <param name="numUnitsInGroup">NUM_UNITS_IN_GROUP</param>
            <param name="numTestsForGroup">NUM_TESTS_FOR_GROUP</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.UdtPk">
            UDT_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.UnitDefaultTestSumId">
            UNIT_DEFAULT_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.NoxDefaultRate">
            NOX_DEFAULT_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.CalcNoxDefaultRate">
            CALC_NOX_DEFAULT_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.GroupId">
            GROUP_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.NumUnitsInGroup">
            NUM_UNITS_IN_GROUP
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.NumTestsForGroup">
            NUM_TESTS_FOR_GROUP
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.Table.QaUnitdefaulttestRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="udtPk">UDT_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="unitDefaultTestSumId">UNIT_DEFAULT_TEST_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="noxDefaultRate">NOX_DEFAULT_RATE</param>
            <param name="calcNoxDefaultRate">CALC_NOX_DEFAULT_RATE</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="groupId">GROUP_ID</param>
            <param name="numUnitsInGroup">NUM_UNITS_IN_GROUP</param>
            <param name="numTestsForGroup">NUM_TESTS_FOR_GROUP</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow">
            EcmpsWs.Dbo.View.VW_CHECK_EM_DailyTestSummary
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="dtsdPk">DTSD_PK</param>
            <param name="emFk">EM_FK</param>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.DtsdPk">
            DTSD_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.EmFk">
            EM_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.DailyTestSumId">
            DAILY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.DailyTestDate">
            DAILY_TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.DailyTestHour">
            DAILY_TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.DailyTestMin">
            DAILY_TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.CalcTestResultCd">
            CALC_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDailytestsummaryRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="dtsdPk">DTSD_PK</param>
            <param name="emFk">EM_FK</param>
            <param name="dailyTestSumId">DAILY_TEST_SUM_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="dailyTestDate">DAILY_TEST_DATE</param>
            <param name="dailyTestHour">DAILY_TEST_HOUR</param>
            <param name="dailyTestMin">DAILY_TEST_MIN</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow">
            EcmpsWs.Dbo.View.VW_CHECK_EM_Dates
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.#ctor(System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="earliestDate">EARLIEST_DATE</param>
            <param name="latestDate">LATEST_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.EarliestDate">
            EARLIEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.LatestDate">
            LATEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmDatesRow.Set(System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="earliestDate">EARLIEST_DATE</param>
            <param name="latestDate">LATEST_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow">
            EcmpsWs.Dbo.View.VW_CHECK_EM_Formulas
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.MonLocType">
            MON_LOC_TYPE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmFormulasRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow">
            EcmpsWs.Dbo.View.VW_CHECK_EM_Locations
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.MonLocType">
            MON_LOC_TYPE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLocationsRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow">
            EcmpsWs.Dbo.View.VW_CHECK_EM_LongTermFuelFlow
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="ltffPk">LTFF_PK</param>
            <param name="emFk">EM_FK</param>
            <param name="ltffId">LTFF_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="fuelFlowPeriodCd">FUEL_FLOW_PERIOD_CD</param>
            <param name="longTermFuelFlowValue">LONG_TERM_FUEL_FLOW_VALUE</param>
            <param name="ltffUomCd">LTFF_UOM_CD</param>
            <param name="grossCalorificValue">GROSS_CALORIFIC_VALUE</param>
            <param name="gcvUomCd">GCV_UOM_CD</param>
            <param name="totalHeatInput">TOTAL_HEAT_INPUT</param>
            <param name="calcTotalHeatInput">CALC_TOTAL_HEAT_INPUT</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.LtffPk">
            LTFF_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.EmFk">
            EM_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.LtffId">
            LTFF_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.FuelFlowPeriodCd">
            FUEL_FLOW_PERIOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.LongTermFuelFlowValue">
            LONG_TERM_FUEL_FLOW_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.LtffUomCd">
            LTFF_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.GrossCalorificValue">
            GROSS_CALORIFIC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.GcvUomCd">
            GCV_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.TotalHeatInput">
            TOTAL_HEAT_INPUT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.CalcTotalHeatInput">
            CALC_TOTAL_HEAT_INPUT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmLongtermfuelflowRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="ltffPk">LTFF_PK</param>
            <param name="emFk">EM_FK</param>
            <param name="ltffId">LTFF_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="fuelFlowPeriodCd">FUEL_FLOW_PERIOD_CD</param>
            <param name="longTermFuelFlowValue">LONG_TERM_FUEL_FLOW_VALUE</param>
            <param name="ltffUomCd">LTFF_UOM_CD</param>
            <param name="grossCalorificValue">GROSS_CALORIFIC_VALUE</param>
            <param name="gcvUomCd">GCV_UOM_CD</param>
            <param name="totalHeatInput">TOTAL_HEAT_INPUT</param>
            <param name="calcTotalHeatInput">CALC_TOTAL_HEAT_INPUT</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow">
            EcmpsWs.Dbo.View.VW_CHECK_EM_WeeklyTestSummary
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="wtsdPk">WTSD_PK</param>
            <param name="emFk">EM_FK</param>
            <param name="weeklyTestSumId">WEEKLY_TEST_SUM_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="testDate">TEST_DATE</param>
            <param name="testHour">TEST_HOUR</param>
            <param name="testMin">TEST_MIN</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.WtsdPk">
            WTSD_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.EmFk">
            EM_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.WeeklyTestSumId">
            WEEKLY_TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.TestDate">
            TEST_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.TestHour">
            TEST_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.TestMin">
            TEST_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.CalcTestResultCd">
            CALC_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckEmWeeklytestsummaryRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="wtsdPk">WTSD_PK</param>
            <param name="emFk">EM_FK</param>
            <param name="weeklyTestSumId">WEEKLY_TEST_SUM_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="testDate">TEST_DATE</param>
            <param name="testHour">TEST_HOUR</param>
            <param name="testMin">TEST_MIN</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_AnalyzerRange
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="arPk">AR_PK</param>
            <param name="componentFk">Component_FK</param>
            <param name="analyzerRangeId">ANALYZER_RANGE_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="dualRangeInd">DUAL_RANGE_IND</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.ArPk">
            AR_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.ComponentFk">
            Component_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.AnalyzerRangeId">
            ANALYZER_RANGE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.AnalyzerRangeCd">
            ANALYZER_RANGE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.DualRangeInd">
            DUAL_RANGE_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpAnalyzerrangeRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="arPk">AR_PK</param>
            <param name="componentFk">Component_FK</param>
            <param name="analyzerRangeId">ANALYZER_RANGE_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="analyzerRangeCd">ANALYZER_RANGE_CD</param>
            <param name="dualRangeInd">DUAL_RANGE_IND</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_CalibrationStandard
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="csPk">CS_PK</param>
            <param name="componentFk">Component_FK</param>
            <param name="calibrationStandardId">CALIBRATION_STANDARD_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="calStandardCd">CAL_STANDARD_CD</param>
            <param name="calSourceCd">CAL_SOURCE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.CsPk">
            CS_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.ComponentFk">
            Component_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.CalibrationStandardId">
            CALIBRATION_STANDARD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.CalStandardCd">
            CAL_STANDARD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.CalSourceCd">
            CAL_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpCalibrationstandardRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="csPk">CS_PK</param>
            <param name="componentFk">Component_FK</param>
            <param name="calibrationStandardId">CALIBRATION_STANDARD_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="calStandardCd">CAL_STANDARD_CD</param>
            <param name="calSourceCd">CAL_SOURCE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_Component
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="componentPk">Component_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">UNIT_FK</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.ComponentPk">
            Component_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.SpFk">
            SP_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.UnitFk">
            UNIT_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.AcqCd">
            ACQ_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.BasisCd">
            BASIS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.Manufacturer">
            MANUFACTURER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.ModelVersion">
            MODEL_VERSION
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.SerialNumber">
            SERIAL_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpComponentRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="componentPk">Component_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">UNIT_FK</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="acqCd">ACQ_CD</param>
            <param name="basisCd">BASIS_CD</param>
            <param name="manufacturer">MANUFACTURER</param>
            <param name="modelVersion">MODEL_VERSION</param>
            <param name="serialNumber">SERIAL_NUMBER</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_MonitoringFormula
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mfPk">MF_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">Unit_FK</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
            <param name="formulaEquation">FORMULA_EQUATION</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.MfPk">
            MF_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.SpFk">
            SP_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.UnitFk">
            Unit_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.MonFormId">
            MON_FORM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.FormulaIdentifier">
            FORMULA_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.ParameterCd">
            PARAMETER_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.EquationCd">
            EQUATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.FormulaEquation">
            FORMULA_EQUATION
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringformulaRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mfPk">MF_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">Unit_FK</param>
            <param name="monFormId">MON_FORM_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="formulaIdentifier">FORMULA_IDENTIFIER</param>
            <param name="parameterCd">PARAMETER_CD</param>
            <param name="equationCd">EQUATION_CD</param>
            <param name="formulaEquation">FORMULA_EQUATION</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_MonitoringQualLME
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mqlmePk">MQLME_PK</param>
            <param name="mqFk">MQ_FK</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monLmeId">MON_LME_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="qualDataYear">QUAL_DATA_YEAR</param>
            <param name="opHours">OP_HOURS</param>
            <param name="so2Tons">SO2_TONS</param>
            <param name="noxTons">NOX_TONS</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.MqlmePk">
            MQLME_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.MqFk">
            MQ_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.MonLmeId">
            MON_LME_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.QualDataYear">
            QUAL_DATA_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.OpHours">
            OP_HOURS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.So2Tons">
            SO2_TONS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.NoxTons">
            NOX_TONS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringquallmeRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mqlmePk">MQLME_PK</param>
            <param name="mqFk">MQ_FK</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monLmeId">MON_LME_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="qualDataYear">QUAL_DATA_YEAR</param>
            <param name="opHours">OP_HOURS</param>
            <param name="so2Tons">SO2_TONS</param>
            <param name="noxTons">NOX_TONS</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_MonitoringQual
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mqPk">MQ_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">Unit_FK</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.MqPk">
            MQ_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.SpFk">
            SP_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.UnitFk">
            Unit_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.MonQualId">
            MON_QUAL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.QualTypeCd">
            QUAL_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringqualRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mqPk">MQ_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">Unit_FK</param>
            <param name="monQualId">MON_QUAL_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="qualTypeCd">QUAL_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="endDate">END_DATE</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_MonitoringSpan
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="msPk">MS_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">Unit_FK</param>
            <param name="spanId">SPAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="mpcValue">MPC_VALUE</param>
            <param name="mecValue">MEC_VALUE</param>
            <param name="mpfValue">MPF_VALUE</param>
            <param name="spanValue">SPAN_VALUE</param>
            <param name="fullScaleRange">FULL_SCALE_RANGE</param>
            <param name="spanUomCd">SPAN_UOM_CD</param>
            <param name="maxLowRange">MAX_LOW_RANGE</param>
            <param name="defaultHighRange">DEFAULT_HIGH_RANGE</param>
            <param name="flowSpanValue">FLOW_SPAN_VALUE</param>
            <param name="flowFullScaleRange">FLOW_FULL_SCALE_RANGE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.MsPk">
            MS_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.SpFk">
            SP_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.UnitFk">
            Unit_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.SpanId">
            SPAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.ComponentTypeCd">
            COMPONENT_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.SpanMethodCd">
            SPAN_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.MpcValue">
            MPC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.MecValue">
            MEC_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.MpfValue">
            MPF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.SpanValue">
            SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.FullScaleRange">
            FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.SpanUomCd">
            SPAN_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.MaxLowRange">
            MAX_LOW_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.DefaultHighRange">
            DEFAULT_HIGH_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.FlowSpanValue">
            FLOW_SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.FlowFullScaleRange">
            FLOW_FULL_SCALE_RANGE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringspanRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="msPk">MS_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">Unit_FK</param>
            <param name="spanId">SPAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="componentTypeCd">COMPONENT_TYPE_CD</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="spanMethodCd">SPAN_METHOD_CD</param>
            <param name="mpcValue">MPC_VALUE</param>
            <param name="mecValue">MEC_VALUE</param>
            <param name="mpfValue">MPF_VALUE</param>
            <param name="spanValue">SPAN_VALUE</param>
            <param name="fullScaleRange">FULL_SCALE_RANGE</param>
            <param name="spanUomCd">SPAN_UOM_CD</param>
            <param name="maxLowRange">MAX_LOW_RANGE</param>
            <param name="defaultHighRange">DEFAULT_HIGH_RANGE</param>
            <param name="flowSpanValue">FLOW_SPAN_VALUE</param>
            <param name="flowFullScaleRange">FLOW_FULL_SCALE_RANGE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_MonitoringSysComponent
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="mscPk">MSC_PK</param>
            <param name="monsysFk">MonSys_FK</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.MscPk">
            MSC_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.MonsysFk">
            MonSys_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsyscomponentRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="mscPk">MSC_PK</param>
            <param name="monsysFk">MonSys_FK</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_MonitoringSysFuelFlow
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="msffPk">MSFF_PK</param>
            <param name="monsysFk">MonSys_FK</param>
            <param name="sysFuelId">SYS_FUEL_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="maxRate">MAX_RATE</param>
            <param name="sysFuelUomCd">SYS_FUEL_UOM_CD</param>
            <param name="maxRateSourceCd">MAX_RATE_SOURCE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.MsffPk">
            MSFF_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.MonsysFk">
            MonSys_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.SysFuelId">
            SYS_FUEL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.MaxRate">
            MAX_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.SysFuelUomCd">
            SYS_FUEL_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.MaxRateSourceCd">
            MAX_RATE_SOURCE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysfuelflowRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="msffPk">MSFF_PK</param>
            <param name="monsysFk">MonSys_FK</param>
            <param name="sysFuelId">SYS_FUEL_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="maxRate">MAX_RATE</param>
            <param name="sysFuelUomCd">SYS_FUEL_UOM_CD</param>
            <param name="maxRateSourceCd">MAX_RATE_SOURCE_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_MonitoringSys
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="monsysPk">MonSys_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">Unit_FK</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.MonsysPk">
            MonSys_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.SpFk">
            SP_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.UnitFk">
            Unit_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.SysTypeCd">
            SYS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.SysDesignationCd">
            SYS_DESIGNATION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.FuelCd">
            FUEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpMonitoringsysRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="monsysPk">MonSys_PK</param>
            <param name="spFk">SP_FK</param>
            <param name="unitFk">Unit_FK</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="sysTypeCd">SYS_TYPE_CD</param>
            <param name="sysDesignationCd">SYS_DESIGNATION_CD</param>
            <param name="fuelCd">FUEL_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="unitid">UNITID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_StackPipe
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="spPk">SP_PK</param>
            <param name="locationFk">Location_FK</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.SpPk">
            SP_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.LocationFk">
            Location_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.StackPipeId">
            STACK_PIPE_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.ActiveDate">
            ACTIVE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.RetireDate">
            RETIRE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpStackpipeRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="spPk">SP_PK</param>
            <param name="locationFk">Location_FK</param>
            <param name="stackPipeId">STACK_PIPE_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="activeDate">ACTIVE_DATE</param>
            <param name="retireDate">RETIRE_DATE</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow">
            EcmpsWs.Dbo.View.VW_CHECK_MP_Unit
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitPk">UNIT_PK</param>
            <param name="locationFk">Location_FK</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.UnitPk">
            UNIT_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.LocationFk">
            Location_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.UnitId">
            UNIT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.NonLoadBasedInd">
            NON_LOAD_BASED_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckMpUnitRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitPk">UNIT_PK</param>
            <param name="locationFk">Location_FK</param>
            <param name="unitId">UNIT_ID</param>
            <param name="unitid">UNITID</param>
            <param name="nonLoadBasedInd">NON_LOAD_BASED_IND</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_AE_HI_GAS
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="aehifgPk">AEHIFG_PK</param>
            <param name="aectrdFk">AECTRD_FK</param>
            <param name="aeHiGasId">AE_HI_GAS_ID</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="gasGcv">GAS_GCV</param>
            <param name="gasVolume">GAS_VOLUME</param>
            <param name="gasHi">GAS_HI</param>
            <param name="calcGasHi">CALC_GAS_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="tsFk">TS_FK</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.AehifgPk">
            AEHIFG_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.AectrdFk">
            AECTRD_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.AeHiGasId">
            AE_HI_GAS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.AeCorrTestRunId">
            AE_CORR_TEST_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.GasGcv">
            GAS_GCV
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.GasVolume">
            GAS_VOLUME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.GasHi">
            GAS_HI
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.CalcGasHi">
            CALC_GAS_HI
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.TsFk">
            TS_FK
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiGasRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="aehifgPk">AEHIFG_PK</param>
            <param name="aectrdFk">AECTRD_FK</param>
            <param name="aeHiGasId">AE_HI_GAS_ID</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="gasGcv">GAS_GCV</param>
            <param name="gasVolume">GAS_VOLUME</param>
            <param name="gasHi">GAS_HI</param>
            <param name="calcGasHi">CALC_GAS_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="tsFk">TS_FK</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_AE_HI_OIL
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="aehifoPk">AEHIFO_PK</param>
            <param name="aectrdFk">AECTRD_FK</param>
            <param name="aeHiOilId">AE_HI_OIL_ID</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="oilMass">OIL_MASS</param>
            <param name="calcOilMass">CALC_OIL_MASS</param>
            <param name="oilGcv">OIL_GCV</param>
            <param name="oilGcvUomCd">OIL_GCV_UOM_CD</param>
            <param name="oilHi">OIL_HI</param>
            <param name="oilVolume">OIL_VOLUME</param>
            <param name="oilVolumeUomCd">OIL_VOLUME_UOM_CD</param>
            <param name="oilDensity">OIL_DENSITY</param>
            <param name="oilDensityUomCd">OIL_DENSITY_UOM_CD</param>
            <param name="calcOilHi">CALC_OIL_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="tsFk">TS_FK</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.AehifoPk">
            AEHIFO_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.AectrdFk">
            AECTRD_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.AeHiOilId">
            AE_HI_OIL_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.AeCorrTestRunId">
            AE_CORR_TEST_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.OilMass">
            OIL_MASS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.CalcOilMass">
            CALC_OIL_MASS
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.OilGcv">
            OIL_GCV
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.OilGcvUomCd">
            OIL_GCV_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.OilHi">
            OIL_HI
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.OilVolume">
            OIL_VOLUME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.OilVolumeUomCd">
            OIL_VOLUME_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.OilDensity">
            OIL_DENSITY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.OilDensityUomCd">
            OIL_DENSITY_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.CalcOilHi">
            CALC_OIL_HI
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.TsFk">
            TS_FK
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAeHiOilRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="aehifoPk">AEHIFO_PK</param>
            <param name="aectrdFk">AECTRD_FK</param>
            <param name="aeHiOilId">AE_HI_OIL_ID</param>
            <param name="aeCorrTestRunId">AE_CORR_TEST_RUN_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="oilMass">OIL_MASS</param>
            <param name="calcOilMass">CALC_OIL_MASS</param>
            <param name="oilGcv">OIL_GCV</param>
            <param name="oilGcvUomCd">OIL_GCV_UOM_CD</param>
            <param name="oilHi">OIL_HI</param>
            <param name="oilVolume">OIL_VOLUME</param>
            <param name="oilVolumeUomCd">OIL_VOLUME_UOM_CD</param>
            <param name="oilDensity">OIL_DENSITY</param>
            <param name="oilDensityUomCd">OIL_DENSITY_UOM_CD</param>
            <param name="calcOilHi">CALC_OIL_HI</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="tsFk">TS_FK</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_AirEmissionTesting
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="aetPk">AET_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="airEmissionTestId">AIR_EMISSION_TEST_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="qiLastName">QI_LAST_NAME</param>
            <param name="qiFirstName">QI_FIRST_NAME</param>
            <param name="qiMiddleInitial">QI_MIDDLE_INITIAL</param>
            <param name="aetbName">AETB_NAME</param>
            <param name="aetbPhoneNumber">AETB_PHONE_NUMBER</param>
            <param name="aetbEmail">AETB_EMAIL</param>
            <param name="examDate">EXAM_DATE</param>
            <param name="providerName">PROVIDER_NAME</param>
            <param name="providerEmail">PROVIDER_EMAIL</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.AetPk">
            AET_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.AirEmissionTestId">
            AIR_EMISSION_TEST_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.QiLastName">
            QI_LAST_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.QiFirstName">
            QI_FIRST_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.QiMiddleInitial">
            QI_MIDDLE_INITIAL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.AetbName">
            AETB_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.AetbPhoneNumber">
            AETB_PHONE_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.AetbEmail">
            AETB_EMAIL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.ExamDate">
            EXAM_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.ProviderName">
            PROVIDER_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.ProviderEmail">
            PROVIDER_EMAIL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaAiremissiontestingRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="aetPk">AET_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="airEmissionTestId">AIR_EMISSION_TEST_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="qiLastName">QI_LAST_NAME</param>
            <param name="qiFirstName">QI_FIRST_NAME</param>
            <param name="qiMiddleInitial">QI_MIDDLE_INITIAL</param>
            <param name="aetbName">AETB_NAME</param>
            <param name="aetbPhoneNumber">AETB_PHONE_NUMBER</param>
            <param name="aetbEmail">AETB_EMAIL</param>
            <param name="examDate">EXAM_DATE</param>
            <param name="providerName">PROVIDER_NAME</param>
            <param name="providerEmail">PROVIDER_EMAIL</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_Components
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.MonLocType">
            MON_LOC_TYPE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaComponentsRow.Set(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="submissionId">SUBMISSION_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_FlowRATARun
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="frrPk">FRR_PK</param>
            <param name="rrdFk">RRD_FK</param>
            <param name="flowRataRunId">FLOW_RATA_RUN_ID</param>
            <param name="rataRunId">RATA_RUN_ID</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="barometricPressure">BAROMETRIC_PRESSURE</param>
            <param name="staticStackPressure">STATIC_STACK_PRESSURE</param>
            <param name="percentCo2">PERCENT_CO2</param>
            <param name="percentO2">PERCENT_O2</param>
            <param name="percentMoisture">PERCENT_MOISTURE</param>
            <param name="dryMolecularWeight">DRY_MOLECULAR_WEIGHT</param>
            <param name="wetMolecularWeight">WET_MOLECULAR_WEIGHT</param>
            <param name="avgVelWoWall">AVG_VEL_WO_WALL</param>
            <param name="avgVelWWall">AVG_VEL_W_WALL</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="avgStackFlowRate">AVG_STACK_FLOW_RATE</param>
            <param name="calcAvgVelWoWall">CALC_AVG_VEL_WO_WALL</param>
            <param name="calcAvgVelWWall">CALC_AVG_VEL_W_WALL</param>
            <param name="calcCalcWaf">CALC_CALC_WAF</param>
            <param name="calcDryMolecularWeight">CALC_DRY_MOLECULAR_WEIGHT</param>
            <param name="calcWetMolecularWeight">CALC_WET_MOLECULAR_WEIGHT</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="tsFk">TS_FK</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.FrrPk">
            FRR_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.RrdFk">
            RRD_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.FlowRataRunId">
            FLOW_RATA_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.RataRunId">
            RATA_RUN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.NumTraversePoint">
            NUM_TRAVERSE_POINT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.BarometricPressure">
            BAROMETRIC_PRESSURE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.StaticStackPressure">
            STATIC_STACK_PRESSURE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.PercentCo2">
            PERCENT_CO2
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.PercentO2">
            PERCENT_O2
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.PercentMoisture">
            PERCENT_MOISTURE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.DryMolecularWeight">
            DRY_MOLECULAR_WEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.WetMolecularWeight">
            WET_MOLECULAR_WEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.AvgVelWoWall">
            AVG_VEL_WO_WALL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.AvgVelWWall">
            AVG_VEL_W_WALL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.CalcWaf">
            CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.AvgStackFlowRate">
            AVG_STACK_FLOW_RATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.CalcAvgVelWoWall">
            CALC_AVG_VEL_WO_WALL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.CalcAvgVelWWall">
            CALC_AVG_VEL_W_WALL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.CalcCalcWaf">
            CALC_CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.CalcDryMolecularWeight">
            CALC_DRY_MOLECULAR_WEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.CalcWetMolecularWeight">
            CALC_WET_MOLECULAR_WEIGHT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.TsFk">
            TS_FK
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaFlowratarunRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="frrPk">FRR_PK</param>
            <param name="rrdFk">RRD_FK</param>
            <param name="flowRataRunId">FLOW_RATA_RUN_ID</param>
            <param name="rataRunId">RATA_RUN_ID</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="barometricPressure">BAROMETRIC_PRESSURE</param>
            <param name="staticStackPressure">STATIC_STACK_PRESSURE</param>
            <param name="percentCo2">PERCENT_CO2</param>
            <param name="percentO2">PERCENT_O2</param>
            <param name="percentMoisture">PERCENT_MOISTURE</param>
            <param name="dryMolecularWeight">DRY_MOLECULAR_WEIGHT</param>
            <param name="wetMolecularWeight">WET_MOLECULAR_WEIGHT</param>
            <param name="avgVelWoWall">AVG_VEL_WO_WALL</param>
            <param name="avgVelWWall">AVG_VEL_W_WALL</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="avgStackFlowRate">AVG_STACK_FLOW_RATE</param>
            <param name="calcAvgVelWoWall">CALC_AVG_VEL_WO_WALL</param>
            <param name="calcAvgVelWWall">CALC_AVG_VEL_W_WALL</param>
            <param name="calcCalcWaf">CALC_CALC_WAF</param>
            <param name="calcDryMolecularWeight">CALC_DRY_MOLECULAR_WEIGHT</param>
            <param name="calcWetMolecularWeight">CALC_WET_MOLECULAR_WEIGHT</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="tsFk">TS_FK</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_LinearitySummary
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="lsPk">LS_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="linSumId">LIN_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="meanMeasuredValue">MEAN_MEASURED_VALUE</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="percentError">PERCENT_ERROR</param>
            <param name="apsInd">APS_IND</param>
            <param name="calcMeanMeasuredValue">CALC_MEAN_MEASURED_VALUE</param>
            <param name="calcMeanRefValue">CALC_MEAN_REF_VALUE</param>
            <param name="calcPercentError">CALC_PERCENT_ERROR</param>
            <param name="calcApsInd">CALC_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.LsPk">
            LS_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.LinSumId">
            LIN_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.MeanMeasuredValue">
            MEAN_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.MeanRefValue">
            MEAN_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.PercentError">
            PERCENT_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.ApsInd">
            APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.CalcMeanMeasuredValue">
            CALC_MEAN_MEASURED_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.CalcMeanRefValue">
            CALC_MEAN_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.CalcPercentError">
            CALC_PERCENT_ERROR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.CalcApsInd">
            CALC_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLinearitysummaryRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="lsPk">LS_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="linSumId">LIN_SUM_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="meanMeasuredValue">MEAN_MEASURED_VALUE</param>
            <param name="meanRefValue">MEAN_REF_VALUE</param>
            <param name="percentError">PERCENT_ERROR</param>
            <param name="apsInd">APS_IND</param>
            <param name="calcMeanMeasuredValue">CALC_MEAN_MEASURED_VALUE</param>
            <param name="calcMeanRefValue">CALC_MEAN_REF_VALUE</param>
            <param name="calcPercentError">CALC_PERCENT_ERROR</param>
            <param name="calcApsInd">CALC_APS_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_Locations
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.MonLocType">
            MON_LOC_TYPE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaLocationsRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_ProtocolGas
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="pgPk">PG_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="protocolGasId">PROTOCOL_GAS_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="gasTypeCd">GAS_TYPE_CD</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="vendorId">VENDOR_ID</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.PgPk">
            PG_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.ProtocolGasId">
            PROTOCOL_GAS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.GasLevelCd">
            GAS_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.GasTypeCd">
            GAS_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.CylinderId">
            CYLINDER_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.ExpirationDate">
            EXPIRATION_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.VendorId">
            VENDOR_ID
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaProtocolgasRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="pgPk">PG_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="protocolGasId">PROTOCOL_GAS_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="gasLevelCd">GAS_LEVEL_CD</param>
            <param name="gasTypeCd">GAS_TYPE_CD</param>
            <param name="cylinderId">CYLINDER_ID</param>
            <param name="expirationDate">EXPIRATION_DATE</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="vendorId">VENDOR_ID</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_RATASummary
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="rsPk">RS_PK</param>
            <param name="rataFk">RATA_FK</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="rataId">RATA_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="avgGrossUnitLoad">AVG_GROSS_UNIT_LOAD</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="meanCemValue">MEAN_CEM_VALUE</param>
            <param name="meanRataRefValue">MEAN_RATA_REF_VALUE</param>
            <param name="meanDiff">MEAN_DIFF</param>
            <param name="stndDevDiff">STND_DEV_DIFF</param>
            <param name="confidenceCoef">CONFIDENCE_COEF</param>
            <param name="tValue">T_VALUE</param>
            <param name="apsInd">APS_IND</param>
            <param name="relativeAccuracy">RELATIVE_ACCURACY</param>
            <param name="biasAdjFactor">BIAS_ADJ_FACTOR</param>
            <param name="co2O2RefMethodCd">CO2_O2_REF_METHOD_CD</param>
            <param name="stackDiameter">STACK_DIAMETER</param>
            <param name="stackArea">STACK_AREA</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="calcAvgGrossUnitLoad">CALC_AVG_GROSS_UNIT_LOAD</param>
            <param name="calcMeanCemValue">CALC_MEAN_CEM_VALUE</param>
            <param name="calcMeanRataRefValue">CALC_MEAN_RATA_REF_VALUE</param>
            <param name="calcMeanDiff">CALC_MEAN_DIFF</param>
            <param name="calcStndDevDiff">CALC_STND_DEV_DIFF</param>
            <param name="calcConfidenceCoef">CALC_CONFIDENCE_COEF</param>
            <param name="calcTValue">CALC_T_VALUE</param>
            <param name="calcApsInd">CALC_APS_IND</param>
            <param name="calcRelativeAccuracy">CALC_RELATIVE_ACCURACY</param>
            <param name="calcBiasAdjFactor">CALC_BIAS_ADJ_FACTOR</param>
            <param name="calcStackArea">CALC_STACK_AREA</param>
            <param name="calcCalcWaf">CALC_CALC_WAF</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="apsCd">APS_CD</param>
            <param name="testNum">TEST_NUM</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.RsPk">
            RS_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.RataFk">
            RATA_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.RataSumId">
            RATA_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.RataId">
            RATA_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.OpLevelCd">
            OP_LEVEL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.AvgGrossUnitLoad">
            AVG_GROSS_UNIT_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.RefMethodCd">
            REF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.MeanCemValue">
            MEAN_CEM_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.MeanRataRefValue">
            MEAN_RATA_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.MeanDiff">
            MEAN_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.StndDevDiff">
            STND_DEV_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.ConfidenceCoef">
            CONFIDENCE_COEF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.TValue">
            T_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.ApsInd">
            APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.RelativeAccuracy">
            RELATIVE_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.BiasAdjFactor">
            BIAS_ADJ_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.Co2O2RefMethodCd">
            CO2_O2_REF_METHOD_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.StackDiameter">
            STACK_DIAMETER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.StackArea">
            STACK_AREA
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.NumTraversePoint">
            NUM_TRAVERSE_POINT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcWaf">
            CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.DefaultWaf">
            DEFAULT_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcAvgGrossUnitLoad">
            CALC_AVG_GROSS_UNIT_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcMeanCemValue">
            CALC_MEAN_CEM_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcMeanRataRefValue">
            CALC_MEAN_RATA_REF_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcMeanDiff">
            CALC_MEAN_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcStndDevDiff">
            CALC_STND_DEV_DIFF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcConfidenceCoef">
            CALC_CONFIDENCE_COEF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcTValue">
            CALC_T_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcApsInd">
            CALC_APS_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcRelativeAccuracy">
            CALC_RELATIVE_ACCURACY
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcBiasAdjFactor">
            CALC_BIAS_ADJ_FACTOR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcStackArea">
            CALC_STACK_AREA
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CalcCalcWaf">
            CALC_CALC_WAF
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.ApsCd">
            APS_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.LocationId">
            LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaRatasummaryRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="rsPk">RS_PK</param>
            <param name="rataFk">RATA_FK</param>
            <param name="rataSumId">RATA_SUM_ID</param>
            <param name="rataId">RATA_ID</param>
            <param name="opLevelCd">OP_LEVEL_CD</param>
            <param name="avgGrossUnitLoad">AVG_GROSS_UNIT_LOAD</param>
            <param name="refMethodCd">REF_METHOD_CD</param>
            <param name="meanCemValue">MEAN_CEM_VALUE</param>
            <param name="meanRataRefValue">MEAN_RATA_REF_VALUE</param>
            <param name="meanDiff">MEAN_DIFF</param>
            <param name="stndDevDiff">STND_DEV_DIFF</param>
            <param name="confidenceCoef">CONFIDENCE_COEF</param>
            <param name="tValue">T_VALUE</param>
            <param name="apsInd">APS_IND</param>
            <param name="relativeAccuracy">RELATIVE_ACCURACY</param>
            <param name="biasAdjFactor">BIAS_ADJ_FACTOR</param>
            <param name="co2O2RefMethodCd">CO2_O2_REF_METHOD_CD</param>
            <param name="stackDiameter">STACK_DIAMETER</param>
            <param name="stackArea">STACK_AREA</param>
            <param name="numTraversePoint">NUM_TRAVERSE_POINT</param>
            <param name="calcWaf">CALC_WAF</param>
            <param name="defaultWaf">DEFAULT_WAF</param>
            <param name="calcAvgGrossUnitLoad">CALC_AVG_GROSS_UNIT_LOAD</param>
            <param name="calcMeanCemValue">CALC_MEAN_CEM_VALUE</param>
            <param name="calcMeanRataRefValue">CALC_MEAN_RATA_REF_VALUE</param>
            <param name="calcMeanDiff">CALC_MEAN_DIFF</param>
            <param name="calcStndDevDiff">CALC_STND_DEV_DIFF</param>
            <param name="calcConfidenceCoef">CALC_CONFIDENCE_COEF</param>
            <param name="calcTValue">CALC_T_VALUE</param>
            <param name="calcApsInd">CALC_APS_IND</param>
            <param name="calcRelativeAccuracy">CALC_RELATIVE_ACCURACY</param>
            <param name="calcBiasAdjFactor">CALC_BIAS_ADJ_FACTOR</param>
            <param name="calcStackArea">CALC_STACK_AREA</param>
            <param name="calcCalcWaf">CALC_CALC_WAF</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="apsCd">APS_CD</param>
            <param name="testNum">TEST_NUM</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_Systems
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.#ctor(System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.UnitOrStack">
            UNIT_OR_STACK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.MonLocType">
            MON_LOC_TYPE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaSystemsRow.Set(System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="unitOrStack">UNIT_OR_STACK</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="monLocType">MON_LOC_TYPE</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow">
            EcmpsWs.Dbo.View.VW_CHECK_QA_TestSummary
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="tsPk">TS_PK</param>
            <param name="qaFk">QA_FK</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="calcSpanValue">CALC_SPAN_VALUE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testDescription">TEST_DESCRIPTION</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="gpInd">GP_IND</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="calcGpInd">CALC_GP_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.TsPk">
            TS_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.QaFk">
            QA_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.ChkSessionId">
            CHK_SESSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.MonSysId">
            MON_SYS_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.ComponentId">
            COMPONENT_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.StackName">
            STACK_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.Unitid">
            UNITID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.TestTypeCd">
            TEST_TYPE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.SystemIdentifier">
            SYSTEM_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.ComponentIdentifier">
            COMPONENT_IDENTIFIER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.SpanScaleCd">
            SPAN_SCALE_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.CalcSpanValue">
            CALC_SPAN_VALUE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.TestNum">
            TEST_NUM
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.TestReasonCd">
            TEST_REASON_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.TestDescription">
            TEST_DESCRIPTION
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.TestResultCd">
            TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.BeginMin">
            BEGIN_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.EndDate">
            END_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.EndHour">
            END_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.EndMin">
            END_MIN
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.GpInd">
            GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.CalendarYear">
            CALENDAR_YEAR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.Quarter">
            QUARTER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.TestComment">
            TEST_COMMENT
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.CalcTestResultCd">
            CALC_TEST_RESULT_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.CalcGpInd">
            CALC_GP_IND
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.InjectionProtocolCd">
            INJECTION_PROTOCOL_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.LocationId">
            LOCATION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwCheckQaTestsummaryRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="tsPk">TS_PK</param>
            <param name="qaFk">QA_FK</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="chkSessionId">CHK_SESSION_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="monSysId">MON_SYS_ID</param>
            <param name="componentId">COMPONENT_ID</param>
            <param name="stackName">STACK_NAME</param>
            <param name="unitid">UNITID</param>
            <param name="testTypeCd">TEST_TYPE_CD</param>
            <param name="systemIdentifier">SYSTEM_IDENTIFIER</param>
            <param name="componentIdentifier">COMPONENT_IDENTIFIER</param>
            <param name="spanScaleCd">SPAN_SCALE_CD</param>
            <param name="calcSpanValue">CALC_SPAN_VALUE</param>
            <param name="testNum">TEST_NUM</param>
            <param name="testReasonCd">TEST_REASON_CD</param>
            <param name="testDescription">TEST_DESCRIPTION</param>
            <param name="testResultCd">TEST_RESULT_CD</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="beginMin">BEGIN_MIN</param>
            <param name="endDate">END_DATE</param>
            <param name="endHour">END_HOUR</param>
            <param name="endMin">END_MIN</param>
            <param name="gpInd">GP_IND</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="calendarYear">CALENDAR_YEAR</param>
            <param name="quarter">QUARTER</param>
            <param name="testComment">TEST_COMMENT</param>
            <param name="calcTestResultCd">CALC_TEST_RESULT_CD</param>
            <param name="calcGpInd">CALC_GP_IND</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
            <param name="injectionProtocolCd">INJECTION_PROTOCOL_CD</param>
            <param name="locationId">LOCATION_ID</param>
            <param name="orisCode">ORIS_CODE</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow">
            EcmpsWs.Dbo.View.VW_EM_LMEImport
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="lmePk">LME_PK</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="unitPipe">UNIT_PIPE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="opTime">OP_TIME</param>
            <param name="hrLoad">HR_LOAD</param>
            <param name="loadUomCd">LOAD_UOM_CD</param>
            <param name="fuelCdList">FUEL_CD_LIST</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="mhhiIndicator">MHHI_INDICATOR</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="realMhhiIndicator">REAL_MHHI_INDICATOR</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.LmePk">
            LME_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.OrisCode">
            ORIS_CODE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.UnitPipe">
            UNIT_PIPE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.BeginDate">
            BEGIN_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.BeginHour">
            BEGIN_HOUR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.OpTime">
            OP_TIME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.HrLoad">
            HR_LOAD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.LoadUomCd">
            LOAD_UOM_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.FuelCdList">
            FUEL_CD_LIST
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.OperatingConditionCd">
            OPERATING_CONDITION_CD
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.MhhiIndicator">
            MHHI_INDICATOR
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.MonPlanId">
            MON_PLAN_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.MonLocId">
            MON_LOC_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.RptPeriodId">
            RPT_PERIOD_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.RealMhhiIndicator">
            REAL_MHHI_INDICATOR
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwEmLmeimportRow.Set(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="lmePk">LME_PK</param>
            <param name="orisCode">ORIS_CODE</param>
            <param name="unitPipe">UNIT_PIPE</param>
            <param name="beginDate">BEGIN_DATE</param>
            <param name="beginHour">BEGIN_HOUR</param>
            <param name="opTime">OP_TIME</param>
            <param name="hrLoad">HR_LOAD</param>
            <param name="loadUomCd">LOAD_UOM_CD</param>
            <param name="fuelCdList">FUEL_CD_LIST</param>
            <param name="operatingConditionCd">OPERATING_CONDITION_CD</param>
            <param name="mhhiIndicator">MHHI_INDICATOR</param>
            <param name="monPlanId">MON_PLAN_ID</param>
            <param name="monLocId">MON_LOC_ID</param>
            <param name="rptPeriodId">RPT_PERIOD_ID</param>
            <param name="realMhhiIndicator">REAL_MHHI_INDICATOR</param>
        </member>
        <member name="T:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow">
            EcmpsWs.Dbo.View.VW_QA_AirEmissionTestingData
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.#ctor">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.#ctor(System.Data.DataRowView)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="sourceRow">The underlying DataRowView containing the data for the data row class.</param>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            This constructor is required because the class is used as a type argument for a generic.
            </summary>
            <param name="aetPk">AET_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="airEmissionTestId">AIR_EMISSION_TEST_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="qiLastName">QI_LAST_NAME</param>
            <param name="qiFirstName">QI_FIRST_NAME</param>
            <param name="qiMiddleInitial">QI_MIDDLE_INITIAL</param>
            <param name="aetbName">AETB_NAME</param>
            <param name="aetbPhoneNumber">AETB_PHONE_NUMBER</param>
            <param name="aetbEmail">AETB_EMAIL</param>
            <param name="examDate">EXAM_DATE</param>
            <param name="providerName">PROVIDER_NAME</param>
            <param name="providerEmail">PROVIDER_EMAIL</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.AetPk">
            AET_PK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.TsFk">
            TS_FK
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.AirEmissionTestId">
            AIR_EMISSION_TEST_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.TestSumId">
            TEST_SUM_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.QiLastName">
            QI_LAST_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.QiFirstName">
            QI_FIRST_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.QiMiddleInitial">
            QI_MIDDLE_INITIAL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.AetbName">
            AETB_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.AetbPhoneNumber">
            AETB_PHONE_NUMBER
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.AetbEmail">
            AETB_EMAIL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.ExamDate">
            EXAM_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.ProviderName">
            PROVIDER_NAME
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.ProviderEmail">
            PROVIDER_EMAIL
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.Userid">
            USERID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.AddDate">
            ADD_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.UpdateDate">
            UPDATE_DATE
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.SubmissionId">
            SUBMISSION_ID
        </member>
        <member name="P:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.Overflowcolumn">
            OverflowColumn
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.CreateBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.InitBaseTable(System.String)">
            <summary>
            Creates the base table for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the base table for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.InitSourceRow(System.String)">
            <summary>
            Creates a source row for the data parameter as an abstract override of the CheckDataRow method.
            </summary>
            <param name="tableName">The override name of the data table.</param>
            <returns>Returns the DataRowView for the data parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Data.EcmpsWs.Dbo.View.VwQaAiremissiontestingdataRow.Set(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Sets all column values of the data row.
            </summary>
            <param name="aetPk">AET_PK</param>
            <param name="tsFk">TS_FK</param>
            <param name="airEmissionTestId">AIR_EMISSION_TEST_ID</param>
            <param name="testSumId">TEST_SUM_ID</param>
            <param name="qiLastName">QI_LAST_NAME</param>
            <param name="qiFirstName">QI_FIRST_NAME</param>
            <param name="qiMiddleInitial">QI_MIDDLE_INITIAL</param>
            <param name="aetbName">AETB_NAME</param>
            <param name="aetbPhoneNumber">AETB_PHONE_NUMBER</param>
            <param name="aetbEmail">AETB_EMAIL</param>
            <param name="examDate">EXAM_DATE</param>
            <param name="providerName">PROVIDER_NAME</param>
            <param name="providerEmail">PROVIDER_EMAIL</param>
            <param name="userid">USERID</param>
            <param name="addDate">ADD_DATE</param>
            <param name="updateDate">UPDATE_DATE</param>
            <param name="submissionId">SUBMISSION_ID</param>
            <param name="overflowcolumn">OverflowColumn</param>
        </member>
        <member name="T:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters">
            Parameter class for the EmGeneration process
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.Process">
            The process object for the current evaluation process.  Set by the actual process during initialization.
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.Category">
            The current category object set at the beginning of the category's processing of checks and nulled at the end of the processing.
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.GenBeginDate">
            <summary>
            The first day the location reports emissions data during the current reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.GenBeginHour">
            <summary>
            The first hour during the first day that the location reports emissions data during the current reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.GenOsReportingRequirement">
            <summary>
            Indicates if the location belongs to an ozone-season program.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.GenReportingFrequency">
            <summary>
            The reporting frequency code for the location during the current reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.LocationProgramRecords">
             <summary>
             Program records which apply to the monitoring location.
            
            For a unit, this is the Unit Program records for the unit.
            
            For a stack or pipe, this is the Unit Program records for all units linked to the stack or pipe via Unit Stack Configuration records.  The  UnitMonitorCertStartDate for the location program record should be the later of the UnitMonitorCertStartDate in the Unit Program record and the StartDate in the Unit Stack Configuration record.  The  EndDate for the location program record should be the earlier of the EndDate in the Unit Program record and the EndDate in the Unit Stack Configuration record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.LocationReportingFrequencyRecords">
             <summary>
             Unit Program Reporting Frequency records which apply to the monitoring location.
            
            For a unit, this is the Unit Reporting Frequency records for the unit.
            
            For a stack or pipe, this is the Unit Reporting Frequency records for all units linked to the stack or pipe via Unit Stack Configuration records.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.MpMethodRecords">
             <summary>
             Records for Methods for all locations in the monitoring configuration
            
            This parameter was originally used in Emissions but will also now be used in Monitoring Plan checks.  For Monitoring Plan checks it will include all the methods in the Monitoring Plan being evaluated.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.OperatingSuppDataRecordsByLocation">
            <summary>
            Operating Supp Data Records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.ProgramCodeTable">
            <summary>
            Contains the program code information needed to produce program list for checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.ProgramIsOzoneSeasonList">
            <summary>
            Contains a list of ozone season program codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.UnitStackConfigurationRecords">
            <summary>
            The Unit Stack Configuration records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise returning null.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <returns>Returns the requested check parameter as an object if it exists, and as a null if it does not.</returns>
        </member>
        <member name="M:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise does nothing.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <param name="parameterValue">The value to which to set the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.Init(ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Initializes the values in the check parameter object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.EmGeneration.Parameters.EmGenerationParameters.RegisterParameters">
            <summary>
            Registers each check parameter.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.EmImport.Parameters.EmImportParameters">
            Parameter class for the EmImport process
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.Process">
            The process object for the current evaluation process.  Set by the actual process during initialization.
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.Category">
            The current category object set at the beginning of the category's processing of checks and nulled at the end of the processing.
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.ComponentRecords">
            <summary>
            Component Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.CurrentWorkspaceDailyTestSummary">
            <summary>
            The current Daily Test Summary record in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.CurrentWorkspaceWeeklyTestSummary">
            <summary>
            The current WeeklyTest Summary record in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.FormulaRecords">
            <summary>
            Formula records with formula info included
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.InvalidImportLocation">
            <summary>
            An invalid UnitID StackPipeID combination
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.InvalidLtffSystems">
            <summary>
            A list of SystemIDs in the workspace LTFF table that are not valid LTFF systems.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.MissingEmComponents">
            <summary>
            A list of ComponentIDs in the workspace that are not present in the production database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.MissingEmFormulas">
            <summary>
            A list of FormulaIDs in the workspace that are not present in the production database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.MissingEmSystems">
            <summary>
            A list of SystemIDs in the workspace that are not present in the production database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.MonitorSystemRecords">
            <summary>
            System Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceComponentRecords">
            <summary>
            The component records and associated data in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceDailyCalibrationRecords">
            <summary>
            All Daily Calibration records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceDateRecords">
            <summary>
            The min and max date values from the workspace DailyEmission, DailyTestSummary, and HourlyOperating tables
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceEmLocationRecords">
            <summary>
            All UnitIDs and StackPipeIDs in the emissions file
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceFormulaRecords">
            <summary>
            Formula records in the workspace tables
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceLocationRecords">
            <summary>
            Location records in the workspace tables
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceLongTermFuelFlowRecords">
            <summary>
            The Long Term Fuel Flow Records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceSystemRecords">
            <summary>
            All system identifiers in workspace TestSummary and QACertEvent tables or Emissions tables
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceUnitRecords">
            <summary>
            The records in the Unit table in the Workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.EmImport.Parameters.EmImportParameters.WorkspaceWeeklySystemIntegrityRecords">
            <summary>
            All Weekly System Integrity records in the workspace.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.EmImport.Parameters.EmImportParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise returning null.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <returns>Returns the requested check parameter as an object if it exists, and as a null if it does not.</returns>
        </member>
        <member name="M:ECMPS.Checks.EmImport.Parameters.EmImportParameters.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise does nothing.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <param name="parameterValue">The value to which to set the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.EmImport.Parameters.EmImportParameters.Init(ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Initializes the values in the check parameter object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.EmImport.Parameters.EmImportParameters.RegisterParameters">
            <summary>
            Registers each check parameter.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Em.Parameters.EmParameters">
            Parameter class for the Em process
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Process">
            The process object for the current evaluation process.  Set by the actual process during initialization.
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Category">
            The current category object set at the beginning of the category's processing of checks and nulled at the end of the processing.
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AbortHourlyChecks">
            <summary>
            Normally false, this boolean variable is set to true if the hourly checks process needs to be aborted, e.g. monitoring plan is not active during the current period
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AccuracyMissingOpDataInfo">
            <summary>
            Contains the year/qtr information when Missing Op data is the result for Accuracy Status.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AccuracyTestRecordsByLocationForQaStatus">
             <summary>
             All accuracy test summary records for the location.  Used by the QA Status evaluation.
            
            FFACC or FFACCTT tests.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AllRequiredHeatInputCalculationElements">
            <summary>
            Indicates whether or not all values are available for performing the current Heat Input Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AlternateInvalidLinearityRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Invalid Prior linearity test for the alternate range.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AlternateInvalidRataRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Invalid Prior RATA test for the alternate system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AlternateLinearityRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior linearity test for the alternate range.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AlternateRataRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior RATA test for the alternate system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnalyzerRangeRecordsByComponent">
            <summary>
            Contains the analyzer range records for a monitoring plan, filter to a particular component id.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnalyzerRangeRecordsByHourLocation">
             <summary>
             The Analyzer Range Records By Hour and Location
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualBco2CalculatedValue">
            <summary>
            The recalculate YTD value for BCO2.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualCo2mCalculatedValue">
            <summary>
            The recalculated year-to-date value for CO2 Mass.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualHitCalculatedValue">
            <summary>
            The recalculated year-to-date value for total heat input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualNoxmCalculatedValue">
            <summary>
            The recalculated year-to-date value for NOx Mass.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualNoxrCalculatedValue">
            <summary>
            The recalculated year-to-date value for NOx Rate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualOphoursCalculatedValue">
            <summary>
            The recalculated year-to-date value for total operating hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualOptimeCalculatedValue">
            <summary>
            The recalculated year-to-date value for total operating time.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualReportingRequirement">
            <summary>
            Indicates if the units in the configuration report annually (as opposed to the ozone season only).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AnnualSo2MassCalculatedValue">
            <summary>
            The recalculated year-to-date value for SO2 Mass.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppECalcHi">
            <summary>
            Heat Input value calculated using Appendix D, wheter from a gas source or oil source
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppECalcSegmentNum">
            <summary>
            Indicates which segment number should have been reported in the NOx Rate record for the current fuel source
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppECalculatedNoxRateForSource">
            <summary>
            The calculated value for NOx Rate  from a single Fuel Flow Record using the specified formula
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppEChecksNeeded">
            <summary>
            Indicates if Appendix E NOx emissions rate needs to be calculated for unit with apportioned heat input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppEConstantFuelMix">
            <summary>
            Indicates whether the constant fuel mix method of reporting is in effect for an Appendix E Site
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppECorrelationHeatInputArray">
            <summary>
            Contains the four values for heat input from the most recent Appendix E Correlation tests. This array contains four decimal values
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppECorrelationNoxRateArray">
            <summary>
            Contains the four values for NOx Rate from the most recent Appendix E Correlation tests. This array contains four decimal values
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppEFuelCode">
            <summary>
            FuelCode associated with the DHV or HPFF record for NOX rate
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppendixDMethodActive">
            <summary>
            Indicates whether an active Appendix D Method for either Heat Input, SO2, or CO2 is active during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppendixEMissingOpDataInfo">
            <summary>
            Contains the year/qtr information when Missing Op data is the result for Appendix E Status.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppendixEStatusRequired">
            <summary>
            Indicates if a record requires the Appendix E Status Evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppendixETestRecordsByLocationForQaStatus">
            <summary>
            All appendix E test summary records for the location.  Used by the QA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppENoxeSystemId">
            <summary>
            NOXE Monitoring System ID reported in the NOXR DHV or HPFF record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppENoxeSystemIdentifier">
            <summary>
            The MonitoringSystemID of the NOXE system reported in the NOXR DHV or HPFF record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppENoxMer">
            <summary>
            The NOx maximum emission rate for the fuel in the NOXR DHV or HPFF record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppENoxrMonSysIsValid">
            <summary>
            Indicates whether the Monitoring System reported in the gas fuel source HourlyParamFuelFlow record for Appendix E NOX Rate is valid
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppEOpCode">
            <summary>
            OperatingConditionCode reported in the DHV or HPFF record for NOX rate
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppEReportedValue">
            <summary>
            AdjustedHourlyValue reported in the DHV or HPFF record for NOX rate
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppEReportingMethod">
            <summary>
            Indicates whether the methodology for determining NOXR under Appendix E is from a single fuel source, multiple fuel sources, or a constant mix
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppESegmentNumber">
            <summary>
            SegmentNumber value reported in the DHV or HPFF record for NOX rate
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.AppESegmentTotal">
            <summary>
            The total number of segments in the relevant Appendix E Correlation Test used for evaluating Appendix E NOx rate
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ApplicableComponentId">
            <summary>
            The Component ID that will be evaluated during the Linearity and Daily Calibration QA Status evaluations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ApplicableSystemIdList">
            <summary>
            The comma delimited list of System IDs being evaluated in the RATA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ApplicableSystemIds">
            <summary>
            The System IDs that will be evaluated during the Linearity QA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Bco2QuarterlyReportedValue">
            <summary>
            The CurrentReportingPeriodTotal in the BCO2 Summary Value record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalcCo2Unadj">
            <summary>
            The unadjusted CO2 mass emissions that was recalculated by the software.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalcFuelCarbonBurned">
            <summary>
            The amount of carbon burned during the day for the fuel as recalculated by the software.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalcTde">
            <summary>
            The total daily emissions for CO2M determined by FSA as recalculated by the software.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalcTotalCarbonBurned">
            <summary>
            The amount of carbon burned during the day for the location as recalculated by the software.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculateApportionedHi">
            <summary>
            Indicates if the apportioned or summed HI can be recalculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculateCo2mTde">
            <summary>
            Indicates if CO2M TDE should be calculated.  Used for levelling.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedCsLoadRange">
            <summary>
            Contains the Common Stack Load Range calculated using the hourly load and the active maximum load.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedDiluentForCo2">
             <summary>
             The diluent value used in the recalculation of CO2.
            
            Field to be updated: Current DHV Record.CalcPctDiluent
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedDiluentForCo2c">
             <summary>
             The diluent value used in the recalculation of CO2C.
            
            Field to be updated: Current DHV Record.CalcPctDiluent
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedDiluentForHi">
             <summary>
             The diluent value used in the recalculation of HI.
            
            Field to be updated: Current DHV Record.CalcPctDiluent
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedDiluentForNoxr">
             <summary>
             The diluent value used in the recalculation of NOXR.
            
            Field to be updated: Current DHV Record.CalcPctDiluent
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedFlowWeightedHcl">
            <summary>
            Used as the result of the MS-1 calculation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedFlowWeightedHf">
            <summary>
            Used as the result of the MS-1 calculation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedFlowWeightedHg">
            <summary>
            Used as the result of the MS-1 calculation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedFlowWeightedSo2">
            <summary>
            Used as the result of the MS-1 calculation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedLoadRange">
            <summary>
            Contains the Load Range calculated using the hourly load and the active maximum load.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedMatsMsLoad">
            <summary>
            Contains the MATS MS Load calculated and used to check the reported value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedMoistureForCo2">
             <summary>
             The moisture value used in the recalculation of CO2.
            
            Field to be updated: Current DHV Record.CalcPctMoisture
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedMoistureForCo2c">
             <summary>
             The moisture value used in the recalculation of CO2C.
            
            Field to be updated: Current DHV Record.CalcPctMoisture
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedMoistureForHi">
             <summary>
             The moisture value used in the recalculation of HI.
            
            Field to be updated: Current DHV Record.CalcPctMoisture
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedMoistureForNox">
             <summary>
             The moisture value used in the recalculation of NOX.
            
            Field to be updated: Current DHV Record.CalcPctMoisture
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedMoistureForNoxr">
             <summary>
             The moisture value used in the recalculation of NOXR.
            
            Field to be updated: Current DHV Record.CalcPctMoisture
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedMoistureForSo2">
             <summary>
             The moisture value used in the recalculation of SO2.
            
            Field to be updated: Current DHV Record.CalcPctMoisture
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedSystemIntegrityApsIndicator">
             <summary>
             Contains the calculated System Integrity APS indicator.
            
            Used in the emission report evaluation, and also used to store calculated values.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedSystemIntegrityError">
             <summary>
             Contains the calculate System Integrity Error.
            
            Used in emission report evaluation and in the saving of calculated values.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedUnadjustedValue">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            The calculated adjusted value resulting from the use of an equation.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculatedWeeklyTestSummaryResult">
             <summary>
             Contains the calculated Test Result Code for the Weekly Test Summary table.
            
            The value is initialized to null and updated by subsequent checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculateNoxmFromApportionedHi">
            <summary>
            Indicates if NOx Mass should be calculated from apportioned (or summed) heat input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationConcentration">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            The concentration to use in an equation.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationConcentrationSubstituted">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            Indicates whether the concentration to use in an equation was substituted.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationConversionFactor">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            The conversion factor (K) to use in an equation.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationDiluent">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            The diluent to use in an equation.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationDiluentSubstituted">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            Indicates whether the concentration to use in an equation was substituted.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationFlow">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            The flow to use in an equation.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationFlowSubstituted">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            Indicates whether the flow to use in an equation was substituted.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationMoisture">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            The moisture to use in an equation.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CalculationMoistureSubstituted">
             <summary>
             Primarily used within the calculation category of the Emission Report Evaluation.
            
            Indicates whether the concentration to use in an equation was substituted.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CheckCsLoadRangeValue">
            <summary>
            Indicates that Common Stack Load Range value checking should occur.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CheckForIgnoredFlowRata">
            <summary>
            Dummy parameter used by the Hourly QA Status checks to cause the Ignored test checks to fire last.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CheckForIgnoredLinearity">
            <summary>
            Dummy parameter used by the Hourly QA Status checks to cause the Ignored test checks to fire last.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CheckLoadRangeValue">
            <summary>
            Indicates that Load Range value checking should occur.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2AppDAccumulator">
            <summary>
            This variable sums the Appendix D CO2 Mass calculations from all fuel sources
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2AppDMethodActiveForHour">
            <summary>
            Indicates whether the active method at the current location for CO2 is Appendix D
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2CalculatedAdjustedValue">
             <summary>
             Resulting value when the CO2 Mass Rate is calculated.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2cDerivedHourlyRecordsByHourLocation">
             <summary>
             The CO2 Concentration Derived Hourly Records By Hour and Location
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2cDerivedHourlyStatus">
            <summary>
            Flag to indicate whether all CO2 Conc Derived Hourly checks passed or failed
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2cDhvCalculatedAdjustedValue">
             <summary>
             Resulting value when the CO2 Concentration is calculated from O2.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2CemMethodActiveForHour">
            <summary>
            Indicates whether there is a CO2 Mass Method for the current hour identifed as a CEMs Method
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2cHasMeasuredDhvModc">
            <summary>
            Indicates whether an CO2C DHV record has a measured MODC.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2cMhvCalculatedAdjustedValue">
             <summary>
             Contains the CO2 Concentration value to be used by subsequent calculations if CO2 Conc is reported in a MonitorHourlyValueData record (could be either the Unadjusted Value or the Adjusted Value, depending on MODC)
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2cMhvModc">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MHV CO2C MODC value used in calcultion checks to determine whether CO2C was substituted and is set in the CO2C section of HOURMHV-8.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2cMonitorHourlyRecordsByHourLocation">
             <summary>
             The CO2 Concentration Monitor Hourly Records By Hour and Location
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2ConcCemEquationCode">
            <summary>
            A code that references an equation in MonitoringFormulaData that will be used for calculations for the current record (specific to Parameter CO2)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2ConcChecksNeededForCo2MassCalc">
            <summary>
            Indicates the need to perform CO2 concentration checks in suppor of CO2 Mass Calculations
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2ConcChecksNeededForHeatInput">
            <summary>
            Indicates whether the CO2 Concentration Checks must be run in support of the current Heat Input Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2ConcDerivedChecksNeeded">
            <summary>
            Flag to indicate whether or not it is necessary to perform SO2 Derived Hourly checks at this location for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2ConcDerivedHourlyCount">
            <summary>
            The number of CO2 Concentration DerivedHourlyValueData records reported during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2ConcMonitorChecksNeeded">
            <summary>
            Flag to indicate whether or not it is necessary to perform CO2 Conc Monitor Hourly checks at this location for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2ConcMonitorHourlyCount">
            <summary>
            The number of CO2 Concentration MonitorHourlyValueData records reported during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2cSdCalculatedAdjustedValue">
             <summary>
             The CO2 concentration used in CO2 Mass and/or Heat Input calculations for the current location during the current hour
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2DerivedHourlyRecordsByHourLocation">
             <summary>
             The CO2 and CO2M Derived Hourly Records By Hour and Location
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2DerivedHourlyStatus">
            <summary>
            indicates whether or not the CO2 Derived Hourly Value checks were all run successfully
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2DiluentChecksNeededForNoxRateCalc">
            <summary>
            Indicates whether or not CO2 Diluent Checks must be run in support of the NOx Rate Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2DiluentNeededForMats">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether CO2 Diluent values are needed to support the reporting of MATS parameters.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2DiluentNeededForMatsCalculation">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether CO2 Diluent values are needed to support the calculation of MATS parameters.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2FuelSpecificMissingData">
            <summary>
            Indicates if active CO2 Monitor Method entries for the current configuration during the current hour uses fuel-specific missing data approach
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2HpffExists">
             <summary>
             Indicates whether an CO2 HPFF record exists for the current hour.
            
            This parameter is initialized to false in HOUROP-3 and set to true in HOURAD-37.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2MassCemEquationCode">
            <summary>
            A code that references an equation in MonitoringFormulaData that will be used for calculations for the current record (specific to Parameter CO2)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2MassDerivedChecksNeeded">
            <summary>
            Indicates whether or not the CO2 Mass Rate Derived Hourly Value Checks must be run for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2MassDerivedHourlyCount">
            <summary>
            The number of records returned in the CO2 Mass record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2mCalculatedAdjustedValue">
             <summary>
             Resulting value when the CO2 Mass is calculated for LME
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2mDailyEmissionRecordsForDayLocation">
            <summary>
            Daily Emission Records for Day and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2mDerivedChecksNeeded">
            <summary>
            Indicates whether or not the CO2M Derived Hourly Value Checks must be run for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2mDerivedHourlyStatus">
            <summary>
            indicates whether or not the CO2M Derived Hourly Value checks were all run successfully
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2MethodCode">
            <summary>
            Method Code of active CO2 Monitor Method entries for the current configuration during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2MonitorMethodRecordsByHourLocation">
            <summary>
            The CO2 Monitor Method Records By Hour Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2MonitorSpanRecordsByHourLocation">
            <summary>
            CO2 Monitor Span Records By Hour and Location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2nMonitorDefaultRecordsForNfsByHourLocation">
            <summary>
            CO2N Monitor Default Records for NFS fuel By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2RataRequired">
            <summary>
            Indicates if a CO2 RATA is required.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Co2StartQuarter">
            <summary>
            The first quarter in the current year of the reporting period when CO2 method was active for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CompleteMhvRecordNeeded">
            <summary>
            Indicates if Missing Data MODCs are allowed in the MHV record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ComponentOperatingSuppDataDictionaryArray">
            <summary>
            Constains the system operating supplemental data for system and reporting period combinations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ComponentOperatingSuppDataRecordsForMpAndYear">
            <summary>
            The Component Operating Supplemental Data records for the current location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ComponentRecordForAudit">
            <summary>
            The component record currently being audited.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ComponentRecordsByLocation">
            <summary>
            Component Records By Location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ConfigHeatinputAccumulator">
            <summary>
            Contains the sum of recalculated heat input rate for all monitored locations in the monitoring plan during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ConfigHeatinputtimesoptimeAccumulator">
            <summary>
            Contains the sum of recalculated total heat input for all monitored locations in the monitoring plan during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ConfigNoxratetimesheatinputAccumulator">
            <summary>
            Contains the sum of recalculated NOx Rate times heat input for all monitored locations in the monitoring plan during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ConfigNoxratetimesoptimeAccumulator">
            <summary>
            The sum of the NOx emission rate times operating time at all multiple stacks wher the NOx emission rate is measured.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ConfigOptimeAccumulator">
            <summary>
            The total operating time at all multiple stacks where the NOx emission rate is determined.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ConfigurationChangeOccuredDurringQuarter">
            <summary>
            Indicates whether a configuration change occured for the current emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ConfigurationEmissionsFile">
            <summary>
            All quarterly emissions file record for any location in the configuration whose emissions file is being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CpFuelCount">
            <summary>
            The number of fuels combusted at the common pipes in the configuration for the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CrosscheckTesttypetorequiredtestcode">
            <summary>
            This parameter contains the Test Type to Required Test Code cross check table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentAccuracyStatus">
            <summary>
            Stores the current accuracy test status as part of the Appendix D status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentAnalyzerRangeUsed">
            <summary>
            Indicates what Analyzer Range is being used for a given Monitor Hourly record.  Used by the Linearity Status and Daily Calibration Status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentAppendixDStatus">
             <summary>
             Stores the current appendix d status throughout the Appendix D Status checks.
            
            Stored in Calc_APPE_Status in HFF record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentAppendixEStatus">
             <summary>
             Stores the current appendix e status throughout the Appendix E Status checks.
            
            Stored in Calc_APPE_Status in DHV or HPFF record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentAppENoxrRecord">
            <summary>
            The HourlyParamFuelFlow record identifier for checks that are common to both gas and oil fuel sources
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentBco2SummaryValueRecord">
            <summary>
            The Summary Value record with Parameter Code BCO2.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentCo2cDhvHbhaValue">
            <summary>
            The average value of the previous and subsequent measured hour before and measured hour after for CO2C in the DHV records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentCo2ConcDerivedHourlyRecord">
            <summary>
            The Derived Hourly Value Record associated with CO2 Mass for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentCo2ConcMissingDataMonitorHourlyRecord">
            <summary>
            Refers to the MonitorHourlyValueData record associated with CO2 Concentration for missing data when there are two CO2C MHV records for the current hour 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentCo2ConcMonitorHourlyRecord">
            <summary>
            Refers to the MonitorHourlyValueData record associated with CO2 Concentration for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentCo2MassDailyRecord">
            <summary>
            The Daily Emission Data record associated with CO2 Mass for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentCo2SummaryValueRecord">
            <summary>
            The CO2M record from SummaryValueData for this location for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDailyCalibrationTest">
            <summary>
            The Daily Test Summary and Daily Calibration record for the daily calibration test being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDailyCalStatus">
            <summary>
            Stores the current daily calibration status throughout the Daily Calibration Status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDailyEmissionTest">
            <summary>
            The Daily Test Summary record for the test being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDailyFuelRecord">
            <summary>
            The DailyFuel record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDateHour">
            <summary>
            The current operating date and hour combined.    
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDensityRecord">
            <summary>
            The current HPFF DENSOIL record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvCalculatedAdjustedValue">
            <summary>
            The calculated adjusted value for NOXR based on MODC Code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvDefaultParameter">
            <summary>
            The ParameterCode in the default table for the missing data maximum or minimum default value (as applicable)  associated with the current DHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvFormulaRecord">
            <summary>
            The Monitor Formula record for the FormulaID in the DHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvFuelSpecificHour">
            <summary>
            Indicates if the current DHV being evaluated uses fuel specific missing data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvHbhaValue">
            <summary>
            The average value of the previous and subsequent measured hour before and measured hour after.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvMaxMinValue">
            <summary>
            The maximum or minimum value (as applicable) from the span or default table for the parameter for the current DHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvMethod">
            <summary>
            The monitoring methodology used to determine the emissions or heat input value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvMissingDataFuel">
            <summary>
            The FuelCode in the default record which contains the maximum or minimum value of the parameter in the DHV record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvMonSysRecord">
            <summary>
            The Monitor System record for the MonitoringSystemID in the DHV record being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvMultipleFuelEquationCode">
            <summary>
            The equation code to calculate emissions or heat input from multiple fuels for AD or AE.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvParameter">
            <summary>
            Identifies the parameter and moisture basis of the current DHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvRecord">
            <summary>
            The current DHV record being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvRecordValid">
            <summary>
            Indicates if the value in the DHV record can be recalculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentDhvSystemType">
            <summary>
            The valid SystemTypeCode associated with the current DHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentEmissionComment">
            <summary>
            Collection of Data Elements for the EmissionComment being evaluated and contained in the Hourly Submission Comment table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentEntityType">
            <summary>
            Stack, Pipe, or Unit
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentFlowMonitorHourlyRecord">
            <summary>
            The Stack Flow record being evaluated for the Current Date and Current Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentFlowToLoadStatusCheck">
            <summary>
            The current flow-to-load check for the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentFuelFlowRecord">
            <summary>
            The current HourlyFuelFlowData record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentFuelGroup">
            <summary>
            The Fuel Group of the Fuel Flow record being evaluated (OIL or GAS)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentGcvRecord">
            <summary>
            The current HPFF GCV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentH2oDerivedHourlyRecord">
            <summary>
            The record in DerivedHourlyValueData with parameter "H2O" currently being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentH2oDhvHbhaValue">
            <summary>
            The average value of the previous and subsequent measured hour before and measured hour after for H2O in the DHV records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentH2oMonitorHourlyRecord">
            <summary>
            The record in MonitorHourlyValueData with parameter "H2O" currently being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentHeatInputDerivedHourlyRecord">
            <summary>
            The DerivedHourlyValue record reported for HI or HIT for the current location during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentHiApportionmentRecord">
            <summary>
            The DerivedHourlyValue record reported for the current location during the current hour used to report apportioned or summed heat input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentHiEntityType">
            <summary>
            Identifies the location type of the location in the MP configuration for which HI is being apportioned or summed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentHiSummaryValueRecord">
            <summary>
            The HIT record from SummaryValueData for this location for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentHourlyH2oTableReference">
            <summary>
            Defines whether H2O Inclusive Checks should work with the MonitorHourlyValueData table or the DerivedHourlyValueData table
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentHourlyOpRecord">
            <summary>
            The OperatingTime field in the HourlyOperatingData table for the Current Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentHourlyRecordForRataStatus">
            <summary>
            The current hourly record (MHV or DHV) record to be used for the RATA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentLinearityStatus">
             <summary>
             Stores the current linearity status throughout the Linearity Status checks.
            
            Stored in Calc_Line_Status in MHV record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentLmeHourlyOpRecord">
            <summary>
            The current record being evaluated in the HourlyOperatingData table for the LME unit.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentLocationCount">
            <summary>
            The number of locations associated with the current monitoring plan
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentLtffRecord">
            <summary>
            The current long term fuel flow record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMaximumLoadValue">
            <summary>
            Constains the Maximum Load Value for the current hour and locations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMeasureCode">
            <summary>
            The Data and Maps hourly measure code for the derived value being calculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvCalculatedAdjustedValue">
            <summary>
            The calculated adjusted value for SO2C, NOXC, and FLOW based on MODC Code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvComponentType">
            <summary>
            The valid ComponentTypeCode associated with the current MHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvDefaultParameter">
            <summary>
            The ParameterCode in the default table for the missing data maximum or minimum default value (as applicable)  associated with the current MHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvDuplicate">
            <summary>
            Contains information about duplicate MHV records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvExtraneousFields">
            <summary>
            Contains the delimited list of fields that should be empty but contain reported values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvFuelSpecificHour">
            <summary>
            Indicates if the current MHV being evaluated uses fuel specific missing data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvHbhaValue">
            <summary>
            The average value of the previous and subsequent hour before and hour after.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvMaxMinValue">
            <summary>
            The maximum or minimum value (as applicable) from the span or default table for the parameter for the current MHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvMissing">
            <summary>
            Contains information about missing MHV records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvMissingDataFuel">
            <summary>
            The FuelCode in the default record which contains the maximum or minimum value of the parameter in the MHV record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvMonSysRecord">
            <summary>
            The Monitor System record for the MonitoringSystemID in the MHV record being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvParameter">
            <summary>
            Identifies the parameter and moisture basis of the current MHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvParameterDescription">
            <summary>
            Identifies the parameter and moisture basis of the current MHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvParameterStatus">
            <summary>
            Inidicates whether the parameter value reported with a record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvRecord">
            <summary>
            The current MHV record being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvSpanDescription">
            <summary>
            The component type and scale of the span record which contains the maximum value of the parameter in the MHV record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMhvSystemType">
            <summary>
            The valid SystemTypeCode associated with the current MHV record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMonitoringPlanRecord">
            <summary>
            The MonitoringPlan record for which hourly data is currently being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMonitorLocationId">
             <summary>
             The current MON_LOC_ID for the process.
            
            Used in emission report as set by the main processing loop.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMonitorPlanLocationPostion">
            <summary>
            The position of the current Monitor Plan Location record in the list of locations for a monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMonitorPlanLocationRecord">
            <summary>
            The current location in the current monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentMonth">
            <summary>
            The month of the BeginDate in the Hourly Op Data record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxApportionmentBasedRecord">
            <summary>
            The DerivedHourlyValue record associated with NOx Mass for the current location during the current date and hour when NOX Mass is calculated from apportioned or summed heat input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxConcMonitorHourlyRecord">
            <summary>
            The current NOx Concentration record from MonitorHourlyValueData for this location at the Current Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxcSystemBaf">
             <summary>
             the Bias Adjustment Factor associated with the NOx Concentration Monitoring System in use during the current hour
            
            Field to be updated: Current MHV Record.ApplicableBiasAdjustmentFactor
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxMassDerivedHourlyRecord">
            <summary>
            The DerivedHourlyValue record with parameter NOX or NOXM for the current location during the current date and hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxMassMonitorMethodRecord">
            <summary>
            The active Monitor Method record for the Current Facility/Unit during the current date and hour for NOx Mass calculations
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxMassSummaryValueRecord">
            <summary>
            The NOXM record from SummaryValueData for this location for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxRateSummaryValueRecord">
            <summary>
            The NOXR record from SummaryValueData for this location for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxrDerivedHourlyRecord">
            <summary>
            the DerivedHourlyValueData record currently being evaluated with parameter NOXR
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxrHbhaValue">
            <summary>
            The average value of the  NOx emission rate during the previous and subsequent measured hour before and measured hour after.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxrMethodCode">
            <summary>
            Stores the Method Code for the MonitoringMethod record that is active for NOx Emission Rate during the current time period
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxrPrimaryOrPrimaryBypassMhvMaxValueDescription">
            <summary>
            Used for HOURMHV-30 result pluging and indicates the problem max value source.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxrPrimaryOrPrimaryBypassMhvRecord">
             <summary>
             Stores data for MHV records that contain MODC 47 or 48.  The data supports columns used in the Current MHV Record check parameter, but adds additional infomration to support check processing.
            
            MODC 47 and 48 are used with combined-cycle turbines with primary and primary bypass stacks reported as systems in a single stack.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxSystemBaf">
             <summary>
             The Bias Adjustment Factor from the most recent valid RATA test for the NOx Emission Rate System
            
            Field to be updated: Current DHV Record.ApplicableBiasAdjustmentFactor
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentNoxSystemStatus">
            <summary>
            Indicates whether or not the NOX system in the current NOXR DerivedHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentO2DryMissingDataMonitorHourlyRecord">
            <summary>
            The record in MonitorHourlyValueData with parameter "O2C" and Moisture Basis of "D" or null with a missing data MODC when there is also a measured data record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentO2DryMonitorHourlyRecord">
            <summary>
            The record in MonitorHourlyValueData with parameter "O2" and Moisture Basis of "D" currently being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentO2WetMissingDataMonitorHourlyRecord">
            <summary>
            The record in MonitorHourlyValueData with parameter "O2C" and Moisture Basis of "W" or null with a missing data MODC when there is also a measured data record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentO2WetMonitorHourlyRecord">
            <summary>
            The record in MonitorHourlyValueData with parameter "O2" and Moisture Basis of "w" currently being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentOperatingDate">
            <summary>
            The current operating date.  This parameter is set by the process and not a check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentOperatingDatehour">
             <summary>
             The current operating date and hour.
            
            This parameter is set by the process and not a check.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentOperatingHour">
            <summary>
            The current operating hour.  This parameter is set by the process and not a check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentOperatingTime">
            <summary>
            The portion of the hour (in the range [0.0, 1.0] ) that the current location was operating during the hour currently being evaluated.  The value comes from the Operating Time of the Current Hourly Op Record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentOpHoursSummaryValueRecord">
            <summary>
            The OPHOURS record from SummaryValueData for this location for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentOpTimeSummaryValueRecord">
            <summary>
            The OPTIME record from SummaryValueData for this location for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentPeiStatus">
            <summary>
            Stores the current PEI test status as part of the Appendix D status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentRataStatus">
            <summary>
            Stores the current RATA status throughout the RATA Status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentReportingPeriod">
            <summary>
            The Current Reporting Period (or the reporting period for the first day) being evaluated for emissions.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentReportingPeriodBeginDate">
            <summary>
            A date value without a time component that indicates the first day of the current quarter
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentReportingPeriodBeginHour">
            <summary>
            A date/time value indicating the first hour of the current quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentReportingPeriodEndDate">
            <summary>
            A date value without a time component that indicates the last day of the current quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentReportingPeriodEndHour">
            <summary>
            A date/time value indicating the last hour of the current quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentReportingPeriodObject">
            <summary>
            The object representing the current reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentReportingPeriodQuarter">
             <summary>
             The quarter of the Current Reporting Period (or the reporting period for the first day) being evaluated for emissions.
            
            Set from Category.CheckEngine.RptPeriodBeganQuarter
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentReportingPeriodYear">
            <summary>
            The year of the Current Reporting Period (or the reporting period for the first day) being evaluated for emissions.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentSo2HpffRecord">
            <summary>
            The current HourlyParamFuelFlow record for SO2 for the current fuel flow system in the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentSo2MonitorHourlyRecord">
            <summary>
            The current SO2 Concentration record from MonitorHourlyValueData for this location at the Current Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentSo2SummaryValueRecord">
            <summary>
            The SO2M record from SummaryValueData for this location for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentSo2SystemBaf">
             <summary>
             the Bias Adjustment Factor associated with the SO2 Monitoring System in use during the current hour
            
            Field to be updated: Current MHV Record.ApplicableBiasAdjustmentFactor
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentSulfurRecord">
            <summary>
            The current HourlyParamFuelFlow record for SULFUR for the current fuel flow system in the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentUnitCount">
            <summary>
            The number of units associated with the current monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentUnitIsArp">
            <summary>
            Indicates whether the current unit participates in the Acid Rain Program
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentUnitIsPeaking">
            <summary>
            Indicates whether the current unit is defined as a Peaking Unit
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentWeeklySystemIntegrityTest">
             <summary>
             Contains the current Weekly Integrity Test record.
            
            Used in emission report evaluation.
            
            Set in the processing loop from the "
            
            * WEEKLY_SYS_INTEGRITY_ID
            * WEEKLY_TEST_SUM_ID
            * ORIS_CODE
            * LOCATION_IDENTIFIER
            * TEST_DATETIME (combination of TEST_DATE, TEST_HOUR and TEST_MINUTE)
            * TEST_DATE
            * TEST_HOUR
            * TEST_MIN
            * REF_VALUE
            * MEASURED_VALUE
            * SYSTEM_INTEGRITY_ERROR
            * APS_IND
            * CALC_SYSTEM_INTEGRITY_ERROR
            * CALC_APS_IND
            * MON_LOC_ID
            * RPT_PERIOD_ID
            
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.CurrentWeeklyTestSummary">
             <summary>
             Contains the current Weekly Test Summary record.
            
            Used in emission report evaluation.
            
            Set in the processing loop from the "
            
            * WEEKLY_TEST_SUM_ID
            * ORIS_CODE
            * LOCATION_IDENTIFIER
            * TEST_TYPE_CD
            * SYSTEM_IDENTIFIER
            * SYSTEM_TYPE_CD
            * COMPONENT_IDENTIFIER
            * COMPONENT_TYPE_CD
            * TEST_DATETIME (combination of TEST_DATE, TEST_HOUR and TEST_MINUTE)
            * TEST_DATE
            * TEST_HOUR
            * TEST_MIN
            * GAS_LEVEL_CD
            * SPAN_SCALE_CD
            * TEST_RESULT_CD
            * CALC_TEST_RESULT_CD
            * MON_LOC_ID
            * RPT_PERIOD_ID
            * MON_SYS_ID
            * COMPONENT_ID
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalCalcOnlineInd">
             <summary>
             Indicates if the test was performed when the unit was operating.
            
            Field to be updated: Current Daily Calibration Test.CalcOnlineOfflineInd
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalCalcResult">
             <summary>
             The test result code of a daily calibration test as determined by the evaluation
            
            Field to be updated: Current Daily Calibration Test.CalcTestResultCd
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalComponentTypeValid">
            <summary>
            Indicates if the component tested in the daily calibration test has a valid component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalFailDate">
            <summary>
            The date of the earliest failed injection in a daily calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalFailHour">
            <summary>
            The hour of the earliest failed injection in a daily calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalibrationSuppDataExists">
            <summary>
            Indicates whether Daily Calibration Supp Data exists and was loaded for the previous quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalInjectionTimesValid">
            <summary>
            Indicates if all the injection times of a daily calibration test are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalPgvpRuleDate">
            <summary>
            The date that the PGVP rule was published.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalSpanScaleValid">
            <summary>
            Indicates if span scale of a test is a valid code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalSpanValue">
            <summary>
            The span value for the component type of the test according to the monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalStatusRequired">
            <summary>
            Indicates if an MHV record requires the Daily Calibration Status Evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalUpscaleGasLevelValid">
            <summary>
            Indicates that the upscale gas level code of a daily calibration test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalUpscaleInjectionCalcApsIndicator">
             <summary>
             The recalculated APS indicator for the upscale injection.
            
            Field to be updated: Current Daily Calibration Test.CalcUpscaleAPSInd
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalUpscaleInjectionCalcResult">
             <summary>
             The recalculated calibration error or difference for the upscale injection.
            
            Field to be updated: Current Daily Calibration Test.CalcUpscaleCalError
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalUpscaleInjectionTimeValid">
            <summary>
            Indicates if the upscale injection time of a daily calibration test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalZeroInjectionCalcApsIndicator">
             <summary>
             The recalculated APS indicator for the zero injection.
            
            Field to be updated: Current Daily Calibration Test.CalcZeroAPSInd
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyCalZeroInjectionCalcResult">
             <summary>
             The recalculated calibration error or difference for the zero injection.
            
            Field to be updated: Current Daily Calibration Test.CalcZeroCalError
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyIntNoPriorTestCheckIndicator">
            <summary>
            Dummy variable for leveling in the Daily Inteference Check Status category.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyIntStatusRequired">
            <summary>
            Indicator that a daily interference status check should be performed during the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyIntStatusResult">
            <summary>
            This contains the result to use for Daily Interference checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DailyOpTime">
            <summary>
            The total operating time for the day for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyAdjustedValueStatus">
            <summary>
            Indicates whether or not the AdjustedHourlyValue in the current DerivedHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyChecksNeeded">
            <summary>
            Indicates whether or not to check all Derived Hourly records for a given hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyDefaultStatus">
            <summary>
            Indicates whether the AdjustedHourlyValue in the DHV record for MODC 40 is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyEquationStatus">
            <summary>
            Indicates whether the current equation code is valid for the formula in the DHV record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyFormulaStatus">
            <summary>
            Indicates whether or not the FormulaID in the current DerivedHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyMissingDataStatus">
            <summary>
            Indicates whether or not the use of the Missing Data Status MODCs were appropriate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyModcStatus">
            <summary>
            Indicates whether or not the MODCCode in the current DerivedHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyNullStatus">
            <summary>
            Indicates whether or not extraneous fields in the current DerivedHourlyValueData record are null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyPmaStatus">
            <summary>
            Indicates whether or not the PercentAvailable in the current DerivedHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlySystemStatus">
            <summary>
            Indicates whether or not the MonitoringSystemID in the current DerivedHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyUnadjustedCalculationStatus">
            <summary>
            Indicates whether or not the UnadjustedHourlyValue in the current DerivedHourlyValueData record is consistent with the recalculated value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyUnadjustedValueStatus">
            <summary>
            Indicates whether or not the UnadjustedHourlyValue in the current DerivedHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DerivedHourlyValueRecords">
            <summary>
            The Derived Hourly Value Records for the reporting period for a monitoring configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DiluentForHeatInput">
            <summary>
            The CO2 or O2 Concentration value to be used in the Heat Input Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.DualRangeStatus">
            <summary>
            Indicates whther or not a component is a dual range analyzer.  Used in the Linearity Status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EarliestLocationReportDate">
             <summary>
             Stores the first possible date that the location is expected to report.
            
            This is used by the Hourly QA Status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmissionCommentRecords">
            <summary>
            Records for EmissionComments for monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmissionsFileRecords">
            <summary>
            All quarterly emissions file record for the configuration whose emissions files is being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmissionsToleranceDeviators">
            <summary>
            A list of parameters for which the quarterly reported values are different from the calculated value but within the tolerance.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmLocationProgramRecords">
             <summary>
             Program records which apply to the monitoring plan location.
            
            For a unit, this is the Unit Program records for the unit.
            
            For a stack or pipe, this is the Unit Program records for all units linked to the stack or pipe via Unit Stack Configuration records.  The  UnitMonitorCertStartDate for the location program record should be the later of the UnitMonitorCertStartDate in the Unit Program record and the StartDate in the Unit Stack Configuration record.  The  EndDate for the location program record should be the earlier of the EndDate in the Unit Program record and the EndDate in the Unit Stack Configuration record.  (This is the Emissions version of Location Program Records
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmTestCalcResult">
            <summary>
            The calculated result for the daily test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmTestDateValid">
            <summary>
            Indicates if the reported date of a daily emission test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmTestHourValid">
            <summary>
            Indicates if the reported hour of a daily emission test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmTestMinuteValid">
            <summary>
            Indicates if the reported minute of a daily emission test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EmUnitStackConfigurationRecords">
            <summary>
            Contains the UNIT_STACK_CONFIGURATION records for the locations associated with a specific emission report ( for both the MP and reporting period ).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EvaluateMultiLevelRata">
            <summary>
            Dummy parameter used to sort the checks for FLOW Rata Status
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EvaluateUpscaleInjection">
            <summary>
            Indicates if the upscale injection in the daily calibration test should be evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.EvaluateZeroInjection">
            <summary>
            Indicates if the zero injection in the daily calibration test should be evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ExpirationText">
            <summary>
            Text used in error message to indicate when tests expire.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ExpiredSystems">
            <summary>
            A list of systems or fuels with their most recent 3-level RATAs, Appendix E tests, or LME Unit Default tests expired at the end of the current reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ExpiringSystems">
            <summary>
            A list of systems or fuels with their most recent 3-level RATAs, Appendix E tests, or LME Unit Default tests expired at the end of the current reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F23DefaultMaxValue">
            <summary>
            A highest active SO2R F23 default for the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F23DefaultMinValue">
            <summary>
            A lowest active SO2R F23 default for the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F23DefaultValue">
            <summary>
            A default value to be used for SO2R in F23 calculations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F23MonitorDefaultRecordsByHourLocation">
            <summary>
            The SO2R F23 Monitor Default records by a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lCheckRecordsForQaStatus">
            <summary>
            Contains the Flow-to-Load Check rows associated with a particular monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lQaCertificationEventRecords">
            <summary>
            Contains QA Certification Event Records with an event code of '312', which is for flow-to-load.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusEarliestValidRequiredTest">
            <summary>
            Contains the earliest valid required test (RATA) for a flow-to-load check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusEventRequiresAbbreviatedCheck">
            <summary>
            Indicates that the most recent QA Cert Event row for Flow-to-Load requires a performing an Abbreviated Flow-to-Load
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusEventRequiresRata">
            <summary>
            Indicates that the most recent QA Cert Event row for Flow-to-Load requires a performing a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusInterveningRata">
            <summary>
            The data row contains the most recent RATA after a flow-to-load check and before the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusMissingOpDataInfo">
            <summary>
            Contains list of missing operating quarters needed to count conditional data hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusPriorTestRequiredQuarter">
            <summary>
            This parameter contains the most recent QA operating quarter before the 'current' hour.  The quarter is stored as null if the quarter is not set, -1 if an error occurred while setting the quarter, and the year multiplied by 4 plus the quarter minus 1 if the quarter was set.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusPriorTestRequiredQuarterMissingOpData">
            <summary>
            Contains a list of quarters that are missing 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusPriorTestRequiredQuarterSetFromSystem">
            <summary>
            This parameter indeicates whether the most recent QA operating quarter before the 'current' hour was determined using System Op Supp Data, not location-level Op Supp Data.  The value is null if the quarter was not set.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusQaCertEvent">
            <summary>
            Contains the most recent Flow-to-Load QA Cert Event row after a particular flow-to-load check and before the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusRequired">
            <summary>
            Indicates whether flow-to-load status checks must run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusResult">
            <summary>
            This contains the result to use for Flow-to-Load Status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusSystemCheckDictionary">
            <summary>
            In some cases the Flow-to-Load Status checks can determine the result for each hour once.  This dictionary will contain the system id if the checks have determined whether a single result applies to every hour.  If the lookup value is null then a single result does not apply to every hour, otherwise the lookup value is the flow-to-load check for every hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusSystemMissingOpDictionary">
            <summary>
            In some cases the Flow-to-Load Status checks can determine the missing op data for each hour once.  This dictionary will contain the system id if the checks have determined whether a single set of missing op data applies to every hour.  If the lookup value is null then a single set does not apply to every hour, otherwise the lookup value icontains the missing op data for every hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.F2lStatusSystemResultDictionary">
            <summary>
            In some cases the Flow-to-Load Status checks can determine the result for each hour once.  This dictionary will contain the system id if the checks have determined whether a single result applies to every hour.  If the lookup value is null then a single result does not apply to every hour, otherwise the lookup value is the result for every hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FacilityLocationRecords">
            <summary>
            The monitor location records for the facility of the records being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FacilityOperatingSuppDataRecords">
            <summary>
            Operating Supp Data Records for the facility
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FacilityUnitFuelRecords">
            <summary>
            List of all UNIT_FUEL records for the facility.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FcFactorMaximum">
            <summary>
            The maximum value allowed for an FC FACTOR
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FcFactorMinimum">
            <summary>
            The minimum value allowed for an FC FACTOR
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FcFactorNeeded">
            <summary>
            Indicates if an Fc Factor is needed in a NOXR, HI, or CO2C calculation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FdFactorMaximum">
            <summary>
            The maximum value allowed in the expected range for FD Factor
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FdFactorMinimum">
            <summary>
            The minimum value allowed in the expected range for FD Factor
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FdFactorNeeded">
            <summary>
            Indicates if an Fd Factor is needed in a NOXR, HI, or CO2C calculation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lAccuracyBeginYearQuarter">
            <summary>
            The first year/quarter to use for the FF2L extension checking for Accuracy status determination as part of the Appendix D status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lAccuracyCheckDate">
            <summary>
            The latest accuracy test end date, installation date, and PEI date for all components in the system for determining FF2L test eligibility for extending the accuracy test deadline.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lAccuracyEligible">
            <summary>
            Indicates of the fuel flow component record is eligible to extend the accuracy test expiration date using fuel flow to load tests.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lAccuracyEndYearQuarter">
            <summary>
            The last year/quarter to use for the FF2L extension checking for Accuracy status determination as part of the Appendix D status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lBaselineRecordsByLocationForQaStatus">
             <summary>
             All fuel flow to load baseline data (FF2LBAS) records for the location.  Used by the QA Status evaluation.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lPeiBeginYearQuarter">
            <summary>
            The first year/quarter to use for the FF2L extension checking for PEI status determination as part of the Appendix D status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lPeiCheckDate">
            <summary>
            The latest accuracy test end date, installation date, and PEI date for all components in the system for determining FF2L test eligibility for extending the PEI deadline.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lPeiEligible">
            <summary>
            Indicates of the fuel flow component record is eligible to extend the PEI test expiration date using fuel flow to load tests.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lPeiEndYearQuarter">
            <summary>
            The last year/quarter to use for the FF2L extension checking for PEI status determination as part of the Appendix D status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Ff2lTestRecordsByLocationForQaStatus">
             <summary>
             All fuel flow to load test records for the location.  Used by the QA Status evaluation.
            
            FF2LTST tests.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FFactorRangeCrossCheckTable">
            <summary>
            Cross Check table storing expected minimum and maximum values for F-Factors
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FinalConversionFactor">
            <summary>
            Contains the factor multiplied by the result of the MATS rate formula to produce the the actual RE or RH values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FirstDayOfOperation">
            <summary>
            The date of the first hourly operating data record for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FirstEcmpsReportingPeriodObject">
            <summary>
            Reporting Period object representing the ECMPS First Reporitng Period of a facility.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FirstHourOfOperation">
            <summary>
            The hour of the first hourly operating data record for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowAveragingComponentList">
            <summary>
            Contains a list of Monitor System Component records for the current flow MHV record, that did not report a Component Id because the source is using Flow Averaging with multiple components.  The list contains the components used in the averaging.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowAveragingComponentRecord">
            <summary>
            Contains the Monitor System Component record for one of two X-Pattern Flow monitoing systems  for the current flow MHV record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowCalculatedAdjustedValue">
             <summary>
             The value calculated for Stack Flow based on the Bias Adjustment Factor
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowMhvOptionallyAllowed">
             <summary>
             Indicates that a Flow MHV row is allowed, but not required.
            
            This parameter is initialized to false in the HourOp-3 and used in HourOp-43.  HourOp-43.  Initially, only MatsHod-1 resets the value of this parameter to true. 
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowMonitorHourlyChecksNeeded">
            <summary>
            flag to indicate whether or not checks for Stack Flow Monitored Hourly Data need to run
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowMonitorHourlyCount">
            <summary>
            the number of MonitorHourlyValueData records in the current hour that have the parameter_cd = "FLOW"
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowMonitorHourlyValueRecordsByHourLocation">
            <summary>
            The Flow Monitor Hourly Value Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowNeededForPart75">
            <summary>
            Flag to indicate whether or not Part 75 Flow checks are needed. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowRataExemption">
            <summary>
            Indicates that the Flow system has a special FLOWEXP RATA exemption.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FlowSystemIdArray">
             <summary>
             A array of flow systems that require 3-load RATA used during the reporting period for each location.
            
            Each array element represents a location in the current emission report and contains a comma delimited list of MON_SYS_ID.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FormattedCylinderIdList">
            <summary>
            Contains a comma delimited list of cylinder ids with the last id in a multiple id list separated by "AND".
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelCodeLookupTable">
            <summary>
            A lookup table of Fuel codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelFlowComponentRecordToCheck">
            <summary>
            A single Monitor System Component Record that is being evaluated for Appendix D status purposes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelRecordsByDateAndLocation">
            <summary>
            All active fuel records for a given location and day.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelRecordsByHourLocation">
            <summary>
            The Unit Fuel Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelsUsedList">
            <summary>
            A list of FuelCodes in the HFF record for each location and hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelTypeRealityChecksForDensityCrossCheckTable">
            <summary>
            Establishes minimum and maximum possible values for oil density by fuel type
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelTypeRealityChecksForFcFactorCrossCheckTable">
            <summary>
            Table defining minimum and maximum expected FC FACTOR values for different fuel types.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelTypeRealityChecksForGcvCrossCheckTable">
            <summary>
            Establishes minimum and maximum possible values for GCV by fuel type
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelTypeRealityChecksForSulfurContentCrossCheckTable">
            <summary>
            Minimum and Maximum allowed values for Sulfur Content by fuel type - critical error levels
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelTypeWarningLevelsForDensityCrossCheckTable">
            <summary>
            Establishes minimum and maximum Density values by fuel type - used for generating a non-critical error message
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelTypeWarningLevelsForGcvCrossCheckTable">
            <summary>
            Establishes minimum and maximum GCV values by fuel type - used for generating a non-critical error message
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FuelTypeWarningLevelsForSulfurContentCrossCheckTable">
            <summary>
            Minimum and Maximum expected values for Sulfur Content associated with a fuel type - warning levels
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FwFactorMaximum">
            <summary>
            The maximum value allowed for an FW FACTOR
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FwFactorMinimum">
            <summary>
            The minimum value allowed for an FW FACTOR
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.FwFactorNeeded">
            <summary>
            Indicates if an Fw Factor is needed in a NOXR calculation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.GasTypeCodeLookupTable">
            <summary>
            Lookup table of PGVP Gas Type Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.GenerateLme">
            <summary>
            Indicates if LME records should be generated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oCalculatedPercent">
            <summary>
            The calculated H2O Percentage based on an equation code and O2 Monitored Values
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oCalculationStatus">
            <summary>
            Indicates whether or not a valid H2O Calculation was performed based on the H2O CEM Equation code and Monitored O2 values.  Note - the calculation may not have matched the reported value -- this parameter simply indicates whether or not it was possible to perform the calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oCemEquationCode">
            <summary>
            A code that references an equation in MonitoringFormulaData that will be used for calculations for the current record (specific to Parameter H2O)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oDefaultMaxValue">
            <summary>
            A highest active H2O default for the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oDefaultMinValue">
            <summary>
            A lowest active H2O default for the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oDefaultValue">
            <summary>
            A default value to be used for %H2O in calculations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oDerivedHourlyChecksNeeded">
            <summary>
            Indicates whether or not Derived Hourly H20 checks are needed  to support the current calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oDerivedHourlyCount">
            <summary>
            the number of DerivedHourlyValueData records in the current hour that have the parameter_cd = "H2O"
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oDerivedHourlyStatus">
            <summary>
            Indicates whether or not all DHV checks have passed for the current H2O record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oDhvCalculatedAdjustedValue">
             <summary>
             Resulting value when the H2O is calculated from O2 or determined from moisture default values.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oDhvModc">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the DHV H2O MODC value used in calcultion checks to determine whether H2O was substituted and set in the H2O section of HOURDHV-13.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oFuelSpecificMissingData">
            <summary>
            Indicates if active H2O Monitor Method entries for the current configuration during the current hour uses fuel-specific missing data approach
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oHasMeasuredDhvModc">
            <summary>
            Indicates whether an H2O DHV record has a measured MODC.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oMethodCode">
            <summary>
            Defines the Method Code for the H2O Method that is active during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oMhvCalculatedAdjustedValue">
             <summary>
             The percentage of H2O used in subsequent calculations for the current location during the current hour
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oMhvModc">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MHV H2O MODC value used in calcultion checks to determine whether H2O was substituted and set in the H2O section of HOURMHV-8.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oMissingDataApproach">
            <summary>
            Indicates if the maximum or minimum H2O value is used for missing data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oMonitorHourlyChecksNeeded">
            <summary>
            Indicates whether or not Monitor Hourly H20 checks are needed  to support the current calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oMonitorHourlyCount">
            <summary>
            the number of MonitorHourlyValueData records in the current hour that have the parameter_cd = "H2O"
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oMonitorMethodRecordsByHourLocation">
            <summary>
            The H2O Monitor Method records for a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.H2oReportedValue">
            <summary>
            Reports the current effective H2O Percentage, regardless of whether it comes from a Monitor Hourly record or a Derived Hourly record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HeatInputAppDMethodActiveForHour">
            <summary>
            Indicates whether or not the current Monitoring Method for Heat Input is Appendix D
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HeatInputCemEquationCode">
            <summary>
            The Equation Code associated with the formula record for the current Heat Input calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HeatInputCemMethodActiveForHour">
            <summary>
            Indicates whether the current Monitoring Method for Heat Input is CEMs
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HeatInputChecksNeededForNoxMassCalc">
            <summary>
            Indicates that NOx Mass is being calculated based on heat input, therefore heat input checks must be run in support of NOx Mass for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HeatInputDerivedChecksNeeded">
            <summary>
            Flag to indicate whether or not it is necessary to perform HI Derived Hourly checks at this location for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HeatInputDerivedHourlyCount">
            <summary>
            refers to the number of DerivedHourlyDataValue records for Heat Input reported for the current location during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HeatInputFuelSpecificMissingData">
            <summary>
            Indicates if active HI Monitor Method entries for the current configuration during the current hour uses fuel-specific missing data approach
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HeatInputStartQuarter">
            <summary>
            The first quarter in the current year of the reporting period when Heat Input method was active for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffCalcCo2">
             <summary>
             The recalculated CO2 mass rate for the fuel.
            
            Field to be updated: Current CO2 HPFF Record.CalcParamValFuel
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffCalcHiRate">
             <summary>
             The recalculated heat input rate for the fuel.
            
            Field to be updated: Current HI HPFF Record.CalcParamValFuel
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffCalcMassOilRate">
             <summary>
             The mass oil flow rate used in the calculation of subsequent values.
            
            Field to be updated: Current Fuel Flow Record.CalcMassFlowRate
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffCalcSo2">
             <summary>
             The recalculated SO2 mass rate for the fuel.
            
            Field to be updated: Current SO2 HPFF Record.CalcParamValFuel
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffCalcVolumetricRate">
             <summary>
             The volumetric flow rate used in the calculation of subsequent values.
            
            Field to be updated: Current Fuel Flow Record.CalcVolumetricFlowRate
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffDensity">
            <summary>
            The density of oil used to recalculate mass oil flow.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffFcFactor">
            <summary>
            The Fc Factor used to recalculate CO2 mass rate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffFuelIndicatorCode">
            <summary>
            The IndicatorCode in the UnitFuel record for the fuel in the HFF record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffGasRecordInitialized">
            <summary>
            Indicates if evaluation of the HFF record for an oil fuel was initialized.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffGcv">
            <summary>
            The GCV used to recalculate heat input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffMassOilCalculated">
            <summary>
            Indicates if HFF Mass Oil was calculated (used for leveling)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffMassOilDefaultParameter">
            <summary>
            The parameter in the Monitor Default record representing maximum or minimum Mass oil flow.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffMassSodcStatus">
            <summary>
            Indicates whether or not the Mass SODC in the HFF record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffMaxHeatInputForMass">
            <summary>
            The maximum heat input rate from the unit capacity which should equal the reported heat input rate in the HPFF record when SourceofDataMassCode is equal to 4.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffMaxHeatInputForVolume">
            <summary>
            The maximum heat input rate from the unit capacity which should equal the reported heat input rate in the HPFF record when SourceofDataVolumetricCode is equal to 4.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffOilRecordInitialized">
            <summary>
            Indicates if evaluation of the HFF record for an oil fuel was initialized.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffSo2EmissionRate">
            <summary>
            The SO2 emission rate of the fuel used to recalculate SO2 mass rate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffSo2EquationCode">
            <summary>
            The equation code of the formula used to calculated SO2 for the fuel.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffSodcStatus">
            <summary>
            Indicates whether or not the Volumetric SODC in the HFF record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffSulfur">
            <summary>
            The sulfur content of the fuel used to recalculate SO2 mass rate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffSystemFuel">
            <summary>
            The FuelCode of monitoring system referenced in the HFF record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffSystemType">
            <summary>
            The SystemTypeCode of monitoring system reference in the HFF record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffUomStatus">
            <summary>
            Indicates whether or not the VolumetricUnitsOfMeasureCode in the HFF record are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffUsageTimeStatus">
            <summary>
            Indicates whether or not the FuelUsageTime in the current HFF record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HffVolumetricDefaultParameter">
            <summary>
            The parameter in the Monitor Default record representing maximum or minimum volumetric flow.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiAppDAccumulator">
            <summary>
            Adds us Total Heat Input from all fuel flow sources under Appendix D
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiCalculatedAdjustedValue">
             <summary>
             Resulting value when the Heat Input Rate is calculated.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiCalculatedApportionedValue">
             <summary>
             Resulting value when the Heat Input Rate is calculated by apportionment or summing
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiDerivedHourlyStatus">
            <summary>
            Indicates whether or not all DHV checks have passed for the current HI record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiDerivedHourlySystemStatusValidated">
            <summary>
            Indicates that the system in the HI DHV record has been validated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiDerivedHourlyValueRecordsByHourLocation">
            <summary>
            The Heat Input Derived Hourly Value Records By Hour and Location, for parameter codes that begin with "HI".
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HighRangeComponentId">
            <summary>
            The Component ID of the high range of a component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiHpffExists">
             <summary>
             Indicates whether an HI HPFF record exists for the current hour.
            
            This parameter is initialized to false in HOUROP-3 and set to true in HOURAD-19.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiMeasureCode">
            <summary>
            The Data and Maps hourly measure code for HI.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HiMonitorMethodRecordsByHourLocation">
            <summary>
            The HI Monitor Method Records By Hour Location: where parameter code starts with "HI" (including "HIT")
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HitDerivedChecksNeeded">
            <summary>
            Flag to indicate whether or not it is necessary to perform HIT Derived Hourly checks at this location for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HitDerivedHourlyStatus">
            <summary>
            Indicates whether or not all DHV checks have passed for the current HIT record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HitDhvLoadSumRecords">
            <summary>
            Contain the Total and April sum of load by location, reporting period, parameter and MODC.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HitSummaryInvalidFields">
            <summary>
            The fieldnames of invalid data in the HIT Summary Value record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyEmissionsTolerancesCrossCheckTable">
            <summary>
            Parameter containing a cross check table of the tolerances to use when comparing reported values for emissions data to resutls calculated using associated formulas and measured values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyExtraneousFields">
            <summary>
            Plugin to identify extraneous fields.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyFuelFlowChecksNeededForCo2">
            <summary>
            Indicates that a method is active CO2 calculation under Appendix D, therefere HourlyFuelFlowData and HourlyParamFuelFlowData records must be checked.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyFuelFlowChecksNeededForHeatInput">
            <summary>
            Indicates whether HourlyFuelFlowData and HourlyParamFuelFlowData must be analyzed in support of an active method for Appendix D Heat Input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyFuelFlowChecksNeededForSo2">
            <summary>
            Indicates whether the current SO2 Derived Hourly record is from an Appendix D source, in which case the HourlyFuelFlowData and HourlyParamFuelFlowData checks must be run
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyFuelFlowCountForGas">
            <summary>
            Indicates the number of Hourly Fuel Flow Records for gas reported during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyFuelFlowCountForOil">
            <summary>
            Indicates the number of Hourly Fuel Flow Records for gas reported during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyFuelFlowNeededForNoxRateCalc">
            <summary>
            Indicates that this is an Appendix E Site and Hourly Fuel Flow records will be examined for NOX Rate values
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyFuelFlowRecords">
            <summary>
            All of the Hourly Fuel Flow records in the emissions file.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyFuelFlowRecordsForHourLocation">
            <summary>
            All of the Hourly Fuel Flow records for a single Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyNonOperatingDataRecordsForLocation">
            <summary>
            All Hourly Op Data record for the location and the reporting period where OpTime = 0.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyOperatingDataRecordsByHourLocation">
            <summary>
            All of the Hourly Operating Data records for a single Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyOperatingDataRecordsForConfiguration">
            <summary>
            All of the Hourly Operating Data records for all locations in a MP for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyOperatingDataRecordsForLmeConfiguration">
            <summary>
            All of the Hourly Operating Data records for all locations in an LME MP for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyOperatingDataRecordsForLocation">
            <summary>
            All of the Hourly Operating Data records for a Location where OpTime > 0.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.HourlyParamFuelFlowRecordsForCurrentFuelFlow">
            <summary>
            All of the Hourly Param Fuel Flow records for the Current Fuel Flow Record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.IgnoredDailyCalibrationTests">
            <summary>
            Indicates if any offline daily calibration tests where ignored.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.IgnoredDailyInterferenceTests">
            <summary>
            Indicates if any daily interference checks were ignored.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InappropriateTransmitterTransducerTest">
            <summary>
            Indicates if a transmitter transducer test was conducted for a FFM that is not an ORF/NOZ/VENT FFM.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InitialCertificationEventRecord">
             <summary>
             Contains the Initial Certification Event Record for a particular system identifier.
            
            Note: This parameter is primarily used in emission report status checks for flow, and the 'system' of the initial certification event is usually the system of the MHV record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InjectionMeasuredValueValid">
             <summary>
             Indicates that a test measured value is valid.
            
            Should be set and used with in the same category.  Do not use in the child category of the category in which it is set.  It can be used within two different categories as long is one category is not a descendant of the other.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InjectionReferenceValueValid">
             <summary>
             Indicates that a test reference value is valid.
            
            Should be set and used with in the same category.  Do not use in the child category of the category in which it is set.  It can be used within two different categories as long is one category is not a descendant of the other.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InvalidCylinderIdList">
            <summary>
            Contains a String List of invalid daily calibration cylinder ids encountered during daily calibration processing.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InvalidDailyCalRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Invalid Prior daily cal test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InvalidFf2lTestNumber">
            <summary>
            The TestNumber of an invalid Fuel-Flow-to-Load Test in the Appendix D Status analysis.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InvalidLinearityRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Invalid Prior linearity test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InvalidRataRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Invalid Prior RATA test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.InvalidRataTestNumber">
            <summary>
            Used by the Hourly QA Status checks to store the TestNumber of the test record that is the Invalid Prior RATA or Invalid Prior Multiload RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LastFailedOrAbortedDailyCalObject">
            <summary>
            contains the last failed or aborted Daily Cal for each Component Id and Span Scale combination.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LastQualityAssuredValueSuppDataDictionaryArray">
            <summary>
            Constains the last quality assured value supplemental data for parameter (monitored vs derived) and reporting period combinations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LatestDailyInterferenceCheckObject">
             <summary>
             Most recent daily interference check summary records for every component and whether test result is "IGNORED" or not for the location.  Used by the QA Status evaluation.  
            The most recent test for a given emission hour is the latest test with an end hour that is on or before the current hour.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LeakCheckRecordsByLocationForQaStatus">
            <summary>
            All leak check summary records for the location.  Used by the QA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LeakMissingOpDataInfo">
            <summary>
            Contains the year/qtr information when Missing Op data is the result for Leak Status.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LeakStatusRequired">
            <summary>
            Indicator that a leak status check should be performed during the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LeakStatusResult">
            <summary>
            This contains the result to use for Leak Status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LegacyDataEvaluation">
            <summary>
            Indicates whether or not the hourly emissions data being evaluated was reported under legacy (pre-ECMPS) instructions
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LikeKindHours">
            <summary>
            Contains the total number of hours a like-kind monitor was used, usually during a calendar year.  Primarily used to populatee error messages.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LinearityExistsLocationArray">
            <summary>
            Location array contain a boolean indicating whether the corresponding location has reported linearity tests ('LINE') for the locations in the MP and with begin and end dates that intersect the quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LinearityMissingOpDataInfo">
            <summary>
            Contains the year/qtr information when Missing Op data is the result for Linearity Status.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LinearityOfflineList">
            <summary>
            List of test numbers for linearities that have a begin or end hour that was during a non-op hour for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LinearityStatusRequired">
            <summary>
            Indicates if an MHV record requires the Linearity Status Evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LinearityTestRecordsByLocationForQaStatus">
            <summary>
            All linearity test summary records for the location.  Used by the QA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeAnnual">
            <summary>
            Indicates if the monitoring configuration reports LME on an annual basis.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeAprilLoad">
            <summary>
            The total load for the LME configuration for April.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeAprilOptime">
            <summary>
            An array containing the total opertating time for LME units during April.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeCalcHeatInput">
            <summary>
            The total heat input for the hour calcuated for an LME unit.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeCpAprilHeatInput">
            <summary>
            The total heat input for all common pipes in LME configuration for the month of April.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeCpTotalHeatInput">
            <summary>
            The total heat input for all common pipes in LME configuration for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeDerivedHourlyValueRecordsByHourLocation">
            <summary>
            The CO2M, HIT, NOXM and SO2M Derived Hourly Value Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeExceedingParameters">
            <summary>
            The emissions parameters that have exceeded the number of tons allowed to remain eligible for an LME qualification.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeFuelArray">
            <summary>
            A list of fuels for which LME NOx Default Tests were used during the reporting period for each location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeFuelCodeList">
            <summary>
            The list of FuelCodes burned during the hour for an LME unit.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenAnnual">
            <summary>
            Indicates if the monitoring configuration reports LME on an annual basis.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenAprilLoad">
            <summary>
            The total load for the LME configuration for April.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenAprilLoadArray">
            <summary>
            The total load for each unit in the LME configuration for April.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenAprilOptime">
            <summary>
            The total operating time for the configuration in April
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenCpAprilHeatInput">
            <summary>
            The total heat input for all common pipes in LME configuration for the month of April.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenCpTotalHeatInput">
            <summary>
            The total heat input for all common pipes in LME configuration for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenFuelCode">
            <summary>
            The fuel code being evaluated in the LME Generate process.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenHiMethod">
            <summary>
            Indicates the HI method for the LME configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenHiSubstituteDataCode">
            <summary>
            Indicates the SubstituteDataCode for the HI method for the LME configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenLtffHeatInput">
             <summary>
             The recalculated total heat input in the LTFF record.
            
            LONG_TERM_FUEL_FLOW.TOTAL_HEAT_INPUT
            
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenOs">
            <summary>
            Indicates if the monitoring configuration reports LME on an ozone-season basis.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenParameters">
            <summary>
            The monitoring methods parameters associated with the LME unit.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenTotalLoad">
            <summary>
            The total load for the LME configuration for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenTotalLoadArray">
            <summary>
            The total load for each unit in the LME configuration for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenTotalOptime">
            <summary>
            The total operating time for the configuration in the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeGenValidated">
            <summary>
            Indicates if the LME Hourly Op record has been validated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeHiMethod">
            <summary>
            Indicates the HI method for a EM file containing LME units (SO2, NOX, CO2).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeHiSubstituteDataCode">
            <summary>
            Indicates the SubstituteDataCode for the HI method for the LME configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeOs">
            <summary>
            Indicates if the monitoring configuration reports LME on an ozone-season basis.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeTotalLoad">
            <summary>
            Accumulates the total load for all LME locations in the configuration for the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeTotalOptime">
            <summary>
            The total operating time for the configuration of LME units during the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LmeYearStartQuarter">
            <summary>
            The first quarter of the current year when LME data should be reported.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LocationAttributeRecordsByHourLocation">
            <summary>
            The monitor location attribute records for the hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LocationCapacityRecordsForHourLocation">
            <summary>
            Active Unit Capacity records for the location or all units linked to the location for the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Locationpos">
            <summary>
            Indicates the processing and array position for the current location in emission report processing.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LocationPositionLookup">
            <summary>
            Dictionary with a MON_LOC_ID and array position key-value pair.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LocationProgramRecords">
             <summary>
             Program records which apply to the monitoring location.
            
            For a unit, this is the Unit Program records for the unit.
            
            For a stack or pipe, this is the Unit Program records for all units linked to the stack or pipe via Unit Stack Configuration records.  The  UnitMonitorCertStartDate for the location program record should be the later of the UnitMonitorCertStartDate in the Unit Program record and the StartDate in the Unit Stack Configuration record.  The  EndDate for the location program record should be the earlier of the EndDate in the Unit Program record and the EndDate in the Unit Stack Configuration record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LocationProgramRecordsByHourLocation">
             <summary>
             The unit program records for a unit or the unit program records for the units associated with a stack or pipe for which is active during the current hour beginning with the earlier of the UMCDB and the ERBDand ending with the EndDate (if not null).
            
            This parameter is set in:
              1) the hourly loop by the Hourly Op Data category, and
              2) the apportionment loop by the Hourly Configuration Evaluation category.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LocationReportingFrequencyRecords">
             <summary>
             Unit Program Reporting Frequency records which apply to the monitoring location.
            
            For a unit, this is the Unit Reporting Frequency records for the unit.
            
            For a stack or pipe, this is the Unit Reporting Frequency records for all units linked to the stack or pipe via Unit Stack Configuration records.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LowRangeComponentId">
            <summary>
            The Component ID of the low range of a component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.LtffRecords">
            <summary>
            The long term fuel flow records for all locations in the configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Mats3LevelSystemIntegrityRecordsForQaStatus">
            <summary>
            The 3 Level System Integrity QA Supplemental records used for QA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsBtTrapHgValid">
            <summary>
            Identifies if breakthrough trap Hg concentration is in valid format for subsequent check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalcHgSystemConcentration">
             <summary>
             Calculates the Hg system concentration from the train data.
            
            Used in Emission Report evaluation, set in MATSTRP-14, and optional parameter for MATSTRP-15 solely to insure MATSTRP-15 runs after MATSTRP 1- through 14.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalcHourlySfsrRatio">
             <summary>
             Hourly SFSR Ratio for subsequent check
            
            MatsHourlySfsrRatioDeviation
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalcTrainHgConcentration">
             <summary>
             Calculation of train Hg concentration.
            
            Used as plug in for error message result.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalcTrainPercentBreakthrough">
             <summary>
             Calculated percent breakthrough for sampling train.
            
            Used as plugin error message result.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalcTrainPercentSpikeRecovery">
             <summary>
             Calculted value reported to one decimal place.
            
            Used as plugin for error result.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalcTrapAbsoluteDifference">
             <summary>
             Calculation of paired trap absolute difference.
            
            Used as plugin in error result.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalcTrapPercentDifference">
             <summary>
             Calculated percent difference in the sorbent trap trains Hg concentrations.
            
            Used as plugin in error result.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalculatedHclRateValue">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the calculated HCLRE or HCLRH value for MATS, which is primarily used to update the calculated value in the MATS Derived Hourly record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalculatedHfRateValue">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the calculated HFRE or HFRH value for MATS, which is primarily used to update the calculated value in the MATS Derived Hourly record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalculatedHgRateValue">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the calculated HGRE or HGRH value for MATS, which is primarily used to update the calculated value in the MATS Derived Hourly record.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCalculatedSo2RateValue">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the calculated SO2RE or SO2RH value for MATS, which is primarily used to update the calculated value in the MATS Derived Hourly record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsCheckForHgsi3Ran">
            <summary>
            Dummy parameter used by the Hourly Linearity Status checks to force LINSTAT-7 to run before LINSTAT-6..
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsDailyCalRequiredDatehour">
            <summary>
            Indicates the date after which daily calibration tests are required for MATS parameters.  Before the date, the lack of a daily calibration test may not indicate an OOC MATS system, because MATS reporting may not have begun when the location first started operating in the first MATS quarter.  The value is pulled from the system parameter table under parameter MATS_RULE DailyCalibrationRequiredDatehour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsDhvMeasuredModcList">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the list of measured MODC for the current MATS DHV parameter.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsDhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the current 'HGRE', 'HGRH', 'HCLRE', 'HCLRH', 'HFRE', 'HFRH', 'SO2RE' or 'SO2RH' MATS Derived Hourly Value record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsDhvRecordsByHourLocation">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HGRE', 'HGRH', 'HCLRE', 'HCLRH', 'HFRE', 'HFRH', 'SO2RE' and 'SO2RH' MATS Derived Hourly Value records for the current hour and location.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsDhvUnavailableModcList">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the list of unavailable MODC for the current MATS DHV parameter.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsEquationCodeWithH2o">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the RE equation code that uses H2O.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsEquationCodeWithoutH2o">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the RE equation code that does not use H2O.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsExpected">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether MATS is expected for the current hour and location.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsGfmSamplingTrainRecords">
            <summary>
            Set and used in Hourly GFM checks, this parameter contains the sampling train rows active for the hour and component of the current GFM row.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclcMhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HCLC MHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclcMhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HCLC' Monitor Hourly Value record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclcNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HCl Concentration is needed.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclDhvParameter">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MATS HCl DHV parameter code which is set in the Derived Hourly category and used in the Calculated Hourly category.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclDhvParameterDescription">
            <summary>
            Plugin parameter used in emission report evaluations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclDhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HCLRE' or 'HCLRH' Derived Hourly record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if 'HCLRE' and 'HCLRH' derived records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclDhvValid">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether the HCl DHV record is valid for calculation purposes.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclMethodCode">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the Method Code for the current 'HCLRE' or 'HCLRH' Monitor Method record.  This parameter's value is null if MATS HCl Method Record is null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclMethodRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HCLRE' or 'HCLRH' Monitor Method record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if 'HCLRE' and 'HCLRH' derived records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclMhvParameterDescription">
            <summary>
            Plugin parameter used in emission report evaluations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclParameterCode">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the Parameter Code for the current 'HCLRE' or 'HCLRH' Monitor Method record.  This parameter's value is null if MATS HCl Method Record is null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclreDhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HCLRE DHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHclrhDhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HCLRH DHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfcMhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HFC MHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfcMhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HFC' Monitor Hourly Value record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfcNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HF Concentration is needed.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfDhvParameter">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MATS HF DHV parameter code which is set in the Derived Hourly category and used in the Calculated Hourly category.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfDhvParameterDescription">
            <summary>
            Plubin parameter used in emission report evaluations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfDhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HFRE' or 'HFRH' Derived Hourly record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if 'HFRE' and 'HFRH' derived records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfDhvValid">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether the HF DHV record is valid for calculation purposes.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfMethodCode">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the Method Code for the current 'HFRE' or 'HFRH' Monitor Method record.  This parameter's value is null if MATS HF Method Record is null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfMethodRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HFRE' or 'HFRH' Monitor Method record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if 'HFRE' and 'HFRH' derived records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfMhvParameterDescription">
            <summary>
            Plugin parameter used in emission report evaluations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfParameterCode">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the Parameter Code for the current 'HFRE' or 'HFRH' Monitor Method record.  This parameter's value is null if MATS HF Method Record is null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfreDhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HFRE DHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHfrhDhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HFRH DHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHg3LevelSiEventRecord">
            <summary>
            Contains an event record located as part of Hg 3-Level Sisytem Integrity processing.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHg3LevelSiTestRecord">
            <summary>
            Contains a test record located as part of Hg 3-Level Sisytem Integrity processing.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgcMhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HGC MHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgcMhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HGC' Monitor Hourly Value record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgcNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS Hg Concentration is needed.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgDhvParameter">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MATS Hg DHV parameter code which is set in the Derived Hourly category and used in the Calculated Hourly category.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgDhvParameterDescription">
            <summary>
            Plugin parameter used in emission report evaluations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgDhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HGRE' or 'HGRH' Derived Hourly record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if 'HGRE' and 'HGRH' derived records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgDhvValid">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether the Hg DHV record is valid for calculation purposes.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgLinearityEventRecord">
            <summary>
            Contains an event record located as part of Hg Linearity processing.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgLinearityRecordsForQaStatus">
            <summary>
            The Jg Linearity QA Supplemental records used for QA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgLinearityTestRecord">
            <summary>
            Contains a test record located as part of Hg Linearity processing.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgMethodCode">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the Method Code for the current 'HGRE' or 'HGRH' Monitor Method record.  This parameter's value is null if MATS Hg Method Record is null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgMethodRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HGRE' or 'HGRH' Monitor Method record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if 'HGRE' and 'HGRH' derived records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgMhvParameterDescription">
            <summary>
            Plugin parameter used in emission report evaluations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgParameterCode">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the Parameter Code for the current 'HGRE' or 'HGRH' Monitor Method record.  This parameter's value is null if MATS Hg Method Record is null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgreDhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HGRE DHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHgrhDhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS HGRH DHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHourlyGfmComponentIdValid">
            <summary>
            Indicates whether the Component Id for the current Hourly Gas Flow Meter record is not null and matches the Component Id for one of the two Sampling Trains.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHourlyGfmRecord">
            <summary>
            MATS hourly GRM records for GFM component of sorbent train.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsHourlyGfmRecordsForHourAndLocation">
            <summary>
            Contains the Hourly GFM Records that are active for the current hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMainTrapHgValid">
            <summary>
            Identifies that the main trap Hg concentration is in a valid format for susbsequent checks
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvCalculatedHclcValue">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            The calculated Unadjusted MATS HCl Concentration MHV value in scientific notation.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvCalculatedHfcValue">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            The calculated Unadjusted MATS HF Concentration MHV value in scientific notation.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvCalculatedHgcValue">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            The calculated Unadjusted MATS Hg Concentration MHV value in scientific notation.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvCalculatedValue">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            The calculated Unadjusted MATS MHV value in scientific notation.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvHclcRecordsByHourLocation">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HCLC' MATS Monitor Hourly Value records for the current hour and location.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvHfcRecordsByHourLocation">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HGC', 'HCLC' and 'HHFC' MATS Monitor Hourly Value records for the current hour and location.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvHgcRecordsByHourLocation">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'HGC' MATS Monitor Hourly Value records for the current hour and location.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvMeasuredModcList">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the list of measured MODC for the current MATS MHV parameter.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvNoLikeKindModcList">
            <summary>
            Contains the list of MODC for which a like-kind analyzer cannot be reported.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the current 'HGC', 'HCLC', or 'HFC' MATS Monitor Hourly Value record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvSorbentTraps">
            <summary>
            Indicates whether an active MATS Sorbent Trap exists for the system in an HgC MHV.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMhvUnavailableModcList">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the list of unavailable MODC for the current MATS MHV parameter.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMissingGfmList">
            <summary>
            Contains the list of Samling Trains that are missing GFM records for an hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMoistureEquationList">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates the formula codes used in MATS the include moisture.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMs1HclDhvId">
            <summary>
            ID for MATS HCL DHV for MS-1 calcultions and to know which MATS DHV record to update. This ID will only have a value if there is an MS-1 calculation, otherwise it will be null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMs1HclUnadjustedHourlyValue">
            <summary>
            Primarily used for calculating the percent difference for checking the MS1 calculations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMs1HfDhvId">
            <summary>
            ID for MATS HF DHV for MS-1 calcultions and to know which MATS DHV record to update. This ID will only have a value if there is an MS-1 calculation, otherwise it will be null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMs1HfUnadjustedHourlyValue">
            <summary>
            Primarily used for calculating the percent difference for checking the MS1 calculations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMs1HgDhvId">
            <summary>
            ID for MATS Hg DHV for MS-1 calcultions and to know which MATS DHV record to update. This ID will only have a value if there is an MS-1 calculation, otherwise it will be null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMs1HgUnadjustedHourlyValue">
            <summary>
            Primarily used for calculating the percent difference for checking the MS1 calculations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMs1So2DhvId">
            <summary>
            ID for MATS SO2 DHV for MS-1 calcultions and to know which MATS DHV record to update. This ID will only have a value if there is an MS-1 calculation, otherwise it will be null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMs1So2UnadjustedHourlyValue">
            <summary>
            Primarily used for calculating the percent difference for checking the MS1 calculations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsMultipleGfmList">
            <summary>
            Contains the list of Samling Trains with multiple GFM records for an hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsParameterPluginHcl">
            <summary>
            Used in the HOURAPP-11 plugin for displaying which MATS parameter the check is working with (i.e. Hg, HCL, HF or SO2).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsParameterPluginHf">
            <summary>
            Used in the HOURAPP-12 plugin for displaying which MATS parameter the check is working with (i.e. Hg, HCL, HF or SO2).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsParameterPluginHg">
            <summary>
            Used in the HOURAPP-10 plugin for displaying which MATS parameter the check is working with (i.e. Hg, HCL, HF or SO2).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsParameterPluginSo2">
            <summary>
            Used in the HOURAPP-13 plugin for displaying which MATS parameter the check is working with (i.e. Hg, HCL, HF or SO2).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsReportedPluginHcl">
            <summary>
            Used for displaying the reported value in the response message for HOURAPP-11 check. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsReportedPluginHf">
            <summary>
            Used for displaying the reported value in the response message for HOURAPP-12 check. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsReportedPluginHg">
            <summary>
            Used for displaying the reported value in the response message for HOURAPP-10 check. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsReportedPluginSo2">
            <summary>
            Used for displaying the reported value in the response message for HOURAPP-13 check. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainComponentIdValid">
            <summary>
            Indicates whether the Sampling Trian component id is not null and has a Sampling Train component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainCount">
            <summary>
            Indicates the number of sampling trains for the current sorbent trap.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainDictionary">
             <summary>
             Contains a dictionary of sampling train related information with a key for ComponentId and a value as a record containing the following fields:
            
            1) HgConcentration as a decimal
            2) TrainQAStatusCode as a string
            3) ReferenceSFSRRatio as an integer
            4) TotalSFSRRatioCount as an integer
            5) DeviatedSFSRRatioCount as an integer
            6) SamplingTrainValid as a boolean
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainProblemComponentExists">
             <summary>
             Indicates when a sampling train with a missing component id or a component id linked to a non sampling train component exists for the current sorbent trap.
            
            Used in Emission Report evaluations and set in MATSTRP-9.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainQaStatus">
             <summary>
             Contains the Train QA Status for Sampling Train assiciated with the current Hourly Gas Flow Meter record.
            
            Used in Emission Report evaluations.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainQaStatusCodeValid">
             <summary>
             Indicates whether the Sampling Train QA Status code is not null and has a valid value.
            
            Used in Emission Report evaluations.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainQaStatusLookupTable">
            <summary>
            Table containing sampling train status codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainRecord">
             <summary>
             Data records for each sorbent trap sampling train.  Used in emissions reporting process.
            
            Note: Include component type code and component type description.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainRecords">
             <summary>
             Data records for each sorbent trap sampling train.  Used in emissions reporting process.
            
            Note: Includes component type code and component type description.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSamplingTrainsValid">
             <summary>
             Indicates whether there are two sampling trains.
            
            This should prevent checks dependent on two trains existing.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2cNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS SO2 Concentration is needed.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2DhvParameter">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MATS SO2 DHV parameter code which is set in the Derived Hourly category and used in the Calculated Hourly category.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2DhvParameterDescription">
            <summary>
            Plugin parameter used in emission report evaluations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2DhvRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'SO2RE' or 'SO2RH' Derived Hourly record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if 'SO2RE' and 'SO2RH' derived records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2DhvValid">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether the SO2 DHV record is valid for calculation purposes.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2MethodCode">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the Method Code for the current 'SO2RE' or 'SO2RH' Monitor Method record.  This parameter's value is null if MATS SO2 Method Record is null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2MethodRecord">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the 'SO2RE' or 'SO2RH' Monitor Method record for the current location that is active for the current hour.  This parameter's value is null if multiple or no active records exist, or if 'SO2RE' and 'SO2RH' derived records are not expected.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2ParameterCode">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the Parameter Code for the current 'SO2RE' or 'SO2RH' Monitor Method record.  This parameter's value is null if MATS SO2 Method Record is null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2reDhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS SO2RE DHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSo2rhDhvChecksNeeded">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS SO2RH DHV Checks should run.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapBeginDatehour">
            <summary>
            Contains the begin date and hour of the current sorbent trap.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapBeginDateHourValid">
             <summary>
             Indicates whether the sorbent trap begin date and hour are not null and the hour is inclusively between 0 and 23.
            
            Used in emission report checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapBeginDateValid">
             <summary>
             Indicates whether the Sorbent Trap Begin Date is not null.
            
            Used in Emission Report checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapDatesAndHoursConsistent">
             <summary>
             Result of comparison of trap begin and end dates and hours.
            
            Generically when this is false it should prvevent running other sorbent trap checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapDictionary">
             <summary>
             Dictionary with a LocationId (MON_LOC_ID) as a key and containing a record with the following fields:
            
            1) SorbentTrapValidExists as a boolean
            2) SorbentTrapFromPreviousQuarter as a boolean
            3) SorbentTrapBeginDateHour as a DateTime
            4) SorbentTrapEndDateHour as a DateTime
            5) SamplingTrainProblemComponentExists as a boolean
            6) SamplingTrainDictionary as the dictionary (see SamplingTrainDictionary parameter)
            7) OperatingDateList as a list of dates.
            
            Initialized in HOURGEN-19.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapEndDatehour">
            <summary>
            Contains the end date and hour of the current sorbent trap.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapEndDateHourValid">
             <summary>
             Indicates whether the sorbent trap end date and hour are not null and the hour is inclusively between 0 and 23.
            
            Used in emission report checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapEndDateValid">
             <summary>
             Indicates whether the Sorbent Trap End Date is not null.
            
            Used in Emission Report checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapEvaluationNeeded">
             <summary>
             Indicates whether Sorbent Trap data exists in the emission report or Sorbent Trap Supplemental data exists that ends in the quarter of the emission report, and that the hour range information for each trap is correct and does not overlap with another trap or the last trap from the previous emission report..
            
            Used in Emission Report checks, and initialized in HOURGEN-19.  Updated in MATSTRP 1 through 6.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapListByLocationArray">
            <summary>
            An array with elements for each location in an emission report.  Each element contains a list which contains the sorbent traps associated with the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapModc">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MODC determined for the Sorbent Trap used for the hour.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapModcCodeValid">
             <summary>
             Identifies whether the Sorbent Trap MODC was reported in properly.
            
            Used in Emissiion Report evaluation.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapPairedTrapAgreementValid">
            <summary>
            Identifies whether the paired trap agreement is reported properly for subsequent checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapRecord">
            <summary>
            Data records for each sorbent trap sampling period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapRecords">
             <summary>
             Implement in table function ECMPS.CheckEm.SorbentTrap (MON_PLAN_ID, RPT_PERIOD_ID)
            
            Contains Sorbent Trap Data records where:
            
            1) The location is in the emission report being evaluated.
            2) The reporting period is the same as the reporting period of the emission report.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapSamplingTrainList">
             <summary>
             Contains a list of sampling train related information with a value as a record containing the following fields:
            
            1) HgConcentration as a decimal
            2) TrainQAStatusCode as a string
            3) ReferenceSFSRRatio as an integer
            4) TotalSFSRRatioCount as an integer
            5) DeviatedSFSRRatioCount as an integer
            6) SamplingTrainValid as a boolean
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapSupplementalDataRecords">
             <summary>
             Implement in table function ECMPS.CheckEm.SorbentTrapSupplementalData(MON_PLAN_ID, RPT_PERIOD_ID)
            
            Contains Sorbent Trap Supplemental Data records where:
            
            1) The location is in the emission report being evaluated.
            2) The begin date preceeds the begin date of the emission report.
            3) The end date is on or after the begin date of the emission report.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSorbentTrapValidExists">
             <summary>
             Indicates whether a valid sorbent trap exists for the current hour and location.
            
            Used in the Emission Report evaluation, initialized to true in MATSTRP-9, and updated in MATSTRP 10, 11, 12 and 13.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSpikeReferenceValueValid">
            <summary>
            Identifies that reported spike reference value is reported correctly for subsequent checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsSpikeTrapHgValid">
            <summary>
            Identifies if the spike trap Hg concentration is reported correctly for subsequent check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MatsTotalSampleVolumeDscmValid">
            <summary>
            Identifies that the total sample volume is reported properly for subsequent checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MaximumAppECurveNoxEmissionRate">
            <summary>
            The highest value for NOx rate recorded in the relevant Appendix E Correlation Test
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MaxLevelCount">
            <summary>
            Stores the maximum level count for a FLOW system.  Used by the RATA status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MaxStackOptime">
            <summary>
            The largest amount of operating time for all stacks associated with the current monitoring plan in the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MaxUnitOptime">
            <summary>
            The largest amount of operating time for all units associated with the current monitoring plan in the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MethodRecords">
            <summary>
            Records for Methods at Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingCo2mFormula">
            <summary>
            Contains a list of CO2M Formula Codes that were missing from the monitoring plan for the hour but were required according to the emissions data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingDataPmaProblemDerivedList">
            <summary>
            Contains the list of derived hourly parameters for which the missing data hours exceed the maximum allowed for the year based on that last PMA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingDataPmaProblemMonitorList">
            <summary>
            Contains the list of monitored hourly parameters for which the missing data hours exceed the maximum allowed for the year based on that last PMA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingDataPmaReporterType">
            <summary>
            Indicates whether the emission report is for an Annual or Ozone Season reporter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingDataPmaTracking">
            <summary>
            Object to track Missing Data Hours and Last PMA Value for each location and monitor and derived parameter value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingFf2lYearQuarter">
            <summary>
            The year and quarter for which a fuel-flow-to-load test is missing in the Appendix D status analysis.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingModc46Non46ModcCode">
            <summary>
            Contains the MODC for the NOXC or dilient record that does not contain MODC 46 when one but not both of the NOXC or dilient records contains MODC 46, but the other does not.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingModc46ParameterForModc46">
            <summary>
            Contains the parameter description associated with the NOXC or dilient record that contains MODC 46 when one but not both of the NOXC or dilient records contains MODC 46, but the other does not.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MissingModc46ParameterForNon46">
            <summary>
            Contains the parameter description associated with the NOXC or dilient record that does not contain MODC 46 when one but not both of the NOXC or dilient records contains MODC 46, but the other does not.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MoistureNeeded">
            <summary>
            Indicates if moisture is needed in a calculation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorDefaultRecordsByHourLocation">
            <summary>
            The Monitor Default records by a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorFormulaRecordsByDayLocation">
            <summary>
            Monitor Formula Records By Day and Location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorFormulaRecordsByHourLocation">
            <summary>
            Monitor Formula Records By Hour and Location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlyAdjustedValueStatus">
            <summary>
            Indicates whether or not the AdjustedHourlyValue in the current MonitorHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlyComponentStatus">
            <summary>
            Indicates whether or not the ComponentID in the current MonitorHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlyMissingDataStatus">
            <summary>
            Indicates whether or not the use of the Missing Data Status MODCs were appropriate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlyModcStatus">
            <summary>
            Indicates whether or not the MODCCode in the current MonitorHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlyNullStatus">
            <summary>
            Indicates whether or not extraneous fields in the current MonitorHourlyValueData record are null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlyPmaStatus">
            <summary>
            Indicates whether or not the PercentAvailable in the current MonitorHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlyPreadjustedValueStatus">
            <summary>
            Indicates whether or not the UnadjustedHourly Value in the MHV record for SO2C, NOXC, or FLOW being evaluated is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlySystemStatus">
            <summary>
            Indicates whether or not the MonitoringSystemID in the current MonitorHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorHourlyUnadjustedValueStatus">
            <summary>
            Indicates whether or not the UnadjustedHourlyValue in the current MonitorHourlyValueData record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitoringPlanLocationRecords">
            <summary>
            Records for MonitoringPlanLocation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorLoadRecordsByHourAndLocation">
            <summary>
            The Monitor Load records by a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorMethodRecordsByDayLocation">
            <summary>
            The Monitor Method Records By Day Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorMethodRecordsByHour">
            <summary>
            Contains the monitor method records active for a particular hour and monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorMethodRecordsByHourLocation">
            <summary>
            The Monitor Method Records By Hour Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorQualificationRecordsByHour">
            <summary>
            The set of Monitor Qualification records that are active during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorSpanRecordsByHourLocation">
            <summary>
            Monitor Span Records By Hour and Location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorSystemComponentRecordsByHourLocation">
            <summary>
            The Monitor System Component records for a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorSystemComponentsForEmEvaluation">
            <summary>
            Contains the monitor system component records for locations in an emission report that were active during the quarter of the emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorSystemRecords">
            <summary>
            System Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorSystemRecordsByHourLocation">
            <summary>
            The Monitor System records for a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MonitorSystemsForEmEvaluation">
            <summary>
            Contains the monitor system records for locations in an emission report that were active during the quarter of the emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MostRecentDailyCalibrationTestObject">
             <summary>
             Most recent daily interference check summary records for every component, scale, onffline/online ind, and validity status for the location.  Used by the QA Status evaluation.  
            The most recent test for a given emission hour is the latest test that meets one of the following critieria:
            1.  An aborted or failed test with an injection that failed on or before minute 59 of the current hour.
            2.  An aborted or failed test without an injection that failed on or before minute 59 of 
            3.  A non-aborted and non-failed test with a test end date on or before minute 44 of the current hour.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpLastEvaluatedTimeframe">
            <summary>
            Indiicates the last time a monitoring plan was evaluated for a message plug-in.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpLoadUom">
            <summary>
            The Load Units of Measure Code for all locations in the MP configuration being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpLocationNonLoadBasedRecords">
            <summary>
            This table contains the non-load based indicator for each location at a facility.  If the location is a stack or pipe the indicator is 1 if any connected unit has and indicator of 1.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpMethodRecords">
             <summary>
             Records for Methods for all locations in the monitoring configuration
            
            This parameter was originally used in Emissions but will also now be used in Monitoring Plan checks.  For Monitoring Plan checks it will include all the methods in the Monitoring Plan being evaluated.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpOperatingStatusRecords">
            <summary>
            The Unit Operating Status Records for all units in the monitoring plan configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpPipeConfigForHourlyChecks">
            <summary>
            A string that contains either "Unit", "CP", "MP", or "Complex" reflecting whether this monitoring plan is for a simple unit, a common pipe, a multipipe, or a complex pipe config, respectively.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpProgramExemptionRecords">
            <summary>
            The Unit Program Exemption Records for all units in the monitoring plan configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpProgramRecords">
            <summary>
            Program records which apply to all units in the monitoring configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpQualificationPercentRecords">
            <summary>
            The Monitor Qualification Percent records for a monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpQualificationRecords">
            <summary>
            Qualification Records for all locations in the monitoring configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpReportingFrequencyRecords">
            <summary>
            Program Reporting Frequency Record for all locations in the monitoring configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpStackConfigForHourlyChecks">
            <summary>
            A string that contains either "Unit", "CS", "MS", or "Complex" reflecting whether this monitoring plan is for a simple unit, a common stack, a multistack, or a complex config, respectively.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpSuccessfullyEvaluated">
            <summary>
            This parameter indicates whether the associated monitoring plan was successfully evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpSystemComponentRecords">
            <summary>
            The System Component rows associated with a monitoring plan
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MpUnitLoad">
            <summary>
            The Load for the unit in the MP configuration being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MultipleStackConfiguration">
            <summary>
            Indicates if the monitoring plan contains a standard multiple stack configuration.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.MwLoadHourlyTolerance">
            <summary>
            Contains the the hourly tolerance for MW Load as definited in the Hourly Emissions Tolerances crosscheck table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxCalculatedAdjustedValue">
             <summary>
             Resulting value when the NOx Mass Rate is calculated.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxCalculatedApportionmentBasedValue">
             <summary>
             Resulting value when the NOx Mass Rate is calculated from apportioned or summed heat input.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxcCalculatedAdjustedValue">
             <summary>
             Updated NOx Concentration value, based on the Unadjusted Value multiplied by the Bias Adjustment Factor from the most recent successful RATA test.
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxcMonitorHourlyCount">
            <summary>
            the number of MonitorHourlyValueData records reported for NOx Conc during the current day and hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxConcForNoxRateCalculation">
            <summary>
            The NOx Concentration value that should be used in the NOx Emission Rate calcualtion
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxConcModc">
            <summary>
            The Method of Determination Code for the NOx Concentration Record during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxConcNeededForNoxMassCalc">
            <summary>
            Indicates that NOx Concentration (MonitorHourlyValue) checks must be run in support of the NOx Mass Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxConcNeededForNoxRateCalc">
            <summary>
            Boolean flag that indicates whether or not to look for a required NOx Conc record based on the status of the NOx Rate Derived Hourly Record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxDerivedHourlyStatus">
            <summary>
            indicates whether or not the NOX Derived Hourly Value checks were all run successfully
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxDerivedHourlyValueRecordsByHourLocation">
            <summary>
            The NOX and NOXM Derived Hourly Value Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxEmissionRateModc">
            <summary>
            The MODC code from the NOx Emission Rate record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxeSystemIdArray">
            <summary>
            A list of Appendix E Nox Systems used during the reporting period for each location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxMassBypassCode">
            <summary>
            Bypass Approach Code of active NOX Monitor Method entries for the current configuration during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxMassDerivedChecksNeeded">
            <summary>
            Indicates that DerivedHourlyValue checks for NOx Mass Rate (NOX) Category checks should be run
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxMassEquationCode">
            <summary>
            The equation code used to calculate NOx Mass for the current DerivedHourlyValue record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxMassFuelSpecificMissingData">
            <summary>
            Indicates if active NOX Monitor Method entries for the current configuration during the current hour uses fuel-specific missing data approach
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxMassMethodActiveForHour">
            <summary>
            Indicates that a Monitor Method record for NOx Mass is active during the current hour, and thus a DerivedHourlyValue record should be present
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxMassMonitorMethodCode">
            <summary>
            The Method Code associated with the Monitor Method record for NOX Mass for the current location that is active during the current hour.  Typically, this code will be either "NOXR" or "CEM"
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxmCalculatedAdjustedValue">
             <summary>
             Resulting value when the NOx Mass is calculated for LME
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxmDerivedChecksNeeded">
            <summary>
            Indicates that DerivedHourlyValue checks for NOXM Category checks should be run
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxmDerivedHourlyStatus">
            <summary>
            indicates whether or not the NOXM Derived Hourly Value checks were all run successfully
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxMonitorMethodRecordsByHourLocation">
            <summary>
            The NOx Monitor Method records for a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxmSummaryInvalidFields">
            <summary>
            The fieldnames of invalid data in the NOX Summary Value record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrAppEAccumulator">
            <summary>
            This variable sums the Appendix E NOXR values from all fuel sources
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxRateBypassCode">
            <summary>
            Bypass Approach Code of active NOXR Monitor Method entries for the current configuration during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxRateChecksNeededForNoxMassCalc">
            <summary>
            Indicates whether or not the NOx Emission Rate Derived Hourly checks must be run in support of the NOx Mass Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxRateEquationCode">
            <summary>
            The Equation Code used to derive NOx Rate for the current NOx Rate Derived Hourly Record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxRateFuelSpecificMissingData">
            <summary>
            Indicates if active NOXR Monitor Method entries for the current configuration during the current hour uses fuel-specific missing data approach
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrCalculatedAdjustedValue">
             <summary>
             Resulting value when the NOx Emission Rate is calculated.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrCalculatedUnadjustedValue">
             <summary>
             Resulting value when the NOx Emission Rate is calculated (pre-BAF).
            
            Field to be updated: Current DHV Record.CalcUnadjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrDerivedHourlyChecksNeeded">
            <summary>
            Flag to indicate whether or not it is necessary to perform NOx Rate Derived Hourly checks at this location for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrDerivedHourlyCount">
            <summary>
            The number of DerivedHourlyValueData records with parameter "NOXR" that have been reported for the Current Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrDerivedHourlyStatus">
            <summary>
            indicates whether or not the NOXR Derived Hourly Value checks were all run successfully
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrHasMeasuredDhvModc">
            <summary>
            Indicates whether an NOXR DHV record has a measured MODC.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrMeasureCode">
            <summary>
            The Data and Maps hourly measure code for NOXR.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrMonitorMethodRecordsByHourLocation">
            <summary>
            The NOx Rate Monitor Method records for a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrPrimaryOrPrimaryBypassMhvRecords">
            <summary>
            Contains the NOX system related MHV records for the hour with either MODC 47 or 48.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrStartQuarter">
            <summary>
            The first quarter in the current year of the reporting period when NOXR method was active for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxrSummaryRequiredForLmeAnnualRecords">
            <summary>
            Contains rows for units in emission reports.  Each row contains an indicator column for each of the four quarters of the emission report's year.  The indicator indicates when the unit is in an MS configuartion during the quarter, and that at least one of the MS reported NOxR during the quarter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.NoxStartQuarter">
            <summary>
            The first quarter in the current year of the reporting period when NOX method was active for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tAnnualRecords">
            <summary>
            Contains the NSPS4T Annual rows for an emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tCompliancePeriodRecords">
            <summary>
            Contains the NSPS4T Compliance Period rows for an emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tCurrentAnnualRecord">
            <summary>
            The current NSPS4T Annual record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tCurrentCompliancePeriod1Record">
            <summary>
            The first of the current Compliance Period records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tCurrentCompliancePeriod2Record">
            <summary>
            The second of the current Compliance Period records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tCurrentCompliancePeriod3Record">
            <summary>
            The third of the current Compliance Period records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tCurrentSummaryRecord">
            <summary>
            The current NSPS4T Summary record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tInvalidCo2EmissionRateUomList">
            <summary>
            List of invlaid CO2 Emission Rate UOM codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.Nsps4tSummaryRecords">
            <summary>
            Contains the NSPS4T Summary rows for an emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2ConcForCo2cCalc">
            <summary>
            The O2 Concentration value to be used in the CO2C Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2cSdCalculatedAdjustedValue">
             <summary>
             The O2 concentration used in Heat Input calculations for the current location during the current hour
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryCalculatedAdjustedValue">
             <summary>
             The O2 concentration used in subsequent calculations for the current location during the current hour
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryChecksNeededForH2o">
            <summary>
            Indicates whether or not the O2 Dry Hourly record needs to be checked
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryChecksNeededForHeatInput">
            <summary>
            Indicates whether the O2 Dry Checks must be run in support of the current Heat Input Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryChecksNeededForNoxRateCalc">
            <summary>
            Indicates whether or not O2 Dry Checks must be run in support of the NOx Rate Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryModc">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MHV O2 Dry MODC value used in calcultion checks to determine whether O2 Dry was substituted and is set in the O2 Dry section of HOURMHV-8.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryMonitorHourlyChecksNeeded">
            <summary>
            flag to indicate whether or not checks need to be launched for O2 Dry (or null) Monitor Hourly data
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryMonitorHourlyCount">
            <summary>
            the number of MonitorHourlyValueData records in the current hour that have the parameter_cd = "O2C" and a Moisture Basis of "D"
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryMonitorHourlyValueRecordsByHourLocation">
            <summary>
            The O2 Dry Monitor Hourly Value Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryNeededForMats">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether O2 Dry values are needed to support the reporting of MATS parameters.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryNeededForMatsCalculation">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether O2 Dry values are needed to support the calculation of MATS parameters.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2DryNeededToSupportCo2Calculation">
            <summary>
            Defines whether or not a Monitor Hourly Value is required for O2 in support of the CO2 Concentration Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2NullMonitorHourlyCount">
            <summary>
            the number of MonitorHourlyValueData records in the current hour that have the parameter_cd = "O2C" and  Moisture Basis is NULL
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2NullMonitorHourlyValueRecordsByHourLocation">
            <summary>
            The O2 Monitor Hourly Value Records with a Null Basis By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetCalculatedAdjustedValue">
             <summary>
             The O2 concentration used in subsequent calculations for the current location during the current hour
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetChecksNeededForH2o">
            <summary>
            Indicates whether or not the O2 Wet Hourly record needs to be checked
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetChecksNeededForHeatInput">
            <summary>
            Indicates whether the O2 Wet Checks must be run in support of the current Heat Input Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetChecksNeededForNoxRateCalc">
            <summary>
            Indicates whether or not O2 Wet Checks must be run in support of the NOx Rate Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetModc">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Contains the MHV O2 Wet MODC value used in calcultion checks to determine whether O2 Wet was substituted and is set in the O2 Wet section of HOURMHV-8.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetMonitorHourlyChecksNeeded">
            <summary>
            flag to indicate whether or not checks need to be launched for O2 Wet (or null) Monitor Hourly data
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetMonitorHourlyCount">
            <summary>
            the number of MonitorHourlyValueData records in the current hour that have the parameter_cd = "O2C" and a Moisture Basis of "W"
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetMonitorHourlyValueRecordsByHourLocation">
            <summary>
            The O2 Wet Monitor Hourly Value Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetNeededForMats">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether O2 Wet values are needed to support the calculation of MATS parameters.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetNeededForMatsCalculation">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates whether O2 Wet values are needed to support the calculation of MATS parameters.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2WetNeededToSupportCo2Calculation">
            <summary>
            Defines whether or not a Monitor Hourly Value is required for O2 in support of the CO2 Concentration Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.O2xMonitorDefaultRecordsByHourLocation">
            <summary>
            The O2X Monitor Default records by a specific hour and location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OfflineDailyIntRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the ignored Prior daily int check, because the check was conducted when the unit was offline.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OnlineDailyIntCheck">
            <summary>
            Contain the object representing an online Daily Interference Check and including the row for that check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OnlineDailyIntRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior daily interference check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OocTestRecordsByLocation">
             <summary>
             The on/off calibration test records for a particular location.
            
            Rows filtered to current location and sorted by End_Date descending, End_Hour descending and End_Min descending.
            
            This parameter is for the emission processes and is loaded through the CheckEm.OnOffCalibrationTestAllData() table function.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OperatingDateArray">
            <summary>
            An array of date list.  Each element represents a location in a monitoring plan, and contains a list of operating dates for the location that are less than or equal to the current date.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OperatingSuppDataRecordsByLocation">
            <summary>
            Operating Supp Data Records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OphoursSummaryInvalidFields">
            <summary>
            The fieldnames of invalid data in the OPHOURS Summary Value record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OptimeSummaryInvalidFields">
            <summary>
            The fieldnames of invalid data in the OPTIME Summary Value record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OsHitCalculatedValue">
            <summary>
            The recalculated ozone-season-to-date value for total heat input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OsNoxMassCalculatedValue">
            <summary>
            The recalculated ozone-season-to-date value for NOx Mass.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OsOphoursCalculatedValue">
            <summary>
            The recalculated ozone-season-to-date value for total operating hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OsOptimeCalculatedValue">
            <summary>
            The recalculated ozone-season-to-date value for total operating time.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OsReportingRequirement">
            <summary>
            Indicates if the units in the configuration report ozone season totals.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.OverrideRataBaf">
            <summary>
            Contians the override Bias Adjustment Factor to use primarily for RATA Status OOC results.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ParameterUnitsOfMeasureLookupTable">
            <summary>
            Lists all combinations of valid Parameter Codes and  Units of Measure codes with min and max values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PeiMissingOpDataInfo">
            <summary>
            Contains the year/qtr information when Missing Op data is the result for PEI Status.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PeiRequired">
            <summary>
            Indicates if the fuel flow component record is required to undergo PEI checking as part of the Appendix D Status evaluation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PeiTestRecordsByLocationForQaStatus">
             <summary>
             All PEI test summary records for the location.  Used by the QA Status evaluation.
            
            PEI tests.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PipeLoadtimesoptimeAccumulator">
            <summary>
            Contains the sum of the products "Pipe Load" times "Pipe Operating Time" for all pipes in the monitoring plan during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PrimaryBypassActiveBypassSystemId">
            <summary>
            Contains the System Id of the primary bypass system when a primary bypass system is active.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PrimaryBypassActiveForHour">
            <summary>
            Indicates whether a primary bypass system (stack) was active during the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PrimaryBypassActiveInQuarter">
            <summary>
            Indicates whether a primary bypass system (stack) was active during the quarter of an emission report.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PrimaryBypassActivePrimarySystemId">
            <summary>
            Contains the System Id of the primary system when a primary bypass system is active.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorAccuracyEventRecord">
            <summary>
            Used by the Hourly QA Status checks to store the event record that is the Prior event in the Appendix D (Accuracy) Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorDailyCalEventRecord">
            <summary>
            Used by the Hourly QA Status checks to store the event record that is the Prior event in the Daily Calibration Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorDailyCalFirstOpHourAfterLastNonOpHour">
            <summary>
            The first op hour after the last non op hour covered by the Prior Daily Cal Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorDailyCalLastCoveredNonOpHour">
            <summary>
            Contains the last covered non-op hour covered by the Prior Daily Cal Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorDailyCalRecCalcTestRes">
            <summary>
            Calc Test Res corresponding to a Daily Cal Record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorDailyCalRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior daily cal test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorLeakEventRecord">
            <summary>
            Used by the Hourly QA Status checks to store the event record that is the Prior event in the Leak Check evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorLeakExpirationDate">
            <summary>
            The date the prior leak check expires (with and without extension).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorLeakRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior Leak Check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorLinearityEventRecord">
            <summary>
            Used by the Hourly QA Status checks to store the event record that is the Prior event in the Linearity Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorLinearityRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior linearity test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorMaxLevelRataRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior max level RATA test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorMultiLevelRataRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior Multi level RATA test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorPeiEventRecord">
            <summary>
            Used by the Hourly QA Status checks to store the event record that is the Prior event in the Appendix D (PEI) Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorPeiRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior PEI test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorRataEventRecord">
            <summary>
            Used by the Hourly QA Status checks to store the event record that is the Prior event in the RATA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorRataIsAlternateSingleLevelRata">
            <summary>
            Indicates if the Prior RATA record for hourly RATA status is an Alternate Single Level RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.PriorRataRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the Prior RATA test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProgramCodeTable">
            <summary>
            Contains the program code information needed to produce program list for checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProgramIsOzoneSeasonList">
            <summary>
            Contains a list of ozone season program codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProgramRequiresNoxcSystemCertificationList">
            <summary>
            Contains a list of program codes for programs that require NOXC system certification.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProgramRequiresNoxSystemCertificationList">
            <summary>
            Contains a list of program codes for programs that require NOX system certification.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProgramRequiresSo2SystemCertificationList">
            <summary>
            Contains a list of program codes for programs that require SO2 certification.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProgramUsesRueList">
            <summary>
            Contains a list of program codes for programs that use the RUE excemption.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProtocolGasBalanceComponentList">
            <summary>
            Contains the list of gas component codes in a Protocol Gas row that are balance components.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProtocolGasDuplicateComponentList">
            <summary>
            Contains the list of gas component codes in a Protocol Gas row that are duplicates.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProtocolGasExclusiveComponentList">
            <summary>
            Contains the list of gas component codes in a Protocol Gas row that a source should only use exclusive of other gas component codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProtocolGasInvalidComponentList">
            <summary>
            Contains the list of invalid Gas Component Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ProtocolGasVendorLookupTable">
            <summary>
            A lookup table of Protocol Gas Vendors.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaCertEventsForEmEvaluation">
            <summary>
            The QA Cert Events records for the monitoring configuration in the EM file being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaCertEventSuppDataDictionaryArray">
            <summary>
            Array of dictionaries containing QaCertficationSupplementalDataClass objects that are used to hold and increament operating day and hour counts for QA Certification Events.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaCertEventSuppDataDictionaryByComponent">
            <summary>
            A dictionary with a COMPONENT_ID as a key and a list of associated QA Cert Event Supp Data objects as a value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaCertEventSuppDataDictionaryBySystem">
            <summary>
            A dictionary with a MON_SYS_ID as a key and a list of associated QA Cert Event Supp Data objects as a value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaCertificationEventRecords">
            <summary>
            The QA Certification Event records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaCertTestsForEmEvaluation">
            <summary>
            The QA Cert Test records for the monitoring configuration in the EM file being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusComponentBeginDate">
             <summary>
             Contains the earliest System Component begin date for a component.
            
            Currently used in the Weekly System Integrity Status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusComponentBeginDatehour">
             <summary>
             Contains the earliest System Component begin date/hour for a component.
            
            Currently used in the Daily Calibration Status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusComponentId">
             <summary>
             Contains the COMPONENT_ID for the current MHV or MATS MHV record.  
            
            Used in some QA status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusComponentIdentifier">
             <summary>
             Contains the COMPONENT_IDENTIFIER for the current MHV or MATS MHV record.  
            
            Used in some QA status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusComponentTypeCode">
            <summary>
            Contains the currennt MHV or MATS MHV row's component type for use with status checking.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusHourlyParameterCode">
            <summary>
            Contains the parameter code of the derived or monitor hourly record for which a QA status will run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusMatsErbDate">
             <summary>
             Contains the MATS Emission Recording Begin Date for the current MATS monitor hourly value row.
            
            * Never set this parameter as a required parameter. *
            
            This parameter is set in MatsMhv-13 and is only populated for MATS systems/components.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusPrimaryOrPrimaryBypassSystemId">
            <summary>
            Contains the primary or primary bypass system id on which to perform a QA status when a primary bypass system is involved.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusSystemDesignationCode">
             <summary>
             Contains the SYS_DESIGNATION_CD for the current MHV or MATS MHV record.  
            
            Used in some QA status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusSystemId">
             <summary>
             Contains the MON_SYS_ID for the current MHV or MATS MHV record.  
            
            Used in some QA status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusSystemIdentifier">
             <summary>
             Contains the SYSTEM_IDENTIFIER for the current MHV or MATS MHV record.  
            
            Used in some QA status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaStatusSystemTypeCode">
            <summary>
            Contains the System Type for the current Monitor Hour Value or MATS Monitor Hourly Value record for which a QA status is being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QaSupplementalAttributeRecords">
            <summary>
            The QA Supplemental Attribute records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QualificationPercentMissingList">
            <summary>
            This parameter contains a list of Location Names with missing peeking qualification percent entries.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QuarterlyEmissionsTolerancesCrossCheckTable">
            <summary>
            Cross-Check Table defining a tolerance (amount of error that is allowable in a calculation) per parameter and unit of measure
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.QuarterlyGasAuditStatus">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Indicates wheather an MHV record requires a Quarterly Gas Audit Status Evaluation.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RataEventOperatingLevelCount">
            <summary>
            The number of operating levels that must be or were performed in a RATA following a certification event.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RataMissingOpDataInfo">
            <summary>
            Contains the year/qtr information when Missing Op data is the result for RATA Status.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RataStatusBaf">
            <summary>
            The bias adjustment factor from the prior test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RataStatusRequired">
            <summary>
            Indicates if an MHV or DHV record requires the RATA Status Evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RataTestRecordsByLocationForQaStatus">
            <summary>
            All RATA test summary records for the location.  Used by the QA Status evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ReportedEmissionsValue">
            <summary>
            Generic field used to display a reported emissions value in an error message.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ReportingFrequencyByLocationQuarter">
             <summary>
             Returns the Reporting Frequency Code for each location in a monitoring plan, starting with the current quarter and going back to the earliest quarter for which each location was in an MP.
            
            Columns: Mon_Loc_Id, Oris_Code, Location_Name, Calendar_Year, Quarter, Reprt_Freq_Cd
            
            Primarily used by Emission Report QA Status checks.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ReportingPeriodOperating">
            <summary>
            Indicates whether there are any hours of operation in the reporting period in the emissions file being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RggiBeginDate">
            <summary>
            The first day of emissions reporting for the RGGI program.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RggiStartQuarter">
            <summary>
            The first quarter in the current year of the reporting period when a location was affected by RGGI.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodCo2MassCalculatedValue">
            <summary>
            The recalculated quarterly value for CO2 Mass.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodHiCalculatedValue">
            <summary>
            The recalculated quarterly value for heat input.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodNoxMassCalculatedValue">
            <summary>
            The recalculated quarterly value for NOx Mass.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodNoxRateCalculatedValue">
            <summary>
            The recalculated quarterly value for NOx Emission Rate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodNoxRateHours">
            <summary>
            The total number of operating hours that NOx Rate was calculated for this location in the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodNoxRateSum">
            <summary>
            The sum of the hourly NOx Rate values calculated for this location in the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodOpDaysCalculatedValue">
            <summary>
            The recalculated quarterly value for operating days.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodOpHoursCalculatedValue">
            <summary>
            The recalculated quarterly value for operating hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodOpTimeCalculatedValue">
            <summary>
            The recalculated quarterly value for operating time.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.RptPeriodSo2MassCalculatedValue">
            <summary>
            The recalculated quarterly value for SO2 Mass.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2AppDAccumulator">
            <summary>
            Accumulator variable used to sum up the Appendix D SO2 Mass Rate from all fuel sources
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2AppDMethodActiveForHour">
            <summary>
            Indicates whether the active method for SO2 at the current location during the current hour is for Appendix D
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2BypassCode">
            <summary>
            Bypass Approach Code of active SO2 Monitor Method entries for the current configuration during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2CalculatedAdjustedValue">
             <summary>
             Resulting value when the SO2 Mass Rate is calculated.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2cCalculatedAdjustedValue">
             <summary>
             Resulting value when the SO2 Concentration record's Unadjusted Hourly Value is multiplied by the appropriate BAF from the most recent successful RATA test.
            
            Field to be updated: Current MHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2CemMethodActiveForHour">
            <summary>
            Boolean value to describe whether or not there is an SO2 method for CEM defined in the monitoring plan that is active during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2cIsOnlyForMats">
            <summary>
            Indicates whether reported SO2C is only used for the MATS program and that ARP, both C-SAPR SO2, and older SO2 programs are not active for the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2DerivedHourlyChecksNeeded">
            <summary>
            Flag to indicate whether or not it is necessary to perform SO2 Derived Hourly checks at this location for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2DerivedHourlyCount">
            <summary>
            The number of DerivedHourlyValueData records with parameter "SO2" that have been reported for the Current Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2DerivedHourlyStatus">
            <summary>
            flag to indicate whether or not all Derived Hourly checks for SO2 have passed successfully
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2DerivedHourlyValueRecordsByHourLocation">
            <summary>
            The SO2 and SO2M Derived Hourly Value Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2EquationCode">
            <summary>
            A code that references an equation in MonitoringFormulaData that will be used for calculations for the current record (specific to Parameter SO2)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2F23MethodActiveForHour">
            <summary>
            Boolean value to describe whether or not there is an SO2 method for F23 defined in the monitoring plan that is active during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2FuelSpecificMissingData">
            <summary>
            Indicates if SO2 Monitor Method for the current configuration during the current hour uses fuel-specific missing data approach
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2HpffExists">
             <summary>
             Indicates whether an SO2 HPFF record exists for the current hour.
            
            This parameter is initialized to false in HOUROP-3 and set to true in HOURAD-24.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2mCalculatedAdjustedValue">
             <summary>
             Resulting value when the SO2 Mass is calculated for LME.
            
            Field to be updated: Current DHV Record.CalcAdjustedHourlyValue
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2mDerivedChecksNeeded">
            <summary>
            Flag to indicate whether or not it is necessary to perform SO2M Derived Hourly checks at this location for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2mDerivedHourlyStatus">
            <summary>
            flag to indicate whether or not all Derived Hourly checks for SO2M have passed successfully
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2MethodCode">
            <summary>
            Method Code of active SO2 Monitor Method entries for the current configuration during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2MonitorHourlyChecksNeeded">
            <summary>
            flag to indicate whether or not checks need to be launched for SO2 Monitor Hourly data
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2MonitorHourlyCount">
            <summary>
            The number of MonitorHourlyValueData records that have been defined with paramter "SO2C" for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2MonitorHourlyValueRecordsByHourLocation">
            <summary>
            The SO2 Monitor Hourly Value Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2rDerivedChecksNeeded">
            <summary>
            Flag to indicate whether or not it is necessary to perform SO2R Derived Hourly checks at this location for the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2rDerivedHourlyCount">
            <summary>
            The number of DerivedHourlyValueData records with parameter "SO2R" that have been reported for the Current Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2rDerivedHourlyStatus">
            <summary>
            flag to indicate whether or not all Derived Hourly checks for SO2R have passed successfully
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2rDerivedHourlyValueRecordsByHourLocation">
            <summary>
            The SO2R Derived Hourly Value Records By Hour and Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.So2StartQuarter">
            <summary>
            The first quarter in the current year of the reporting period when SO2 method was active for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SpanRecords">
            <summary>
            Span Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SpecialFuelBurned">
            <summary>
            Indicates if the unit (or units linked to the location) burned OOL, PRS, PRG, or PRS fuel during the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SpecialFuelDetermined">
            <summary>
            Indicates if it has been determined that the unit (or units linked to the location) burned OOL, PRS, PRG, or PRS fuel during the hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.StackFlowCalculatedAdjustedValue">
            <summary>
            The value calculated for Stack Flow based on the Bias Adjustment Facotr
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.StackHeatinputtimesoptimeAccumulator">
            <summary>
            Sums the total heat input at all common and multiple stacks for a given hour in a monitoring plan by multiplying heat input rate times op time at each unit
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.StackLoadtimesoptimeAccumulator">
            <summary>
            Contains the sum of the products "Stack Load" times "Stack Operating Time" for all stacks in the monitoring plan during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.StackOptimeAccumulator">
            <summary>
            Sums Operating Time for all stacks in Monitoring Plan during current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.StartQuarter">
            <summary>
            The first quarter in the current year of the reporting period when any method was active for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SubsequentLinearityRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the subsequent recertification linearity test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SubsequentRataRecord">
            <summary>
            Used by the Hourly QA Status checks to store the test record that is the subsequent recertification RATA test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SummaryValueRecordsByReportingPeriodLocation">
            <summary>
            Records in SummaryValue table that are consistent with the current reporting period
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SystemComponentRecords">
            <summary>
            The Monitor_System_Component records linked to the current component including the fields from the associated system record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SystemFuelFlowRecordsForHour">
            <summary>
            System Fuel Flow and associated system data for the current system and hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SystemOperatingSuppDataDictionaryArray">
            <summary>
            Constains the system operating supplemental data for system and reporting period combinations.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SystemOperatingSuppDataRecordsByLocation">
            <summary>
            The System Operating Supplemental Data records for the current location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.SystemParameterLookupTable">
            <summary>
            Lookup table that stores system-wide values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TableD6MissingDataValues">
            <summary>
            Cross check table linking parameter, units of measure, and fuel to the Table D-6 default value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestDateTimeValid">
             <summary>
             Indicates that a test hour is valid (between 0 and 23 inclusively) and that the date and hour are also valid.
            
            Should be set and used with in the same category.  Do not use in the child category of the category in which it is set.  It can be used within two different categories as long is one category is not a descendant of the other.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestDateValid">
             <summary>
             Indicates that a test date is valid.
            
            Should be set and used with in the same category.  Do not use in the child category of the category in which it is set.  It can be used within two different categories as long is one category is not a descendant of the other.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestExtensionExemptionRecords">
            <summary>
            The Test Extension Exemption records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestExtensionExemptionsForEmEvaluation">
            <summary>
            The Test Extension Exemption records for the monitoring configuration in the EM file being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestHourValid">
             <summary>
             Indicates that a test hour is valid (between 0 and 23 inclusively).
            
            Should be set and used with in the same category.  Do not use in the child category of the category in which it is set.  It can be used within two different categories as long is one category is not a descendant of the other.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestResultCodeList">
            <summary>
            Contains a comma delimited list of the valid Test Result Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestResultCodeLookupTable">
            <summary>
            A list of valid test result codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestResultValid">
            <summary>
            Indicates whether the test result is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TestTolerancesCrossCheckTable">
            <summary>
            Acceptable tolerances between reported and calculated values for tests.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.TotalHeatInputFromFuelFlow">
            <summary>
            Total heat input (mmBtu) reported from fuel flow meters at the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UdefExpirationDate">
            <summary>
            The expiration date of the most recent Unit Default Test for the location and fuel during the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UdefStatus">
            <summary>
            The status of the Unit Default Test for the location and fuel during the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitDefaultTestRecordsByLocationForQaStatus">
            <summary>
            All records Unit Default tests for the location in the QA_SUPP_DATA table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitHeatinputtimesoptimeAccumulator">
            <summary>
            Sums the total heat input at all units for a given hour in a monitoring plan by multiplying heat input rate times op time at each unit
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitHourlyOperationalStatus">
            <summary>
            Indicates whether or not the Current unit operated during the Current Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitIsLoadBased">
            <summary>
            Describes whether or not the NonLoadBasedUnit flag is set in the Unit record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitLoadtimesoptimeAccumulator">
            <summary>
            Contains the sum of the products "Unit Load" times "Unit Operating Time" for all units in the monitoring plan during the current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitOptimeAccumulator">
            <summary>
            Sums Operating Time for all units in Monitoring Plan during current hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitStackConfigurationRecords">
            <summary>
            The Unit Stack Configuration records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitStackConfigurationRecordsByHourLocation">
            <summary>
            The list of Unit Stack Configuration Records active for the current hour and associated with the current location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UnitStackConfigurationRecordsByHourMonitorPlan">
            <summary>
            The list of Unit Stack Configuration Records active for the current hour and associated with the current monitor plan
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UpscaleGasTypeValid">
            <summary>
            Indicates whether the UpscaleGasTypeCode in the Daily Calibration Test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UpscaleReferencePercentOfSpan">
            <summary>
            The percent of span value of the reference value of a upscale injection of a daily calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UseCo2DiluentCapForCo2MassCalc">
            <summary>
            This boolean is based on the Diluent Cap Indicator field in the CO2 Mass Derived hourly record and indicates whether or not the diluent cap should be used in the CO2 Mass Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.UseO2DiluentCapForCo2ConcCalc">
            <summary>
            This boolean is based on the Diluent Cap Indicator field in the CO2 Mass Derived hourly record and indicates whether or not the diluent cap should be used in the CO2 Concentration Calculation
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ValidFcFactorExists">
            <summary>
            Indicates whether or not a range-checked FC Factor was reported in the Hourly Operating Data record for the hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ValidFdFactorExists">
            <summary>
            Indicates whether or not a range-checked value was reported for FD Factor in the Hourly Operating Data record
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ValidFwFactorExists">
            <summary>
            Indicates whether or not a range-checked FW Factor was reported in the Hourly Operating Data record for the hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WeeklySystemIntegrityApsIsValid">
             <summary>
             Indicates whether the Weekly System Integrity APS is valid.
            
            Used in emission report evaluations.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WeeklySystemIntegrityErrorIsValid">
             <summary>
             Indicates whether the Weekly System Integrity Error is valid.
            
            Used in emission report evaluations.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WeeklyTestSummaryValid">
             <summary>
             Indicates whether the weekly test summary record failed any internal (not compared to other data) checks.
            
            Runs in the emission report evaluation.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WsiInterveningEventRecord">
            <summary>
            Contains the QA certification event that occurs after the WSI Prior Test Record, but before the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WsiInterveningLikeKindEventRecord">
            <summary>
            Contains the QA certification like kind event that occurs before the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WsiPluginEventRecord">
            <summary>
            Contains the QA certification event to use for plug-in values in result messages.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WsiPriorTestRecord">
            <summary>
            Contains the most recent weekly system integrity test prior to the current hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WsiStatus">
            <summary>
            Contains the check result for the Weekly System Integrity Status checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WsiStatusRequired">
            <summary>
            Indicates whether Weekly System Integrity status checks are needed for the current MATS MHV record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.WsiTestDictionary">
            <summary>
            A dictionary that for each component contains the most recent test prior to the current hour, and the list of operating days exclusively between test date and the current date.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Em.Parameters.EmParameters.ZeroReferencePercentOfSpan">
            <summary>
            The percent of span value of the reference value of a zero injection of a daily calibration test.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Em.Parameters.EmParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise returning null.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <returns>Returns the requested check parameter as an object if it exists, and as a null if it does not.</returns>
        </member>
        <member name="M:ECMPS.Checks.Em.Parameters.EmParameters.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise does nothing.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <param name="parameterValue">The value to which to set the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.Em.Parameters.EmParameters.Init(ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Initializes the values in the check parameter object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Em.Parameters.EmParameters.RegisterParameters">
            <summary>
            Registers each check parameter.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters">
            Parameter class for the LmeImport process
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.Process">
            The process object for the current evaluation process.  Set by the actual process during initialization.
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.Category">
            The current category object set at the beginning of the category's processing of checks and nulled at the end of the processing.
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.CurrentWorkspaceLmeHour">
            <summary>
            The current LME hourly record and associated data in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.FuelCodeLookupTable">
            <summary>
            A lookup table of Fuel codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.LmeDuplicateHourlyOpImportList">
             <summary>
             Comma delimited list of Location Name, Begin Date and Begin Hour for rows with duplicates in an LME Hourly Op Data import file.
            
            Use the following format:
            
            [LocationName]: [BeginDate as YYYY-MM-DD] [BeginHour as HH24]
             </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.LmeFacilityId">
            <summary>
            The facility ID of the facility in the LME Import file in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.LmeMpId">
            <summary>
            The Monitoring Plan ID of the MP in the LME Import file in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.LmeOrisCode">
            <summary>
            The ORIS Code of the facility in the LME Import file in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.LmeReportingPeriodId">
            <summary>
            The Reporting Period ID of the data in the LME Import file in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.MethodRecords">
            <summary>
            Records for Methods at Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.MonitoringPlanLocationRecords">
            <summary>
            Records for MonitoringPlanLocation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.MonitorPlanRecords">
            <summary>
            Monitor Plan Records
            </summary>
        </member>
        <member name="P:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.WorkspaceLmeRecords">
            <summary>
            All LME import records in the workspace.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise returning null.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <returns>Returns the requested check parameter as an object if it exists, and as a null if it does not.</returns>
        </member>
        <member name="M:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise does nothing.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <param name="parameterValue">The value to which to set the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.Init(ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Initializes the values in the check parameter object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.LmeImport.Parameters.LmeImportParameters.RegisterParameters">
            <summary>
            Registers each check parameter.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.MpImport.Parameters.MpImportParameters">
            Parameter class for the MpImport process
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.Process">
            The process object for the current evaluation process.  Set by the actual process during initialization.
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.Category">
            The current category object set at the beginning of the category's processing of checks and nulled at the end of the processing.
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.ComponentRecords">
            <summary>
            Component Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceAnalyzerRange">
            <summary>
            The current Analyzer Range record in the Workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceCalibrationStandard">
            <summary>
            The current Calibration Standard record in the Workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceComponent">
             <summary>
             The current component in the Workspace tables (in the following tables):
            
            MP_COMPONENT
             </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceFormula">
            <summary>
            The current formula record and associated data in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceQualification">
            <summary>
            The current monitor qualification record and associated data in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceQualificationLme">
            <summary>
            The current monitor qualification LME record and associated data in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceSpan">
            <summary>
            The current span record in the Workspace table
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceStackPipe">
             <summary>
             The current stack in the Workspace tables (in the following tables):
            
            MP_StackPipe
             </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceSystem">
             <summary>
             The current system in the Workspace tables (in the following tables):
            
            MP_MonitoringSys
             </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceSystemComponent">
             <summary>
             The current system component in the Workspace tables (in the following tables):
            
            MP_MonitoringSysComponent
             </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceSystemFuelflow">
            <summary>
            The current record System Fuelflow record in the Workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.CurrentWorkspaceUnit">
             <summary>
             The current unit in the Workspace tables (in the following tables):
            
            For MP Import:
            
            MP_MonitoringQualLME
            MP_MonitoringQualPCT
            MP_Unit
            MP_UnitCapacity
            MP_UnitControl
            MP_UnitFuel
            MP_UnitStackConfig
            
            For EM Import:
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.ExtraneousSpanFields">
            <summary>
            A list of fields reported in the span record not appropriate for the component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.FormulaRecords">
            <summary>
            Formula records with formula info included
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.MissingComponentIdForSystemComponent">
            <summary>
            Components in System Component record but not in Component record during monitoring plan import.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.MonitorSystemRecords">
            <summary>
            System Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.WorkspaceComponentRecords">
            <summary>
            The component records and associated data in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.WorkspaceQualificationLmeRecords">
            <summary>
            The MonitorQualLME records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.WorkspaceStackPipeRecords">
            <summary>
            The records in the Stack_Pipe table in the Workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.WorkspaceUnitCount">
            <summary>
            Number of Units in the Workspace tables
            </summary>
        </member>
        <member name="P:ECMPS.Checks.MpImport.Parameters.MpImportParameters.WorkspaceUnitRecords">
            <summary>
            The records in the Unit table in the Workspace.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.MpImport.Parameters.MpImportParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise returning null.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <returns>Returns the requested check parameter as an object if it exists, and as a null if it does not.</returns>
        </member>
        <member name="M:ECMPS.Checks.MpImport.Parameters.MpImportParameters.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise does nothing.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <param name="parameterValue">The value to which to set the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.MpImport.Parameters.MpImportParameters.Init(ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Initializes the values in the check parameter object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.MpImport.Parameters.MpImportParameters.RegisterParameters">
            <summary>
            Registers each check parameter.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Mp.Parameters.MpParameters">
            Parameter class for the Mp process
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.Process">
            The process object for the current evaluation process.  Set by the actual process during initialization.
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.Category">
            The current category object set at the beginning of the category's processing of checks and nulled at the end of the processing.
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AbortLocationEvaluation">
            <summary>
            Indicates if location has an invalid location evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AffectedUnit">
            <summary>
            Indicates if the unit is affected by a program.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeActive">
            <summary>
            Shows Active/Inactive Status for a Component
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeCodeLookupTable">
            <summary>
            A lookup table of Analyzer Range Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeCodeValid">
            <summary>
            Indicates whether or not the Analyzer Range Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeDatesAndHoursConsistent">
            <summary>
            Indicates whether or not the Start Date and Hour is prior to the End Date and Hour for Analyzer Range.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeEndDateValid">
            <summary>
            Indicates whether or not the value reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeEndHourValid">
            <summary>
            Indicates whether or not the value reported is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeEvaluationBeginDate">
            <summary>
            The first date that the Analyzer Range is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeEvaluationBeginHour">
            <summary>
            The first hour that the Analyzer Range is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeEvaluationEndDate">
            <summary>
            The last date that the Analyzer Range is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeEvaluationEndHour">
            <summary>
            The last hour that the Analyzer Range is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeRecords">
            <summary>
            A collection of records for all Analyzer Range records for the component with the associated component information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeStartDateValid">
            <summary>
            Indicates whether or not the Analyzer Range Start Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AnalyzerRangeStartHourValid">
            <summary>
            Indicates whether or not the Analyzer Range Start Hour is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AppropriateMethodForFormula">
            <summary>
            A method that is required for a formula.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AppropriateSystemOrComponentForFormula">
            <summary>
            A system type or component type and basis that is appropriate for a formula.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AttributeEvaluationBeginDate">
            <summary>
            The first date that the Location Attribute record is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.AttributeEvaluationEndDate">
            <summary>
            The last date that the Location Attribute record is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.BypassApproachCodeLookupTable">
            <summary>
            A lookup table of Bypass Approach Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CalculatedAveragePercentValue">
            <summary>
            The recalculated Average Percent Value in the Monitoring Qualification Percent record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CombinedFacilityMethodRecords">
            <summary>
            Combines Method Records and MATS (Supplemental) Method Records into a single set.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentActive">
            <summary>
            Shows Active/Inactive Status for a Component
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentAnalyzerRangeRecords">
            <summary>
            Analyzer Range Records linked to the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentBasisCodeValid">
            <summary>
            Indicates whether or not the value reported in the field is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentComponentTypeValid">
            <summary>
            Indicates whether or not the value in the field is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentDatesAndHoursConsistent">
            <summary>
            Indicates whether or not the Start Date and Hour is prior to the End Date and Hour in every System Component record for the Component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentEvaluationBeginDate">
            <summary>
            The first date that the component is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentEvaluationBeginHour">
            <summary>
            The first hour that the component is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentEvaluationEndDate">
            <summary>
            The last date that the component is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentEvaluationEndHour">
            <summary>
            The last hour that the component is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentParameterCode">
            <summary>
            The emission parameter monitored by the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentRecords">
            <summary>
            Component Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentTypeAndBasisToSampleAcquisitionMethodCrossCheckTable">
            <summary>
            Appropriate Sample Acquisition Method Codes for Component Type and Basis.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentTypeAndSpanScaleToSpanMethodCrossCheckTable">
            <summary>
            List of appropriate span methods for component type and span scale.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ComponentTypeCodeLookupTable">
            <summary>
            A lookup table of Component Type Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlActiveStatus">
            <summary>
            Indicates whether or not the control is active.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlCodeLookupTable">
            <summary>
            Control Code Lookup Table
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlCodeValid">
            <summary>
            Indicates whether or not the Control Code reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlEvaluationEndDate">
            <summary>
            Date on which evaluation period ends for the control record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlEvaluationStartDate">
            <summary>
            Date on which evaluation period begins for the control record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlInstallDateConsistentWithRetireDate">
            <summary>
            Indicates whether or not the Control Dates reported are Consistent.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlInstallDateValid">
            <summary>
            Indicates whether the Control Install Date reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlParameterCodeValid">
            <summary>
            Indicates whether the Control Parameter Code reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlRecords">
            <summary>
            Control records with control info included.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlRetireDateValid">
            <summary>
            Indicates whether the Control Retire Date reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ControlToUnitTypeCrossCheckTable">
            <summary>
            List of appropriate unit types for the control equipment.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CrosscheckMatssupplementalcomplianceparametertomethod">
            <summary>
            Contains the cross check table that ties MATS Supplemental Compliance Parameters to valid Methods.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CrosscheckProgramparametertolocationtype">
            <summary>
            This parameter contains the Program Parameter to Location Type cross check table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CrosscheckProgramparametertomethodcode">
            <summary>
            This parameter contains the Program Parameter to Method Code cross check table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CrosscheckProgramparametertomethodparameter">
            <summary>
            This parameter contains the Program Parameter to Method Parameter cross check table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CrosscheckProgramparametertoseverity">
            <summary>
            This parameter contains the Program Parameter to Severity cross check table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentAnalyzerRange">
            <summary>
            List of information for the Current record in Analyzer Range.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentBeginDateAndHour">
            <summary>
            Contains the current begin date and hour combined into a single date element.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentBeginDateAndHourValid">
            <summary>
            Indicates whether the Begin Hour for the current record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentBeginDateValid">
            <summary>
            Indicates whether the Begin Date for the current record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentComponent">
            <summary>
            List of information for the Current record in Component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentControl">
            <summary>
            The current control record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentDatesAndHoursConsistent">
            <summary>
            Indicates whether the current record's begin date and hour and end date and hour are valid and that the begin date and hour is before the end date and hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentDefault">
            <summary>
            Collection of Data Elements for the Default being evaluated (values from Monitor_Default)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentEndDateAndHour">
            <summary>
            Contains the current end date and hour combined into a single date element.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentEndDateAndHourValid">
            <summary>
            Indicates whether the End Hour for the current record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentEndDateValid">
            <summary>
            Indicates whether the End Date for the current record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentFormula">
            <summary>
            List/Collection of information for the formula being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentFuel">
            <summary>
            Collection of Data Elements for the Fuel being evaluated (values from Unit_Fuel)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentFuelFlow">
            <summary>
            Collection of Data Elements for the Fuel Flow Record being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentLoad">
            <summary>
            Collection of Data Elements for the Load being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentLocation">
            <summary>
            The monitor location being evaluated including linked stack information (active/retire date) and unit information (non load based indicator).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentLocationAttribute">
            <summary>
            Monitor Location Attribute record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentMethod">
            <summary>
            Collection of Data Elements for the Method being evaluated (values from Monitor_Method)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentMethodValid">
            <summary>
            Indicates whether the method code for the current record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentMonitoringPlanComment">
            <summary>
            Collection of Data Elements for the MonitoringPlanComment being evaluated 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentMonitoringPlanConfiguration">
            <summary>
            List providing all Monitoring Plan Configuration information for the current Monitoring Plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentParameterValid">
            <summary>
            Indicates whether the parameter code is valid for the current record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentProgram">
            <summary>
            This is a list/collection of information about the program being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentProgramActive">
            <summary>
            Indicates if current Unit Program record is active.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentProgramParameter">
            <summary>
            A data row contiaining a specific PROGRAM_PARAMETER row.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentProgramParameterActive">
            <summary>
            Indicates whether the current Unit Program Parameter record is active.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentQualification">
            <summary>
            This is a list/collection of information about the Qualification Record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentQualificationActive">
            <summary>
            Indicates if current Monitor Qualification record is active.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentQualificationLee">
             <summary>
             Contains the Monitor Qualification LEE record currently being processed.
            
            Set in the Monitor Qualification LEE Category.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentQualificationLme">
            <summary>
            This is a list/collection of information about the Qualification LME Record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentQualificationPercent">
            <summary>
            The Monitoring Qualification Percent Record being evaluated along with associated Monitor Qualification data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentSpan">
            <summary>
            Collection of Data Elements for the span being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentSystem">
            <summary>
            Collection of Data Elements for the Monitoring System being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentSystemComponent">
            <summary>
            The Monitor_System_Component being evaluated, including the fields for the associated component record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentUnit">
            <summary>
            Data related to the unit being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentUnitCapacity">
            <summary>
            The Current Unit Capacity record information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentUnitStackConfiguration">
            <summary>
            The Unit Stack Configuration record being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.CurrentWaf">
            <summary>
            Collection of Data Elements for the WAF being evaluated (values from RECT_DUCT_WAF).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultActiveStatus">
            <summary>
            Indicates whether or not the Default is active during the Evaluation Period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultDatesAndHoursConsistent">
            <summary>
            Indicates if monitor default start date and hour is prior to end date and hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultEndDateValid">
            <summary>
            Indicates whether or not the Default End Date is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultEndHourValid">
            <summary>
            Indicates whether or not the Default End Hour is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultEvaluationBeginDate">
            <summary>
            The date on which the Evaluation Period begins for the Default Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultEvaluationBeginHour">
            <summary>
            The hour in which the Evaluation Period begins for the Default Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultEvaluationEndDate">
            <summary>
            The date on which the Evaluation Period ends for the Default Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultEvaluationEndHour">
            <summary>
            The hour in which the Evaluation Period ends for the Default Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultFuelCodeValid">
            <summary>
            Indicates whether the Default Fuel Code is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultParameterBoilerTypeAndFuelTypeToDefaultValueCrossCheckTable">
            <summary>
            Links Default Parameter, Boiler Type, and Fuel Type to Default Value for generic default emission rates.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultParameterCodeValid">
            <summary>
            Indicates whether or not the Default Parameter Code Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultParameterList">
             <summary>
             Cross check table linking Parameter Code to Parameter Category filtered on Category Code equal to "DEFAULT"
            
            Display: Column 1 only.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultParameterToPurposeCrossCheckTable">
            <summary>
            List of DefaultPurposeCodes appropriate for the ParameterCode.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultParameterToSourceOfValueCrossCheckTable">
            <summary>
            List of DefaultSourceCodes appropriate for the ParameterCode.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultPurposeCodeLookupTable">
            <summary>
            A lookup table of Default Purpose Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultPurposeCodeValid">
            <summary>
            Indicates whether or not the Default Purpose Code is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultRecords">
            <summary>
            Default records with default info included.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultSourceCodeLookupTable">
            <summary>
            A lookup table of Default Source Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultSourceCodeValid">
            <summary>
            Indicates whether or not the Default Source Code is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultStartDateValid">
            <summary>
            Indicates whether or not the Default Start Date is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultStartHourValid">
            <summary>
            Indicates whether or not the Default Start Hour is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultUnitFuel">
            <summary>
            The unit fuel represented by the fuel code in the monitoring default record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.DefaultValueValid">
            <summary>
            Indicates if the Default Value is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.EcmpsMpBeginDate">
            <summary>
            The date when new rules for ECMPS go into effect for the MP evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.EmissionsFileRecords">
            <summary>
            All quarterly emissions file record for the configuration whose emissions files is being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.EvaluateMonitoringPlan">
            <summary>
            Indicator of whether we should continue to evaluate this monitoring plan.  The value is set in the MONPLAN cataegory and is checked in the MP process immediately after that category.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.EvaluationBeginDate">
             <summary>
             The begin date of the evaluation period for the current record.
            
            This is the parameter value that replaces directly accessing the Evaluation Begin Date property of the Check Engine object.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.EvaluationEndDate">
             <summary>
             The end date of the evaluation period for the current record.
            
            This is the parameter value that replaces directly accessing the Evaluation EndDate property of the Check Engine object.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FacilityLoadRecords">
            <summary>
            Load records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FacilityLocationAttributeRecords">
            <summary>
            The monitor location attribute records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FacilityLocationRecords">
            <summary>
            The monitor location records for the facility of the records being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FacilityMethodRecords">
            <summary>
            The Method records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FacilityQualificationRecords">
            <summary>
            The Monitor Qualification records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FacilitySystemRecords">
            <summary>
            The System records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FacilityUnitStackConfigurationRecords">
            <summary>
            The unit stack configuration records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FirstEcmpsReportingPeriod">
            <summary>
            The first ECMPS Reporting Period for the related facility.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FlowSpanValueValid">
            <summary>
            Indicates whether or not Flow Span value reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FlowSystemActivePresent">
            <summary>
            This indicates if an active flow system is present.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaActiveStatus">
            <summary>
            Indicates whether or not the Formula is active during the Evaluation Period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaCodeLookupTable">
            <summary>
            A lookup table of Equation Codes with the associated Parameter Code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaCodeToFFactorParameterCrossCheckTable">
            <summary>
            Links formula codes to the f-factors parameters that are factors in the formula.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaCodeValid">
            <summary>
            Indicates whether Formula Equation Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaDatesAndHoursConsistent">
            <summary>
            Indicates whether the Start Date and Hour are prior to the End Date and Hour for the Formula.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaEndDateValid">
            <summary>
            Indicates whether or not the Formula End Date is Valid
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaEndHourValid">
            <summary>
            Indicates whether or not the Formula End Hour is Valid
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaEvaluationBeginDate">
            <summary>
            The first date that the formula is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaEvaluationBeginHour">
            <summary>
            The first hour that the formula is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaEvaluationEndDate">
            <summary>
            The last date that the formula is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaEvaluationEndHour">
            <summary>
            The last hour that the formula is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaParameterAndComponentTypeAndBasisToFormulaCodeCrossCheckTable">
            <summary>
            Links formula parameter and component type and basis to required formula code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaParameterList">
             <summary>
             Cross check table linking Parameter Code to Parameter Category filtered on Category Code equal to "FORMULA"
            
            Display: Column 1 only.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaParameterValid">
            <summary>
            Indicates whether or not the Formula Parameter Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaRecords">
            <summary>
            Formula records with formula info included
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaStartDateValid">
            <summary>
            Indicates if the Formula Start Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaStartHourValid">
            <summary>
            Indicates whether or not the Formula Start Hour is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaToRequiredMethodCrosscheck">
            <summary>
            Cross check for formula codes with required Method Parameter and Code combinations.  The crosscheck will have a row for each valid Method Parameer and Code combination for a formula.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FormulaToRequiredUnitFuelCrosscheck">
            <summary>
            Contains rows for each formula code with required fuels.  If for a formula one of a list of fuels is required, the cross check will contain a row for each fuel in the list.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelActiveStatus">
            <summary>
            Indicates whether or not the Fuel is active during the Evaluation Period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelBeginDateValid">
            <summary>
            Indicates whether the Fuel Begin Date reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelCodeLookupTable">
            <summary>
            A lookup table of Fuel codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelCodeToMinimumAndMaximumMoistureDefaultCrossCheckTable">
            <summary>
            List of minimum and maximum moisture defautl values by fuel code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelCodeValid">
            <summary>
            Indicates whether or not the Fuell Code is valid for the Monitoring Location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelDatesConsistent">
            <summary>
            Inidcates whether or not the Fuel Dates are Consistent.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelDemonstrationMethodLookupTable">
            <summary>
            A lookup table of demonstration methods associated with fuel properties.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelEndDateValid">
            <summary>
            Indicates whether or not the Fuel End Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelEvaluationBeginDate">
            <summary>
            Date on which evaluation period begins for Fuel.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelEvaluationEndDate">
            <summary>
            Date on which evaluation period ends for Fuel.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowActiveStatus">
            <summary>
            Indicates whether or not the Fuel Flow Record is active during the Evaluation Period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowDatesAndHoursConsistent">
            <summary>
            Indicates whether or not the Fuel Flow Dates and Hours reported are Consistent.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowEndDateValid">
            <summary>
            Indicates whether or not the Fuel Flow End Date reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowEndHourValid">
            <summary>
            Indicates whehter or not the Fuel Flow End Hour reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowEvaluationEndDate">
            <summary>
            Fuel Flow Evaluation End Date
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowEvaluationEndHour">
            <summary>
            Fuel Flow Evaluation End Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowEvaluationStartDate">
            <summary>
            Fuel Flow Evaluation Start Date
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowEvaluationStartHour">
            <summary>
            Fuel Flow Evaluation Start Hour
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowMaximumRateSourceCodeLookupTable">
            <summary>
            Fuel Flow Maximum Rate Source Code Lookup Table
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowRecords">
            <summary>
            Fuel Flow Records for the system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowStartDateValid">
            <summary>
            Indicates whether or not the Fuel Flow Start Date reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelFlowStartHourValid">
            <summary>
            Indicates whether or not the Fuel Flow Start Hour reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelGroup">
            <summary>
            The fuel group associated with the fuel code in the Unit Fuel record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelIndicatorCodeLookupTable">
            <summary>
            A lookup table of Fuel Indicator Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelsWithIncompleteDefaults">
            <summary>
            List of primary and secondary fuels that have defaults, but the defaults do not cover the period of the method with FSP75 or FSP75C.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.FuelsWithMissingDefaults">
            <summary>
            Contains a list of primary or secondary fuels with missing defaults.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteComponentsForSystem">
            <summary>
            List of required component types that were not linked to the system for the entire evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteDefaultForFormula">
            <summary>
            A list of default parameters that are required for the current formula but do not span the entire evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteDefaultForMethod">
            <summary>
            A list of parameters of default records that are required for the current method but do not span the entire evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteDefaultForSystem">
            <summary>
            A list of parameters of default records that are required for the current system but do not span the entire evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteDefaultFuelForMethod">
            <summary>
            A list of fuel codes of default records that are required for the current method but do not span the entire evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteFormulaForComponent">
            <summary>
            A list of required formula parameter + equation code for a system component that are not present during the entire evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteFuelSystemForMethod">
            <summary>
            A required fuelflow system that is not active during the entire evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteNoxSystemForMethod">
            <summary>
            List of fuels with Appendix E or PEMS systems that is not active during the entire evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteQualificationForMethod">
            <summary>
            A list of Qual Type Codes for monitoring qualifications that are required for the current method but do not span the evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.IncompleteSystemForMethod">
            <summary>
            A required system type for a monitor method that does not span the method evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.InitialQualification">
            <summary>
            Indicates if this is the first time a unit has reported a Monitor Qualification record for the particular QualificationTypeCode.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.InvalidMaximumDefault">
            <summary>
            A list of default parameters required when using fuel-specific missing data or bypass approach whose values are not equal to the MPC/MER/MPF in correspoding span record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.InvalidMethodFuel">
            <summary>
            Fuels inappropriate for methodology.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.InvalidParametersForCemMethod">
            <summary>
            A list of method parameters not using CEM/AMS methods when another parameter is using a CEM method.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.InvalidParametersForLmeMethod">
            <summary>
            A list of method parameters not using LME methods when another parameter is using a LME method.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.InvalidUnitTypeForControl">
            <summary>
            Unit Type inappropriate for the Control.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadActiveStatus">
            <summary>
            Load Active Status for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadDatesAndHoursConsistent">
            <summary>
            Indicates whether or not the Load Dates and Hours are Consistent.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadEndDateValid">
            <summary>
            Indicates whether the Load End Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadEndHourValid">
            <summary>
            Indicates whether or not the Load End Hour is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadEvaluationEndDate">
            <summary>
            The last date on which there should be an evaluation of the Load Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadEvaluationEndHour">
            <summary>
            The last hour on which there should be an evaluation of the Load Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadEvaluationStartDate">
            <summary>
            The first date on which there should be an evaluation of the Load Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadEvaluationStartHour">
            <summary>
            The first hour on which there should be an evaluation of the Load Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadLevelsRequired">
            <summary>
            This indicator indicates if this location must perform load level analysis. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadRecords">
            <summary>
            Load records for current location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadStartDateValid">
            <summary>
            Indicates whether or not the Load Start Date reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LoadStartHourValid">
            <summary>
            Indicates whether the Load Start Hour reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationActive">
            <summary>
            Shows Active/Inactive Status for a Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationAnalyzerRangeRecords">
            <summary>
            A collection of records for all Analyzer Range records for the location with the associated component information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationAttributeEndDateValid">
            <summary>
            Indicates whether or not the Location Attribute End Date is valid for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationAttributeRecords">
            <summary>
            The monitor location attribute records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationAttributeRecordValid">
            <summary>
            Indicates if the location reporting a location attribute record is a stack, a unit not linked to a stack, or a unit with a flow monitor.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationAttributeStartDateValid">
            <summary>
            Indicates whether or not the Location Attribute Start Date is valid for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationCapacityRecords">
            <summary>
            Unit Capacity records for the location or all units linked to the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationControlRecords">
             <summary>
             Unit Control records which apply to the monitoring location.
            
            For a unit, this is the Unit Control records for the unit.
            
            For a stack or pipe, this is the Unit Control records for all units linked to the stack or pipe via Unit Stack Configuration records.  The  InstallDate for the location control record should be the later of the InstallDate in the Unit Control record and the StartDate in the Unit Stack Configuration record.  The  RetireDate for the location control record should be the earlier of the RetireDate in the Unit Control record and the EndDate in the Unit Stack Configuration record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationDatesConsistent">
            <summary>
            Indicates if location attribute start date is prior to end date.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationEvaluationBeginDate">
            <summary>
            The first date that the monitor location is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationEvaluationEndDate">
            <summary>
            The last date that the monitor location is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationFuelRecords">
             <summary>
             Fuel Records at Location linked ti associated information in the Fuel Code Lookup table.
            
            For a unit, this is the Unit Fuel records for the unit.
            
            For a stack or pipe, this is the Unit Fuel records for all units linked to the stack or pipe via Unit Stack Configuration records.  The  StartDate for the location fuel record should be the later of the StartDate in the Unit Fuel record and the StartDate in the Unit Stack Configuration record.  The  EndDate for the location fuel record should be the earlier of the EndDate in the Unit Fuel record and the EndDate in the Unit Stack Configuration record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationProgramParameterRecords">
            <summary>
            The parameter contains all Program Parameter rows associated with a location and includes UP_ID, UNIT_ID PRG_CODE, CLASS, EMISSION_RECORDING_BEGIN_DATE, UNIT_MONITOR_CERT_BEGIN_DATE and END_DATE columns from the parent UNIT_PROGRAM row.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationProgramRecords">
             <summary>
             Program records which apply to the monitoring location.
            
            For a unit, this is the Unit Program records for the unit.
            
            For a stack or pipe, this is the Unit Program records for all units linked to the stack or pipe via Unit Stack Configuration records.  The  UnitMonitorCertStartDate for the location program record should be the later of the UnitMonitorCertStartDate in the Unit Program record and the StartDate in the Unit Stack Configuration record.  The  EndDate for the location program record should be the earlier of the EndDate in the Unit Program record and the EndDate in the Unit Stack Configuration record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationReportingFrequencyRecords">
             <summary>
             Unit Program Reporting Frequency records which apply to the monitoring location.
            
            For a unit, this is the Unit Reporting Frequency records for the unit.
            
            For a stack or pipe, this is the Unit Reporting Frequency records for all units linked to the stack or pipe via Unit Stack Configuration records.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationSystemComponentRecords">
            <summary>
            System Component Records at location with associated component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationSystemFuelFlowRecords">
            <summary>
            System Fuel Flow Records for location with associated system data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationTestRecords">
            <summary>
            All test summary records associated with the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationType">
             <summary>
             Indicates the type of location the Monitor Location- Common Stack (CS), Multiple Stack (MS), Common Pipe (CP), Multiple Pipe (MP), Unit linked to Stacks and Pipes (UB), Unit linked to Stacks (US), Unit linked to Pipes (UP), Unit not linked to Stack or Pipe (U).  If Stack ID has an invalid prefix, location type will be null.
            
            Generated in Location object.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationTypeDescription">
            <summary>
            Plugin to indicate whether location is a unit, common stack, multiple stack, common pipe, or multiple pipe.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.LocationUnitTypeRecords">
            <summary>
            Unit Type records for the unit or all the units linked to a stack or pipe.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MatsCombinedMethodRecordsByLocation">
             <summary>
             Contains the combined set of Monitor Method and  MATS Method rows for the current location being evaluated.
            
            Set in the Monitor Location category.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MatsEvaluationBeginDate">
             <summary>
             Contains the Date on which MATS Began for the current monitoring plan.
            
            This date is the late of the EvaluationBeginDate and the date the MATS program began.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MatsMethodCodeLookup">
            <summary>
            Contains the MATS Method Code lookup table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MatsMethodParameterCodeLookup">
            <summary>
            Contains the MATS Method Parameter Code lookup table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MatsMpSupplementalComplianceMethodRecords">
            <summary>
            Contains the MATS Supplemental Compliance Method Records for the current MP.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MatsRequiredCheck">
             <summary>
             Primarily used in the Emission Report Evaluation.
            
            Boolean value indicating whether a MATS required method exists.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MatsSupplementalComplianceMethodRecord">
            <summary>
            Contains the MATS Supplemental Compliance Method Record currently being processed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MaximumDefaultValue">
            <summary>
            Maximum default value for parameter and units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MaximumFutureDate">
            <summary>
            Indicates the furthest date in the future expected in an evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MaximumLoadUnitsOfMeasureValid">
            <summary>
            Indicates whether or not the Maximum Load Units of Measure is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MaximumSpanValue">
            <summary>
            Maximum span value for component type and units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodActive">
            <summary>
            Shows Active/Inactive Status for a Method
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodBypassApproachCodeValid">
            <summary>
            Indicates whether or not the value reported for the field is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodCodeLookupTable">
            <summary>
            A lookup table of Method Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodDatesAndHoursConsistent">
            <summary>
            Indicates if monitor method start date and hour is prior to end date and hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodEndDateValid">
            <summary>
            Indicates whether or not the Method End Date is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodEndHourValid">
            <summary>
            Indicates whether or not the Method End Hour is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodEvaluationBeginDate">
            <summary>
            The first date that the monitor method is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodEvaluationBeginHour">
            <summary>
            The first hour that the monitor method is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodEvaluationEndDate">
            <summary>
            The last date that the monitor method is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodEvaluationEndHour">
            <summary>
            The last hour that the monitor method is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodMethodCodeValid">
            <summary>
            Indicates whether or not the Method Method Code reported is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodParameterEquivalentCrosscheck">
            <summary>
            Method Parameter Equivalent cross check table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodParameterList">
             <summary>
             Cross check table linking Parameter Code to Parameter Category filtered on Category Code equal to "METHOD"
            
            Display: Column 1 only.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodParameterToMaximumDefaultParameterLookupTable">
            <summary>
            Links method parameter codes to default parameter codes and span component types for fuel-specific missing data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodParameterValid">
            <summary>
            Indicates whether or not the Method Parameter reported is valid
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodRecords">
            <summary>
            Records for Methods at Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodStartDateValid">
            <summary>
            Indicates whether or not the Method Start Date is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodStartHourValid">
            <summary>
            Indicates whether or not the Method Start Hour is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodSubstituteDataCodeValid">
            <summary>
            Indicates whether or not the Method Substitute Date Code reported is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodToSubstituteDataCodeCrossCheckTable">
            <summary>
            Appropriate Substitute Data Codes for Method and Method Parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MethodToSystemTypeCrossCheckTable">
             <summary>
             Cross check table linking Parameter Code and Method Code to System Type Code.
            
            Filter: System Type Code is not null.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MinimumDefaultValue">
            <summary>
            Minimum default value for parameter and units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MinimumSpanValue">
            <summary>
            The minimum span value for component type and unit type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingComponentsForSystem">
            <summary>
            List of required component types that were not linked to the system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingDefaultForFormula">
            <summary>
            A list of default parameters that are required for a given formula but are not present.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingDefaultForMethod">
            <summary>
            A list of default parameter that are required for the current method but are not found in the default table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingDefaultForSystem">
            <summary>
            A list of default parameter that are required for the current system but are not found in the default table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingDefaultForSystemAndComponent">
            <summary>
            The required default parameter that is missing for the system and component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingDefaultFuelForMethod">
            <summary>
            A list of default fuel codes that are required for the current method but are not found in the default table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingFormulaForComponent">
            <summary>
            A list of required formula parameter + equation code that are missing for a system component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingFormulaForMethod">
            <summary>
            A list of required formula parameter + equation code that are missing for a method.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingFormulaForSystem">
            <summary>
            A list of required formula parameter + equation code that are missing for a system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingFuelSystemForMethod">
            <summary>
            A required fuelflow system this is missing.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingMaximumDefault">
            <summary>
            A list of maximum default parameters not found in monitor default records for the location during the evaluation period that required when using fuel-specific missing data or bypass approach.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingMethodsForNoxNoxrMethod">
            <summary>
            List of missing method parameters NOXR and HI when NOX/NOXR Method is reported.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingNoxSystemForMethod">
            <summary>
            List of fuels without Appendix E or PEMS systems.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MissingQualificationForMethod">
            <summary>
            A list of Qual Type Codes that are required for the current method but are not found in the monitoring qualification table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MoistureDefaultParameter">
            <summary>
            Indicates which moisture default missing data parameter is required.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MoistureDefaultRequired">
            <summary>
            Indicates if a minimum moisture default is required if an HI formula has moisture as a factor and moisture method comes from a moisture system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MoistureMethodRequired">
            <summary>
            Set to true if formula has moisture as a factor.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitoringPlanCommentRecords">
            <summary>
            Records for MonitoringPlanComments at Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitoringPlanOpStatusRecords">
            <summary>
            All Unit Op Status Records for the units in the monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitoringPlanProgramList">
            <summary>
            Program records for the units in the Monitoring Plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorPlanCommentBeginDateValid">
            <summary>
            Indicates whether or not the Monitor Plan Comment Begin Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorPlanCommentEndDateValid">
            <summary>
            Indicates whether or not the Monitor Plan Comment End Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorQualificationBeginDateValid">
            <summary>
            Indicates in the BeginDate in the Monitor Qualification record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorQualificationDatesConsistent">
            <summary>
            Indicates if the BeginDate and EndDate in the Monitor Qualification record are consistent
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorQualificationEndDateValid">
            <summary>
            Indicates in the EndDate in the Monitor Qualification record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorQualificationPercentQualificationYearValid">
            <summary>
            Indicates if the QualificationYear in the Monitor Qualification Percent record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorQualificationPercentYr1QualificationDataYearValid">
            <summary>
            Indicates if the Yr1QualificationDataYear in the Monitor Qualification Percent record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorQualificationPercentYr2QualificationDataYearValid">
            <summary>
            Indicates if the Yr2QualificationDataYear in the Monitor Qualification Percent record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorQualificationPercentYr3QualificationDataYearValid">
            <summary>
            Indicates if the Yr3QualificationDataYear in the Monitor Qualification Percent record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorQualificationValid">
            <summary>
            Indicates if the Qualification Type is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MonitorSystemRecords">
            <summary>
            System Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MpcMec">
            <summary>
            Plugin for Span Value validity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MpLocations">
            <summary>
            Data view containing the monitor plan location information for a particular monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MpMethodRecords">
             <summary>
             Records for Methods for all locations in the monitoring configuration
            
            This parameter was originally used in Emissions but will also now be used in Monitoring Plan checks.  For Monitoring Plan checks it will include all the methods in the Monitoring Plan being evaluated.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.MpUnitStackConfigurationRecords">
            <summary>
            The Unit Stack Configuration records where the unit and stack/pipe are both part of a specific monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.NonLoadBasedIndicator">
            <summary>
            Non Load Based Indicator for a location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.NoxgNoxuDefaultsConsistent">
            <summary>
            Indicates whether an Inappropriate NOXG Default is Reported when NOXU Reported for Any Hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.NoxLmeUnit">
            <summary>
            Indicates if the LME unit reports NOX.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.NoxMpcToFuelCategoryAndUnitType">
            <summary>
            Cross-check table that defines Part 75 defaults for NOX maximum potential concentration based on fuel and unit type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.NoxSystemType">
            <summary>
            NOX System Type Code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.Nsps4tMethodParameterDescription">
            <summary>
            The method parameter description for the Current NSPS4T Program Parameter record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.O2ComponentRequired">
            <summary>
            Indicates if a formula requires an O2 value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.OverlappingParameterList">
            <summary>
            Contains the list of overlapping parameter values determined in a check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ParameterAndMethodAndLocationToFormulaCrosscheck">
            <summary>
            Contains the cross check that link the method and parameter codes for a method to the list of allowable formula codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ParameterToMethodCrossCheckTable">
             <summary>
             Cross check table linking Parameter Code to Method Code.
            
            Display: Columns 1 and 2 only.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ParameterUnitsOfMeasureLookupTable">
            <summary>
            Lists all combinations of valid Parameter Codes and  Units of Measure codes with min and max values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.Post2008FlowSystemPresent">
             <summary>
             This indicates if an flow system is present that is active or retired after 2007.
            
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ProgramCodeTable">
            <summary>
            Contains the program code information needed to produce program list for checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ProgramEvaluationBeginDate">
            <summary>
            The first date that the Program is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ProgramEvaluationEndDate">
            <summary>
            The last date that the Program is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ProgramIsOzoneSeasonList">
            <summary>
            Contains a list of ozone season program codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ProgramMethodParameterDescription">
            <summary>
            The method parameter description for the Current Program parameter record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ProgramParameterEvaluationBeginDate">
            <summary>
            Indicates the evaluation begin date for a Unit Program Parameter record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ProgramParameterEvaluationEndDate">
            <summary>
            Indicates the evaluation end date for a Unit Program Parmeter record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QaSupplementalDataRecords">
            <summary>
            The QA Supplemental Data records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationConsistentWithFuel">
            <summary>
            Indicates in QualificationTypeCode in Monitor Qualification record is approrpriate for the fuels burned.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationConsistentWithNonLoadBasedIndicator">
            <summary>
            Indicates in QualificationTypeCode in Monitor Qualification record is approrpriate for non-load based units.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationConsistentWithProgramAndReportingFrequency">
            <summary>
            Indicates in QualificationTypeCode in Monitor Qualification record is approrpriate for the program and reporting frequency.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationEvaluationEndDate">
            <summary>
            The last date that the monitor qualification record is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationEvaluationStartDate">
            <summary>
            The first date that the monitor qualification record is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationleeRecords">
            <summary>
            QualificationLEE Records at Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationLeeTestTypeCodeLookupTable">
            <summary>
            Contains the Qualification Lee Test Type Code lookup table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationlmeRecords">
            <summary>
            Qualification LME Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationPercentRecords">
            <summary>
            Qualification Percent Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationRecords">
            <summary>
            Qualification Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationSystemType">
            <summary>
            The System Type required for the Monitor Qualification.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationTypeCodeLookupTable">
            <summary>
            A lookup table of Qualification Type Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.QualificationTypeCodeValid">
            <summary>
            Indicates if the Qualification Type is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RangeOfOperationRequired">
            <summary>
            This determines if location must report range of operation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RectangularDuctWafEffectiveDateValid">
            <summary>
            This indicates whether or not the Rectangular Duct WAFBeginDate is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RectangularDuctWafEffectiveHourValid">
            <summary>
            This indicates whether or not the WAFBeginHour is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RectangularDuctWafEndDateValid">
            <summary>
            This indicates whether or not the Rectangular Duct WAFEndDate is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RectangularDuctWafEndHourValid">
            <summary>
            This indicates whether or not the Rectangular Duct WAFEndHour is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RectangularDuctWafNumberOfMethod1TraversePointsInWafTestValid">
            <summary>
            This indicates whether or not the Rectangular Duct WAF Number of Method 1 Traverse Points in WAF Test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RelatedMaximum">
            <summary>
            Identifies the maximum value fieldname associated with a default minimum value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RequiredDahsReportedForSystem">
            <summary>
            Indicates if there is a DAHS component reported for a system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RequiredNonDahsComponentsReportedForSystem">
            <summary>
            Indicates if the required non-DAHS components were reported.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RequiredProbe">
            <summary>
            Indicates if system requires a probe component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RequiredSpanReportedForComponentTypeAndAnalyzerRange">
            <summary>
            Incidates if Component Type and Analyzer Range Code is consistent with Span Parameter and Scale for non Dual range spans.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.RequiredSystemForMethod">
            <summary>
            A required system type for a monitor method that is either missing or duplicate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SampleAcquisitionMethodCodeLookupTable">
            <summary>
            Lookup table of sample acquistion method codes
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.So2LmeUnit">
            <summary>
            Indicates if the LME unit reports SO2.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanActiveStatus">
            <summary>
            Shows Active/Inactive Status for a Span
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanComponentTypeCodeValid">
            <summary>
            Indicates whether or not the Span Component Type Code reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanDatesAndHoursConsistent">
            <summary>
            Indicates whether Span Dates and Hours are Consistent.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanDefaultHighRangeValueValid">
            <summary>
            Indicates whether Default High Range Value is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanEndDateValid">
            <summary>
            Indicates whether or not Span End Date Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanEndHourValid">
            <summary>
            Indicates whether or not Span End Hour Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanEvaluationBeginDate">
            <summary>
            The first date that the span is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanEvaluationBeginHour">
            <summary>
            The first hour that the span is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanEvaluationEndDate">
            <summary>
            The last date that the span is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanEvaluationEndHour">
            <summary>
            The last hour that the span is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanFullScaleRangeValueValid">
            <summary>
            Indicates whether or not the Full Scale Range Value reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanMecValueValid">
            <summary>
            Indicates whether or not the MEC (Maximum Expected Concentration) is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanMethodCodeLookupTable">
            <summary>
            A lookup table of Span Method Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanMpcValueValid">
            <summary>
            Indicates whether or not the MPC (Maximum Potential Concentration) is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanRecords">
            <summary>
            Span Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanScaleCodeValid">
            <summary>
            Indicates whether or not the Span Scale Code reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanStartDateValid">
            <summary>
            Indicates whether or not the Span Start Date is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanStartHourValid">
            <summary>
            Indicates whether or not the Span Start Hour is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SpanValueValid">
            <summary>
            Indicates whether or not Span Value is Valid
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.StackActiveDateValid">
            <summary>
            Indicates whether or not the Stack Active Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.StackInformationRequired">
            <summary>
            Indicates whether the location attributes for the current location should include stack information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.StackPipeIdFormatValid">
            <summary>
            Indicates if StackPipeID is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.StackPipeRecords">
            <summary>
            Stack/pipe records associated with facility.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.StackRetireDateValid">
            <summary>
            Indicates whether or not the Stack Retire Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SubstituteDataCodeLookupTable">
            <summary>
            Lookup table of substitute data approach codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemActive">
            <summary>
            Shows Active/Inactive Status for a System
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemAnalyzerRangeRecords">
            <summary>
            A collection of records for all Analyzer Range records for components in the system with the associated component information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentActive">
            <summary>
            Indicates if component is active in a system during the evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentDatesAndHoursConsistent">
            <summary>
            Indicates whether or not the System Component Start Date and Start Hour are before the System Component End Date and End Hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentEndDateValid">
            <summary>
            Indicates if the value reported for the field is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentEndHourValid">
            <summary>
            Indicates whether or not the value in the field is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentEvaluationBeginDate">
            <summary>
            The first date that the system component is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentEvaluationBeginHour">
            <summary>
            The first hour that the system component is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentEvaluationEndDate">
            <summary>
            The last date that the system component is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentEvaluationEndHour">
            <summary>
            The last hour that the system component is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentRecords">
            <summary>
            The Monitor_System_Component records linked to the current component including the fields from the associated system record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentRecordValid">
            <summary>
            Indicates if component type is appropriate for system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentStartDateValid">
            <summary>
            Indicates whether or not the value in the System Component Start Date field is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemComponentStartHourValid">
            <summary>
            Indicates whether or not the value in this field is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemDatesAndHoursConsistent">
            <summary>
            Indicates ifsystem start date and hour is prior to end date and hour.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemDesignationCodeLookupTable">
            <summary>
            A lookup table of System Designation codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemDesignationCodeValid">
            <summary>
            Indicates whether or not the System Parameter Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemEndDateValid">
            <summary>
            Indicates whether or not the System End Date is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemEndHourValid">
            <summary>
            Indicates whether or not the System End Hour is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemEvaluationBeginDate">
            <summary>
            The first date that the monitor system is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemEvaluationBeginHour">
            <summary>
            The first hour that the monitor system is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemEvaluationEndDate">
            <summary>
            The last date that the monitor system is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemEvaluationEndHour">
            <summary>
            The last hour that the monitor system is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemFuelCodeValid">
            <summary>
            Indicates whether or not the System Parameter Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemFuelFlowRecords">
            <summary>
            System Fuel Flow and associated system data for the current system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemParameterCode">
            <summary>
            The emissions parameter measured by the system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemParameterLookupTable">
            <summary>
            Lookup table that stores system-wide values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemRecordValid">
            <summary>
            Indicates if the system record is active and has a valid system type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemStartDateValid">
            <summary>
            Indicates whether or not the System Start Date is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemStartHourValid">
            <summary>
            Indicates whether or not the System Start Hour is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemSystemComponentRecords">
            <summary>
            All Monitor_System_Component records for the current system including the fields from the associated component record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemTypeCodeValid">
            <summary>
            Indicates whether or not the System Type Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemTypeLookupTable">
            <summary>
            A lookup table of System Type codes and their associated Parameter codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemTypeToComponentTypeCrossCheckTable">
            <summary>
            Required component types in systems.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemTypeToFormulaParameterCrossCheckTable">
            <summary>
            Links system type to required formula parameters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemTypeToFuelGroupCrossCheckTable">
            <summary>
            Links system type code to fuel group code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemTypeToOptionalComponentTypeCrossCheckTable">
            <summary>
            Optional component types in system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.SystemUnitFuel">
            <summary>
            The unit fuel represented by the system fuel code in the monitoring system record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitCapacityBeginDateValid">
            <summary>
            Indicates whether or not the Unit Capacity Begin Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitCapacityDatesConsistent">
            <summary>
            Indicates whether or not the Unit Capacity Start and End Dates are Consistent.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitCapacityEndDateValid">
            <summary>
            Indicates whether or not the Unit Capacity End Date reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitCapacityEvaluationBeginDate">
            <summary>
            The date on which the evaluation period begins for the Unit Capacity Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitCapacityEvaluationEndDate">
            <summary>
            The date on which the evaluation period ends for the Unit Capacity Record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitCapacityRecordActive">
            <summary>
            Indicates whether or not the Unit Capacity Record is Active.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitCapacityRecords">
            <summary>
            List of all UNIT_CAPACITY records linked to the location (unit).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitFuelDemonstrationGcvValid">
            <summary>
            Indicates whether the Unit Fuel DemGCV reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitFuelDemonstrationSo2Valid">
            <summary>
            Indicates whether or not the Unit Fuel DemSO2 reported is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitFuelOzoneSeasonIndicatorValid">
            <summary>
            Indicates whether the Ozone Season is consistent with Primary/Secondary Indicator reported.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitFuelPrimarySecondaryIndicatorCodeValid">
            <summary>
            Indicates if Unit Fuel Primary/Secondary Indicator Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitMonitorSystemRecords">
            <summary>
            All monitor systems for a unit and all stack/pipes linked to the unit
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitOperatingStatusRecords">
            <summary>
            Operating Status records which apply to the unit.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitProgramExemptionRecords">
            <summary>
            Unit Program Exemption records which apply to the unit.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitsOfMeasureCodeLookupTable">
            <summary>
            A lookup table of Units of Measure Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitStackConfigurationRecords">
            <summary>
            The Unit Stack Configuration records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitStackEndDateValid">
            <summary>
            Indicates whether or not the Unit Stack Configuration End Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnitStackStartDateValid">
            <summary>
            Indicates whether or not the Unit Stack Configuration Start Date is Valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UnusedIds">
            <summary>
            A list of System, Component, and Formula IDs for the location that have been deleted from the MP, but have been reported in EM or QA data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.UsedIdentifierRecords">
            <summary>
            All Used Identifier Records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.ValidLocationTypes">
            <summary>
            Contains a list of the valid locations to use in a response plugin.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.WafActiveStatus">
            <summary>
            Indicates whether or not the WAF is active during the Evaluation Period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.WafDatesAndHoursConsistent">
            <summary>
            This indicates whether or not the WAF Dates and Hours are consistent.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.WafEvaluationBeginDate">
            <summary>
            The first date that the WAF is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.WafEvaluationBeginHour">
            <summary>
            The first hour that the WAF is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.WafEvaluationEndDate">
            <summary>
            The last date that the WAF is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.WafEvaluationEndHour">
            <summary>
            The last hour that the WAF is active during an evaluation period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.WafMethodCodeLookupTable">
            <summary>
            A list of WAF Method Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Mp.Parameters.MpParameters.WafRecords">
            <summary>
            All WAF records for the location.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Mp.Parameters.MpParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise returning null.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <returns>Returns the requested check parameter as an object if it exists, and as a null if it does not.</returns>
        </member>
        <member name="M:ECMPS.Checks.Mp.Parameters.MpParameters.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise does nothing.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <param name="parameterValue">The value to which to set the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.Mp.Parameters.MpParameters.Init(ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Initializes the values in the check parameter object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Mp.Parameters.MpParameters.RegisterParameters">
            <summary>
            Registers each check parameter.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.QaImport.Parameters.QaImportParameters">
            Parameter class for the QaImport process
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.Process">
            The process object for the current evaluation process.  Set by the actual process during initialization.
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.Category">
            The current category object set at the beginning of the category's processing of checks and nulled at the end of the processing.
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.ComponentRecords">
            <summary>
            Component Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.CurrentWorkspaceRataSummary">
            <summary>
            The current RATA Summary record in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.CurrentWorkspaceTestSummary">
            <summary>
            The current Test Summary record in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.ExtraneousRataSummaryFields">
            <summary>
            A list of fields reported in the RATA summary record not appropriate for the system type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.ExtraneousTestSummaryFields">
            <summary>
            A list of fields reported in the test summary record not appropriate for the test type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.InappropriateQaChildren">
            <summary>
            A list of children tables that are not appropriate for the test type in the current test summary record in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.InvalidQaLocations">
            <summary>
            A list of locations in the QA file that are incorrectly identified as a unit or stack/pipe.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.LocationRecords">
            <summary>
            The monitor locations in the monitor plan including linked stack information (active/retire date) and unit information (non load based indicator).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.MismatchedTestFields">
            <summary>
            A list of identifying fields whose values in the incoming test record that are not equal to the values in the existing test record for the same location, test type, and test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.MissingQaComponents">
            <summary>
            A list of ComponentIDs in the workspace that are not present in the production database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.MissingQaLocations">
            <summary>
            A list of UnitStackPipeIDs in the workspace that are not present in the production database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.MissingQaSystems">
            <summary>
            A list of SystemIDs in the workspace that are not present in the production database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.MonitorSystemRecords">
            <summary>
            System Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.ProductionComponentRecords">
            <summary>
            The component records in the ECMPS database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.ProductionMonitorMethodRecords">
            <summary>
            The monitor method records in the ECMPS database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.ProductionMonitorSystemRecords">
            <summary>
            The monitor system records in the ECMPS database.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.ProductionTestSummaryRecords">
            <summary>
            All Test Summary records in ECMPS database
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.QaSupplementalDataRecords">
            <summary>
            The QA Supplemental Data records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.TestLocationType">
            <summary>
            The location type associated with the current workspace test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceAeCorrSummaryRecords">
            <summary>
            All Appendix E Correlation Summary records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceAiremissiontestingRecords">
            <summary>
            All Air Emission Testing records in the workspace
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceAppendixEHeatInputFromGasRecords">
            <summary>
            All Appendix E Heat Input from Gas records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceAppendixEHeatInputFromOilRecords">
            <summary>
            All Appendix E Heat Input from Oil records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceCalibrationInjectionRecords">
            <summary>
            All Calibration Injection records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceComponentRecords">
            <summary>
            The component records and associated data in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceCycleTimeSummaryRecords">
            <summary>
            All Cycle Time Summary records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceFlowRataRunRecords">
            <summary>
            All Flow RATA Run records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceFlowToLoadCheckRecords">
            <summary>
            All Flow to Load Check records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceFlowToLoadReferenceRecords">
            <summary>
            All Flow to Load Reference records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceFuelFlowmeterAccuracyRecords">
            <summary>
            All Fuel Flowmeter Accuracy records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceFuelflowToLoadBaselineRecords">
            <summary>
            All Fuelflow to Load Baseline records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceFuelflowToLoadTestRecords">
            <summary>
            All Fuelflow to Load Test records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceHgSummaryRecords">
            <summary>
            Linearity Summary records associated with Test Type Codes of HGLINE and HGSI3
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceLinearitySummaryRecords">
            <summary>
            All Linearity Summary records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceLocationRecords">
            <summary>
            Location records in the workspace tables
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceOnlineOfflineCalibrationRecords">
            <summary>
            All Online Offline Calibration records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceProtocolgasRecords">
            <summary>
            All Protocol Gas records in the workspace tables
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceRataRecords">
            <summary>
            All RATA records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceSystemRecords">
            <summary>
            All system identifiers in workspace TestSummary and QACertEvent tables or Emissions tables
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceTestQualificationRecords">
            <summary>
            All Test Qualification records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceTestSummaryRecords">
            <summary>
            All Test Summary records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceTransmitterTransducerRecords">
            <summary>
            All Transmitter Transducer records in the workspace.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.QaImport.Parameters.QaImportParameters.WorkspaceUnitDefaultTestRecords">
            <summary>
            All Unit Default Test records in the workspace.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.QaImport.Parameters.QaImportParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise returning null.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <returns>Returns the requested check parameter as an object if it exists, and as a null if it does not.</returns>
        </member>
        <member name="M:ECMPS.Checks.QaImport.Parameters.QaImportParameters.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise does nothing.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <param name="parameterValue">The value to which to set the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.QaImport.Parameters.QaImportParameters.Init(ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Initializes the values in the check parameter object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.QaImport.Parameters.QaImportParameters.RegisterParameters">
            <summary>
            Registers each check parameter.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Qa.Parameters.QaParameters">
            Parameter class for the Qa process
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Process">
            The process object for the current evaluation process.  Set by the actual process during initialization.
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Category">
            The current category object set at the beginning of the category's processing of checks and nulled at the end of the processing.
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AccuracySpecificationCodeLookupTable">
            <summary>
            A lookup table of Accuracy Specification Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AccuracyTestCalcResult">
            <summary>
            The recalculated result of a fuel flowmeter accuracy test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AccuracyTestComponentTypeValid">
            <summary>
            Indicates if the component tested in the fuel flowmeter accuracy test has a valid component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AccuracyTestMethodCodeLookupTable">
            <summary>
            A lookup table of Accuracy Test Method Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AccuracyTestMethodValid">
            <summary>
            Indicates if the accuracy test method code in the fuel flowmeter accuracy test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AccuracyTestRecords">
            <summary>
            All fuel flowmeter accuracy test summary records for the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AirEmissionTestingRecords">
            <summary>
            The air emission testing records associated with the test being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AnalyzerRangeRecords">
            <summary>
            A collection of records for all Analyzer Range records for the component with the associated component information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcAvgHiRate">
            <summary>
            The calculated average hourly heat input rate for the operating level of an Appendix E Test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcGasHeatInput">
            <summary>
            The recalculated heat input for gas in an Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcLevelAverageHiRate">
            <summary>
            The average hourly heat input rate for the operating level of an Appendix E Test  recalculated from the heat input in the gas and oil records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcLevelMeanReferenceValue">
            <summary>
            The mean reference value for the operating level of an Appendix E Test  recalculated from the reference values in the run records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcMeanRv">
            <summary>
            The calculated mean reference value for the operating level of an Appendix E Test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcOilHeatInput">
            <summary>
            The recalculated heat input for oil in an Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcOilMass">
            <summary>
            The recalculated oil mass from volume and density in an Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcRunHiRate">
            <summary>
            The heat input rate for the Appendix E Test run recalculated from the heat input in the gas and oil records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeCalcRunTotalHi">
            <summary>
            The total heat input for the Appendix E Test run recalculated from the heat input in the gas and oil records.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeGasAndOilSystemsConsistent">
            <summary>
            Indicates if systems reported in the gas and oil flow records are consistent in all the runs of an Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeGasCalcHi">
            <summary>
            The calculated heat input for gas in an Appendix E gas record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeGasGcvMaximumValue">
            <summary>
            The maximum allowable value for gas GCV.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeGasGcvMinimumValue">
            <summary>
            The minimum allowable value for gas GCV.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeGasRecords">
            <summary>
            All Heat Input from Gas records for the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeHeatInputConsistentWithOperatingLevel">
            <summary>
            Indicates if heat input rate in the runs of an Appendix E test are consistent with the operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeHeatInputRateArray">
            <summary>
            An array of heat input rate for the Appendix E test segments.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeLastRunNumber">
            <summary>
            The RunNumber of the previous run of the Appendix E test when sort in OperatingLevelForRun, RunNumber order.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeLevelCount">
            <summary>
            A counter fo the current operating level of an Appendix E Test being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeLevelCountValidated">
            <summary>
            Indicates if the number of operating levels in the Appendix E test was validated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeLevelMaximumHiRate">
            <summary>
            The maximum heat input rate in the runs of an operating level of an Appendix E Test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeLevelRunCount">
            <summary>
            A counter fo the number of runs in the operating level of the Appendix E Test being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeLevelSumHiRate">
            <summary>
            The sum of the heat input rates in the runs of an operating level of an Appendix E Test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeLevelSumReferenceValue">
            <summary>
            The sum of the reference values in the runs of an operating level of an Appendix E Test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeMaximumNoxRate">
            <summary>
            An maximum NOx rate of the Appendix E test segments.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeNoxRateArray">
            <summary>
            An array of NOx rates for the Appendix E test segments.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilCalcHi">
            <summary>
            The calculated heat input for oil in an Appendix Eoil record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilCalcMassOil">
            <summary>
            The calculated mass oil in an Appendix Eoil record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilDensityMaximumValue">
            <summary>
            The maximum allowable value for oil density based on the units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilDensityMinimumValue">
            <summary>
            The minimum allowable value for oil density based on the units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilDensityUom">
            <summary>
            The oil density units of measure code appropriate for the volume units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilDensityUomValid">
            <summary>
            Indicates if the oil density units of measure code is appropriate for the volume units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilGcvMaximumValue">
            <summary>
            The maximum allowable value for oil GCV based on the units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilGcvMinimumValue">
            <summary>
            The minimum allowable value for oil GCV based on the units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilGcvUom">
            <summary>
            The oil GCV units of measure code appropriate for the volume units of measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilGcvUomValid">
            <summary>
            Indicates if the Oil GCV UOM Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilRecords">
            <summary>
            All Heat Input from Oil records for the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeOilSystemType">
            <summary>
            The SystemTypeCode of the oil system in the Heat Input from Oil records for an Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunCalcHi">
            <summary>
            The calculated heat input for an Appendix E run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunCalcHiRate">
            <summary>
            The calculated heat input rate for an Appendix E run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunLength">
            <summary>
            The length of the Appendix E Test run in minutes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunRecords">
            <summary>
            All Run records for the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunSequence">
            <summary>
            A string of run numbers in the APPE test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunSequenceConsecutive">
            <summary>
            Indicates if the sequence of run numbers in the Appendix E test is consecutive.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunSequenceValid">
            <summary>
            Indicates if the sequence of run numbers in the APPE test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunSystemCount">
            <summary>
            The number of Heat Input from Oil and Gas records in the runs of an Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeRunTimesValid">
            <summary>
            Indicates if the run times in the APPE test are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeSummaryRecords">
            <summary>
            All Summary records for the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeSystemFuelCode">
            <summary>
            The FuelCode of the NOXE system in the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeSystemList">
            <summary>
            The list of fuelflow Monitoring System IDs in the Heat Input from Gas and Oil records for an Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeSystemsWithInconsistentUom">
            <summary>
            The list of fuelflow Monitoring System IDs in the Heat Input from Oil records with inconsistent Volume Units of Measure.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeSystemValid">
            <summary>
            Indicates if system type is valid for the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeTestBeginDate">
            <summary>
            The begin date of the first run of the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeTestBeginHour">
            <summary>
            The begin hour of the first run of the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeTestBeginMinute">
            <summary>
            The begin minute of the first run of the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeTestEndDate">
            <summary>
            The end date of the last run of the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeTestEndHour">
            <summary>
            The end hour of the last run of the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeTestEndMinute">
            <summary>
            The end minute of the last run of the Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeTestRecords">
            <summary>
            All Appendix E test records for the system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AppeUseCalculatedRunHi">
            <summary>
            Indicates if the recalculated total heat input for the run was used instead of the reported value to recalculate heat input rate.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ApsCodeLookupTable">
            <summary>
            A list of APS Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.AssociatedSystem">
            <summary>
            Collection of Data Elements for the Monitoring System in the test being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateAppeSegments">
            <summary>
            Indicates if the Appendix E test produced valid data to define segments.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateAverageGrossUnitLoad">
            <summary>
            Indicates whether Average Gross Unit Load should be calculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateLinearityLevel">
            <summary>
            Indicates that the results of the linearity level may be calculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateLinearityTest">
            <summary>
            Indicates that the results of the linearity test may be calculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateRataLevel">
            <summary>
            Indicates if calculations should be performed for the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateRunVelocity">
            <summary>
            Indicates if the run velocity of a flow RATA run can be recalculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateUnitDefaultNoxRate">
            <summary>
            Indicates if the default emission rate for the unit can be calculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateUpscaleCalibrationInjection">
            <summary>
            Indicates that the results of the upscale injection of a 7day calibration test can be recalculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalculateZeroCalibrationInjection">
            <summary>
            Indicates that the results of the zero-level injection of a 7day calibration test can be recalculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationInjectionCount">
            <summary>
            The number of calibration injection records in the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationInjectionTimesAppropriate">
            <summary>
            Indicates if the injections of a 7day calibration test were performed on different days.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationInjectionTimesValid">
            <summary>
            Indicates if all the injection dates, times, and hours of a 7day calibration test are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationMaximumUpscaleReferenceValue">
            <summary>
            The maximum reference value in the upscale injections of the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationMaximumZeroReferenceValue">
            <summary>
            The maximum reference value in the zero-level injections of the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationMinimumUpscaleReferenceValue">
            <summary>
            The minimum reference value in the upscale injections of the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationMinimumZeroReferenceValue">
            <summary>
            The minimum reference value in the zero-level injections of the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestAborted">
            <summary>
            Indicates if the 7day calibration test was aborted.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestBeginDate">
            <summary>
            The begin date of the first injection in the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestBeginHour">
            <summary>
            The begin hour of the first injection in the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestBeginMinute">
            <summary>
            The begin minute of the first injection in the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestComponentTypeValid">
            <summary>
            Indicates if the component tested in the 7day calibration test has a valid component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestEndDate">
            <summary>
            The end date of the last injection in the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestEndHour">
            <summary>
            The end hour of the last injection in the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestEndMinute">
            <summary>
            The end minute of the last injection in the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestRecords">
            <summary>
            All 7day calibration tests for the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestResult">
            <summary>
            The recalculated result of a 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestSuppDataId">
            <summary>
            The ID of the QA Supp Data record associated with the current 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationTestValidityPerformed">
            <summary>
            Indicates if overall test status of 7day calibration test can be determined.  Used for insuring correct levels.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationUpscaleGasLevelCode">
            <summary>
            The upscale gas level code for the 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationUpscaleInjectionCalcApsIndicator">
            <summary>
            The recalculated APS indicator for the upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationUpscaleInjectionCalcResult">
            <summary>
            The recalculated calibration error or difference for the upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationUpscaleReferenceValuePercentOfSpan">
            <summary>
            The percent of span value of the reference value of a upscale injection of a 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationZeroInjectionCalcApsIndicator">
            <summary>
            The recalculated APS indicator for the zero-level injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationZeroInjectionCalcResult">
            <summary>
            The recalculated calibration error or difference for the zero-level injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CalibrationZeroReferenceValuePercentOfSpan">
            <summary>
            The percent of span value of the reference value of a zero level injection of a 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CompletionTestDateAndHourValid">
            <summary>
            Indicates if the reported completion test date and hour of a QA Cert event is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ComponentLinearityInjectionRecords">
            <summary>
            All linearity injection records (with associated linearity test information) for all linearity tests associated with the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ComponentRecords">
            <summary>
            Component Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ConditionalBeginDateAndHourValid">
            <summary>
            Indicates if the reported conditional begin date and hour of a QA Cert event is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CrosscheckProtocolgasparametertotype">
            <summary>
            This parameter contains the Protocol Gas Parameter to Type cross check table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Current7DayCalibrationTest">
            <summary>
            The Test Summary record for the 7day calibration test summary record being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentAccuracyTest">
            <summary>
            The Test Summary and Fuel Flow Accuracy records for the fuel flowmeter accuracy test being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentAppendixEHiForGas">
            <summary>
            The Heat Input for Gas record for the Appendix E test being evaluated and associated data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentAppendixEHiForOil">
            <summary>
            The Heat Input for Oil record for the Appendix E test being evaluated and associated data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentAppendixERun">
            <summary>
            The APPE Correlation Test Run record being evaluated and associated test data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentAppendixESummary">
            <summary>
            The APPE Correlation Test Summary being evaluated and associated test data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentAppendixETest">
            <summary>
            The Test Summary record for the Appendix E test being evaluated and associated location and system data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentCalibrationInjection">
            <summary>
            The Calibration Injection record (with associated 7-day calibration test summary information) being evaluated.  These are sorted in zero injection date order.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentComponent">
            <summary>
            List of information for the Current record in Component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentCycleTimeInjection">
            <summary>
            The Cycle Time Injection record for the cycle time test being evaluated and associated data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentCycleTimeTest">
            <summary>
            The Test Summary and Cycle Time Summary records for the cycle time test being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentFlowRataRun">
            <summary>
            The current Flow RATA Run record being evaluated and it associated Test Summary, RATA, RATA Summary, and RATA Run data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentFlowToLoadCheck">
            <summary>
            The Test Summary and Flow to Load Check records for the Flow to Load Reference data being evaluated and associated location and system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentFlowToLoadReference">
            <summary>
            The Test Summary and Flow to Load Reference Data records for the Flow to Load Reference data being evaluated and associated location and system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentFuelFlowToLoadBaseline">
            <summary>
            Collection of Data Elements for the Fuel Flow to Load Baseline Record being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentFuelFlowToLoadTest">
            <summary>
            Collection of Data Elements for the Fuel Flow to Load Test being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentLinearityInjection">
            <summary>
            The Linearity Injection record (with associated summary and test information) being evaluated.  These are sorted in descending date/time order for the gas level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentLinearitySummary">
            <summary>
            The Linearity Summary record (with associated test information) being evaluated.  They are processed in gas level code order.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentLinearityTest">
            <summary>
            The Test Summary record for the linearity record being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentLocation">
            <summary>
            The monitor location being evaluated including linked stack information (active/retire date) and unit information (non load based indicator).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentMonitorLocation">
            <summary>
            The Current Monitor Location being processed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentOocTest">
            <summary>
            The Test Summary record for the online offline calibration test summary record being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentProtocolGasRecord">
             <summary>
             The current Protocol Gas record being evaluated.
            
            Record Identifier if Cylinder ID is not null:  "Cylinder ID " + Cylinder_Identifier
            Record Identifier if Cylinder ID is null:  "Gas Level " + Gas_Level_Cd + " Gas Type " + Gas_Type_Cd
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentQaCertEvent">
            <summary>
            The QA Cert Event record being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentRata">
            <summary>
            The Test Summary and RATA records for the RATA being evaluated and associated location, system, and test claim data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentRataRun">
            <summary>
            The current RATA Run record being evaluated and it associated Test Summary, RATA, RATA Summary, and Flow RATA Run data
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentRataSummary">
            <summary>
            The RATA Summary record being evaluated and it associated TestSummary and RATA data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentRataTraverse">
            <summary>
            The current RATA Traverse record being evaluated and it associated Test Summary, RATA, RATA Summary, RATA Run, and Flow RATA Run data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentRecord">
            <summary>
            The record being evaluated on the data entry screen.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentSystem">
            <summary>
            Collection of Data Elements for the Monitoring System being evaluated
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentTest">
            <summary>
            The Test Summary record for the test being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentTestExtensionExemption">
            <summary>
            The Test Extension Exemption record being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentTestQualification">
            <summary>
            The TestQualification record and associated test data being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentTransmitterTransducerTest">
            <summary>
            The Test Summary and Transmitter Transducer records for the transmitter transducer test being evaluated and associated location and component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentUnitDefaultRun">
            <summary>
            The Unit Default Test Run record being evaluated and associated test data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CurrentUnitDefaultTest">
            <summary>
            The Test Summary and Unit Default Test record of the unit default test being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeCalcInjectionCycleTime">
            <summary>
            The recalculated injection cycle time.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeCalcTestResult">
            <summary>
            The recalculated result of a cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeCalcTotalCycleTime">
            <summary>
            The recalculated total cycle time for the system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeHighInjectionCount">
            <summary>
            The number of high-level injections in the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeHighReferenceValue">
            <summary>
            The reference value in the high-level injection of the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeInjectionDatesConsistent">
            <summary>
            Indicates if the reported begin time of a cycle time injection is prior to its end time.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeInjectionGasLevelValid">
            <summary>
            Indicates if the gas level code of a cycle time injection is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeInjectionRecords">
            <summary>
            All cycle time injections for the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeInjectionTimesValid">
            <summary>
            Indicates if the injection times of a cycle time test are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeReferencePercentOfSpan">
            <summary>
            A calculation of the percent of the span value of the reference value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestAborted">
            <summary>
            Indicates if the cycle time test was aborted.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestBeginDate">
            <summary>
            The begin date of the first injection in the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestBeginHour">
            <summary>
            The begin hour of the first injection in the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestBeginMinute">
            <summary>
            The begin minute of the first injection in the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestComponentTypeValid">
            <summary>
            Indicates if the component tested in the cycle time test has a valid component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestEndDate">
            <summary>
            The end date of the last injection in the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestEndHour">
            <summary>
            The end hour of the last injection in the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestEndMinute">
            <summary>
            The end minute of the last injection in the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestRecords">
            <summary>
            All cycle time tests for the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestSuppDataId">
            <summary>
            The ID of the QA Supp Data record associated with the current cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestTotalTimeCalculated">
            <summary>
            Indicates if overall total time of the cycle time test was calculated.  Used for insuring correct levels.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeTestValidityDetermined">
            <summary>
            Indicates if overall test status of cycle time test can be determined.  Used for insuring correct levels.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeZeroInjectionCount">
            <summary>
            The number of zero-level injections in the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.CycleTimeZeroReferenceValue">
            <summary>
            The reference value in the zero-level injection of the cycle time test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DefaultRecords">
            <summary>
            Default records with default info included.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Duplicate7DayCalibration">
            <summary>
            Indicates if another 7day calibration test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateAppendixETest">
            <summary>
            Indicates if another Appendix E test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateCycleTime">
            <summary>
            Indicates if another cycle time test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateFlowToLoadCheck">
            <summary>
            Indicates if another flow to load check has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateFlowToLoadReference">
            <summary>
            Indicates if another flow to load reference data record has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateFuelFlowAccuracy">
            <summary>
            Indicates if another fuel flow accuracy test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateFuelFlowToLoadBaseline">
            <summary>
            Indicates if another fuel flow to load baseline data record has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateFuelFlowToLoadTest">
            <summary>
            Indicates if another fuel flow to load test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateLinearity">
            <summary>
            Indicates if another linearity check has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateLinearityInjection">
            <summary>
            Indicates if another linearity injection has been assigned the same gas level and time.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateMiscellaneousTest">
            <summary>
            Indicates if another test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateOnlineOfflineCalibration">
            <summary>
            Indicates if another online offline calibration test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateRata">
            <summary>
            Indicates if another RATA has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateTransmitterTransducer">
            <summary>
            Indicates if another transmitter transducer test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.DuplicateUnitDefaultTest">
            <summary>
            Indicates if another unit default test has been assigned the same test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EcmpsMpBeginDate">
            <summary>
            The date when new rules for ECMPS go into effect for the MP evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EvaluateAccuracyTest">
            <summary>
            Indicates if the fuel flowmeter accuracy test should be evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EvaluateAccuracyTestScreen">
            <summary>
            Indicates if data on the fuel flowmeter accuracy test data entry screen should be evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EvaluateOocInjections">
            <summary>
            Indicates if injections in the online offline calibration test should be evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EvaluateOocScreen">
            <summary>
            Indicates if injection data on the online offline calibration test data entry screen should be evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EventCodeToSystemOrComponentTypeCrossCheckTable">
            <summary>
            Indicates the types of monitoring systems and components that are appropriate for the QA certification event code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EventCodeToTestTypeCodesCrossCheckTable">
            <summary>
            Indicates the types of tests that are required for the QA certification event code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EventDateValid">
            <summary>
            Indicates if the reported event date of a QA Cert event is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.EventHourValid">
            <summary>
            Indicates if the reported event hour of a QA Cert event is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ExtraAppeTest">
            <summary>
            Indicates if the same Appendix E test has been reported with a different test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ExtraLinearityTest">
            <summary>
            Indicates if the same linearity test has been reported with a different test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ExtraRata">
            <summary>
            Indicates if the same RATA has been reported with a different test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ExtraUnitDefaultTest">
            <summary>
            Indicates if the same Unit Default test has been reported with a different test number.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.F2lCalcFlow">
            <summary>
            The recalculated average reference method stack flow in the flow-to-load reference data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.F2lCalcGhr">
            <summary>
            The recalculated gross heat rate in the flow-to-load reference data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.F2lCalcGul">
            <summary>
            The reecalculated average gross unit load in the flow-to-load reference data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.F2lCalcRatio">
            <summary>
            The reecalculated flow-to-load ratio in the flow-to-load reference data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FacilityQaSupplementalAttributeRecords">
            <summary>
            The QA Supplemental Attribute records for all of a facility's tests that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FacilityQaSupplementalDataRecords">
            <summary>
            The QA Supplemental Data records for all of a facility's tests that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FacilityQualificationRecords">
            <summary>
            The Monitor Qualification records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FacilityRataRunRecords">
            <summary>
            The RATA run records and associated RATA data for all of a facility's RATAs that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FacilityRataSummaryRecords">
            <summary>
            The RATA Summary records for for all of a facility's RATAs that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FacilityUnitCapacityRecords">
            <summary>
            List of all UNIT_CAPACITY records for the facility.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FacilityUnitStackConfigurationRecords">
            <summary>
            The unit stack configuration records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasAccuracyTestBaselineStartDate">
            <summary>
            The test end date or reinstallation date of the Accuracy Test in the fuel flow to load baseline data record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasAccuracyTestBaselineStartHour">
            <summary>
            The test end hour or reinstallation hour of the Accuracy Test in the fuel flow to load baseline data record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasBaselineStartDate">
            <summary>
            The derived baseline start date based on the accuracy test and PEI in the fuel flow to load baseline data record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasBaselineStartHour">
            <summary>
            The derived baseline start hour based on the accuracy test and PEI in the fuel flow to load baseline data record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasCollectionPeriodHours">
            <summary>
            The length of the fuel flow to load collection period in hours.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasFuelFlowToLoadRatioUomCodeValid">
            <summary>
            Indicates if the fuel-flow-to-load ratio UOM code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasGhrUomCodeValid">
            <summary>
            Indicates if the fuel-flow-to-load GHR UOM code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasLoadUomCode">
            <summary>
            The load units of measure code for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasMethodValid">
            <summary>
            Indicates if the fuel-flow-to-load baseline is reported either as fuel flow to load ratio or GHR.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasPeiRequired">
            <summary>
            Indicates if a PEI is required for a fuel flow-to-load baseline data record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasSystemValid">
            <summary>
            Indicates if system type is valid for the fuel-flow-to-load baseline data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2lbasTestBasis">
            <summary>
            The Test Basis (FF2L ratio or GHR) of the fuel flow-to-load baseline data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.Ff2ltstSystemValid">
            <summary>
            Indicates if system type is valid for the fuel-flow-to-load test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FirstEcmpsReportingPeriod">
            <summary>
            The first ECMPS Reporting Period for the related facility.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowRataLevelValid">
            <summary>
            Indicates whether calculations can be performed for the operating level of a flow RATA using method 2F, 2G, 2J, or M2H.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowRataRecordValid">
            <summary>
            Indicates if Flow RATA Run or RATA Traverse record is appropriate for the reference method.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowRataRunRecords">
            <summary>
            All Flow Run records associated with a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowRataRunValid">
            <summary>
            Indicates if Flow RATA Run record is present and valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadCheckAverageGrossUnitLoad">
            <summary>
            Average gross unit load in the associated flow-to-load reference data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadCheckCalcTestResult">
            <summary>
            Recalculated test result for the flow-to-load check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadCheckLoadUnitsOfMeasure">
            <summary>
            The load units of measure in the associated load record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadCheckOperatingLevelCodeValid">
            <summary>
            Indicates if the reported operating level code of flow-to-load check is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadCheckRecords">
            <summary>
            All Flow to Load Check and associated Test Summary records for the monitoring system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadCheckSuppDataId">
            <summary>
            The ID of the QA Supp Data record associated with the flow-to-load check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadCheckSystemValid">
            <summary>
            Indicates if system type is valid for the flow-to-load check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceCalcAverageGrossUnitLoad">
            <summary>
            Recalculated average gross unit load during the used runs of the reference RATA(s) at the operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceCalcAverageReferenceMethodFlow">
            <summary>
            Recalculated average reference values during the used runs of the reference RATA(s) at the operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceCalcFlowToLoadRatio">
            <summary>
            Recalculated flow-to-load ratio
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceCalcGhr">
            <summary>
            Recalculated gross heat rate
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceMethodologyValid">
            <summary>
            Indicates if flow-to-load reference data was reported as using either flow-to-load ratio or GHR methodology (but not both)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceOperatingLevelCodeValid">
            <summary>
            Indicates if the reported operating level code of flow-to-load reference data is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceRataSummaryId">
            <summary>
            The RATASummaryID of the associated operating level of the reference RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceRataSuppId">
            <summary>
            The QASuppDataID of the associated flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceRataTestNumberValid">
            <summary>
            Indicates if the reported RATA test number of flow-to-load reference data is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceRecords">
            <summary>
            All Flow to Load Reference Data Test Summary records for the monitoring system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceSuppDataId">
            <summary>
            The ID of the QA Supp Data record associated with the flow-to-load reference data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FlowToLoadReferenceSystemValid">
            <summary>
            Indicates if system type is valid for the flow-to-load reference data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FuelCodeLookupTable">
            <summary>
            A lookup table of Fuel codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FuelFlowToLoadBaselineRecords">
            <summary>
            Fuel Flow to Load  Baseline Records for the system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FuelFlowToLoadBaselineUomToLoadUomAndSystemtypeCrossCheckTable">
            <summary>
            Links appropriate fuel-to-load baseline UOM code to load UOM code and system type code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.FuelFlowToLoadTestRecords">
            <summary>
            Fuel Flow to Load  Test Records for the system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.GasTypeCodeLookupTable">
            <summary>
            Lookup table of PGVP Gas Type Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.HighAverageGrossUnitLoad">
            <summary>
            The calculated average gross unit load for the high operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.HighBaf">
            <summary>
            The calculated BAF for the high operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.HighestRataCemValue">
            <summary>
            The highest CEM Value used in the calculation of relative accuracy for a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.HighestRataRunNumber">
            <summary>
            The highest Run Number in a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.HighRunCount">
            <summary>
            The number of used runs for the high operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.HighSumGrossUnitLoad">
            <summary>
            The sum of the gross unit loads in the used runs for the high operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.HighSumReferenceValue">
            <summary>
            The sum of the reference values in the used runs for the high operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.InconsistentRataFields">
            <summary>
            A list of values in the RATA Summary record that are not equal to the calculated values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LastAppeMaximumHiRate">
            <summary>
            The maximum heat input rate in the runs of the previous operating level of an Appendix E Test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LastCalibrationInjectionDate">
            <summary>
            The date of the previous zero-level injection in a 7day calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LastInjectionTime">
            <summary>
            Time of the previous linearity injection (YYYYMMDDHHMM).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LastLinearityLevelCode">
            <summary>
            The Gas Level Code of the prior linearity summary record processed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LastRataRunNumber">
            <summary>
            The run number of the chronologically previous RATA run in an operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LastRataTraversePointId">
            <summary>
            The Traverse Point ID of the prior RATA Traverse record processed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityCalcAps">
            <summary>
            The calculated APS indicator for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityCalcMmv">
            <summary>
            The calculated mean measured value for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityCalcMrv">
            <summary>
            The calculated mean reference value for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityCalcPe">
            <summary>
            The calculated percent error for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityComponentValid">
            <summary>
            Indicates if component type is valid for the linearity test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityGasLevelValid">
            <summary>
            Indicates if gas level code is valid for the linearity summary record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityInjectionCount">
            <summary>
            The number of injections performed for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityInjectionIncluded">
            <summary>
            Indicates if the linearity was one of the last 3 injections performed at the calibration gas level, and was included in the calculations for that level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityInjectionRecords">
            <summary>
            The Linearity Injection records for the test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityInjectionReferenceValueValid">
            <summary>
            Indicates if the reference value in the linearity injection record contains a valid value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityInjectionTimesValid">
            <summary>
            Indicates if the injection times in a linearity check are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityInjectionTimeValid">
            <summary>
            Indicates if the Injection Date, Hour, and Minute in the linearity injection record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityIntermediateValues">
            <summary>
            A list of fields containing intermediate values that are inconsistent with recalculated value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityLevelList">
            <summary>
            A list of calibration gas levels in the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityLevelValid">
            <summary>
            Indicates if calculations can be performed for the gas level of a linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityMeasuredValueTotal">
            <summary>
            The sum of the measured values of the last three injections in the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityReferencePercentOfSpan">
            <summary>
            A calculation of the percent of the span value of the reference value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityReferenceValueConsistentWithSpan">
            <summary>
            Indicates if reference value of a linearity injection is consistent with the span value based on gas level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityReferenceValuesConsistent">
            <summary>
            Indicates if mid-leve reference values, which are less than high-level reference values and greater than low-level reference values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityReferenceValueTotal">
            <summary>
            The sum of the reference values of the last three injections in the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySequenceValid">
            <summary>
            Indicates if the sequence of linearity injections is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySummaryApsIndicator">
            <summary>
            Indicates if the alternate performance specification was used to determine the results for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySummaryMeanDifference">
            <summary>
            The calculated mean difference for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySummaryMeanMeasuredValue">
            <summary>
            The calculated mean measured value for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySummaryMeanReferenceValue">
            <summary>
            The calculated mean reference value for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySummaryPercentError">
            <summary>
            The calculated percent error for the gas level of the linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySummaryPercentErrorValid">
            <summary>
            Indicates if the reported percent error in the linearity summary record contains a valid value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySummaryRecords">
            <summary>
            The Linearity Summary records for the test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearitySuppDataId">
            <summary>
            The ID of the QA Supp Data record associated with the current linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestAborted">
            <summary>
            Indicates if the linearity test is aborted
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestBeginDate">
            <summary>
            Begin Date of linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestBeginHour">
            <summary>
            Begin Hour of linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestBeginMinute">
            <summary>
            Begin Minute of linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestEndDate">
            <summary>
            End Date of linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestEndHour">
            <summary>
            End Hour of linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestEndMinute">
            <summary>
            End Minute of linearity check.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestInjectionRecords">
            <summary>
            All linearity injection records in the test with their associated linearity summary data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestRecords">
            <summary>
            All linearity test summary records for the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestResult">
            <summary>
            Calculated linearity test result.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LinearityTestType">
            <summary>
            Test Type Description (either linearity of 3-pt system integrity check).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LoadLowerBoundary">
            <summary>
            The LowerOperationBoundary in the active load record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LoadRecords">
            <summary>
            Load records for current location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LoadUpperBoundary">
            <summary>
            The UpperOperationBoundary in the active load record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LocationAnalyzerRangeRecords">
            <summary>
            A collection of records for all Analyzer Range records for the location with the associated component information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LocationAttributeRecords">
            <summary>
            The monitor location attribute records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LocationControlRecords">
             <summary>
             Unit Control records which apply to the monitoring location.
            
            For a unit, this is the Unit Control records for the unit.
            
            For a stack or pipe, this is the Unit Control records for all units linked to the stack or pipe via Unit Stack Configuration records.  The  InstallDate for the location control record should be the later of the InstallDate in the Unit Control record and the StartDate in the Unit Stack Configuration record.  The  RetireDate for the location control record should be the earlier of the RetireDate in the Unit Control record and the EndDate in the Unit Stack Configuration record.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LocationOperatingStatusRecords">
            <summary>
            Unit Operating Status records which are linked to the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LocationReportingFrequencyRecords">
             <summary>
             Unit Program Reporting Frequency records which apply to the monitoring location.
            
            For a unit, this is the Unit Reporting Frequency records for the unit.
            
            For a stack or pipe, this is the Unit Reporting Frequency records for all units linked to the stack or pipe via Unit Stack Configuration records.
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LocationSystemComponentRecords">
            <summary>
            System Component Records at location with associated component data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LocationTestRecords">
            <summary>
            All test summary records associated with the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LocationUnitTypeRecords">
            <summary>
            Unit Type records for the unit or all the units linked to a stack or pipe.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LowAverageGrossUnitLoad">
            <summary>
            The calculated average gross unit load for the low operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LowBaf">
            <summary>
            The calculated BAF for the low operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LowRunCount">
            <summary>
            The number of used runs for the low operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LowSumGrossUnitLoad">
            <summary>
            The sum of the gross unit loads in the used runs for the low operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.LowSumReferenceValue">
            <summary>
            The sum of the reference values in the used runs for the low operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MethodRecords">
            <summary>
            Records for Methods at Location
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MidAverageGrossUnitLoad">
            <summary>
            The calculated average gross unit load for the mid operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MidBaf">
            <summary>
            The calculated BAF for the mid operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MidRunCount">
            <summary>
            The number of used runs for the mid operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MidSumGrossUnitLoad">
            <summary>
            The sum of the gross unit loads in the used runs for the mid operating level.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MidSumReferenceValue">
            <summary>
            The sum of the reference values in the used runs for the mid operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MiscellaneousTestIdFieldname">
            <summary>
            The fieldname of the component or monitoring system ID reported in the test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MiscellaneousTestTypeValid">
            <summary>
            Indicates if the miscellaneous test should be evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MonitoringPlanLocationRecordsForQa">
            <summary>
            MonitoringPlanLocation records associated with QA entity being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.MonitorSystemRecords">
            <summary>
            System Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.NormalRataOperatingLevels">
            <summary>
            The normal operating levels at which a flow RATA was performed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OfflineUpscaleCalcAps">
            <summary>
            The recalculated APS indicator for the offline upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OfflineUpscaleCalcResult">
            <summary>
            The recalculated result (CE or diff) for the offline upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OfflineZeroCalcAps">
            <summary>
            The recalculated APS indicator for the offline zero injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OfflineZeroCalcResult">
            <summary>
            The recalculated result (CE or diff) for the offline zero injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OilVolumeUomToDensityUomToGcvUom">
            <summary>
            Identifies valid relationships between UOM codes for Oil Volume, Density, and GCV for Appendix E test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OnlineUpscaleCalcAps">
            <summary>
            The recalculated APS indicator for the online upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OnlineUpscaleCalcResult">
            <summary>
            The recalculated result (CE or diff) for the online upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OnlineZeroCalcAps">
            <summary>
            The recalculated APS indicator for the online zero injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OnlineZeroCalcResult">
            <summary>
            The recalculated result (CE or diff) for the online zero injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocInjectionTimesValid">
            <summary>
            Indicates if the reported injection date/hour of all injections in a online offline calibration test are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocOfflineUpscaleInjectionCalcApsIndicator">
            <summary>
            The recalculated APS indicator for the offline upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocOfflineUpscaleInjectionCalcResult">
            <summary>
            The recalculated calibration error or difference for the offline upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocOfflineZeroInjectionCalcApsIndicator">
            <summary>
            The recalculated APS indicator for the offline zero-level injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocOfflineZeroInjectionCalcResult">
            <summary>
            The recalculated calibration error or difference for the offline zero-level injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocOnlineUpscaleInjectionCalcApsIndicator">
            <summary>
            The recalculated APS indicator for the online upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocOnlineUpscaleInjectionCalcResult">
            <summary>
            The recalculated calibration error or difference for the online upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocOnlineZeroInjectionCalcApsIndicator">
            <summary>
            The recalculated APS indicator for the online zero-level injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocOnlineZeroInjectionCalcResult">
            <summary>
            The recalculated calibration error or difference for the online zero-level injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocTestCalcResult">
            <summary>
            The recalculated result of a online offline calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocTestComponentTypeValid">
            <summary>
            Indicates if the component tested in the online offline calibration test has a valid component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocTestRecords">
            <summary>
            All online offline calibration tests for the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocUpscaleReferenceValuePercentOfSpan">
            <summary>
            The percent of span value of the reference value of a upscale injection of a online offline calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OocZeroReferenceValuePercentOfSpan">
            <summary>
            The percent of span value of the reference value of a zero level injection of a online offline calibration test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OperatingLevelCodeLookupTable">
            <summary>
            Operating Level Code Lookup Table where op level code is equal to H, L, M, or N.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OverallBaf">
            <summary>
            The overall BAF for a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.OverallRelativeAccuracy">
            <summary>
            The calculated relative accuracy for the RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ParameterUnitsOfMeasureLookupTable">
            <summary>
            Lists all combinations of valid Parameter Codes and  Units of Measure codes with min and max values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.PressureMeasureCodeLookupTable">
            <summary>
            A lookup table of Pressure Measure Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.PreviousUnitDefaultLevelCalculated">
            <summary>
            Indicates if the average NOx emission rate was calculated for the previous operating level of a unit default test.  
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasApprovalRequested">
            <summary>
            Indicates whether approval was requested for a protocol gas record with a non-standard set of components.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasBalanceComponentList">
            <summary>
            Contains the list of gas component codes in a Protocol Gas row that are balance components.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasComponentListValid">
            <summary>
            Indicates whether the Gas Component Code list stored in the Gas Type Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasCylinderIdList">
            <summary>
            Contains the Cylinder ID in a protocol gas row
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasDuplicateComponentList">
            <summary>
            Contains the list of gas component codes in a Protocol Gas row that are duplicates.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGases">
            <summary>
            A list of gases (type + level) used in the test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasExclusiveComponentList">
            <summary>
            Contains the list of gas component codes in a Protocol Gas row that a source should only use exclusive of other gas component codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasInvalidComponentList">
            <summary>
            Contains the list of invalid Gas Component Codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasParameter">
            <summary>
            The ComponentTypeCode or RATA Reference Method of the test associated with the Protocol Gas record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ProtocolGasVendorLookupTable">
            <summary>
            A lookup table of Protocol Gas Vendors.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaCertEventAndTypeConsistent">
            <summary>
            Indicates if type of system or component is appropriate for the event code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaCertEventComponentType">
            <summary>
            The ComponentTypeCode of the component in the QA Cert Event record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaCertEventMissingTestTypes">
            <summary>
            A list of TestTypeCodes required for a QA Cert Event but not included in the RequiredTestCode.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaCertEventRequiredIdCode">
            <summary>
            Code which indicates if the MonitoringSystemID or ComponentID or both are must be reported in the event record based on RequiredTestCode.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaCertEventSystemType">
            <summary>
            The SystemTypeCode of the monitoring system in the QA Cert Event record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaCertEventValidSystemOrComponent">
            <summary>
            Code which type of system or component is appropriate for the event record based on RequiredTestCode.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaCertificationEventRecords">
            <summary>
            The QA Certification Event records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaSupplementalAttributeRecords">
            <summary>
            The QA Supplemental Attribute records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.QaSupplementalDataRecords">
            <summary>
            The QA Supplemental Data records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataAborted">
            <summary>
            RATA is aborted
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataAdjustedVelocityDetermined">
            <summary>
            Indicates if the replacement velocity of the traverse point was added to the sum of the adjusted velocities for the run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataAdjustedWafDetermined">
            <summary>
            Indicates if the adjusted calculated WAF for the run of a flow RATA has been determined.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataApplicableWaf">
            <summary>
            The WAF applied to the runs for the operating level of a Method 2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataBeginDate">
            <summary>
            Earlies run Begin Date of RATA
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataBeginHour">
            <summary>
            Earliest run Begin Hour of RATA
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataBeginMinute">
            <summary>
            Earlies Run Begin Minute of RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcAdjustedRunVelocity">
            <summary>
            The recalculated average run velocity adjusted for wall effects for a method 2FH, 2GH, or M2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcAps">
            <summary>
            The recalculated APS indicator of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcArea">
            <summary>
            The recalculated stack area for a method 2F, 2G, or M2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcAverageAdjustedVelocity">
            <summary>
            The recalculated average velocity adjusted for wall effects for the run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcAverageGul">
            <summary>
            The recalculated average gross unit load of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcAverageStackFlow">
            <summary>
            The recalculated stack flow for the run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcAverageStackFlow2H">
            <summary>
            The recalculated stack flow for the run of a Method 2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcAverageVelocity">
            <summary>
            The recalculated average velocity (without wall effects) of a flow RATA run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcBaf">
            <summary>
            The recalculated bias adjustment factor of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcCalculatedWaf">
            <summary>
            The recalculated CalculatedWAF for the run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcCc">
            <summary>
            The recalculated confidence coefficient of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcDryMolecularWeight">
            <summary>
            The recalculated dry molecular weight for the Flow RATA run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcDryMw">
            <summary>
            The recalculated dry molecular weight for a method 2F, 2G, or M2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcLevelWaf">
            <summary>
            The recalculated CalculatedWAF for the operating level of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcMeanCem">
            <summary>
            The recalculated mean CEM value of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcMeanDiff">
            <summary>
            The recalculated mean difference of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcMeanRv">
            <summary>
            The recalculated mean reference value of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcOverallBaf">
            <summary>
            The recalculated overall bias adjustment factor of the RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcOverallRata">
            <summary>
            The recalculated overall relative accuracy of the RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcOverallWaf">
            <summary>
            The WAF for the Operating Level as calculated by the software.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcPointVelocity">
            <summary>
            The recalculated traverse point velocity for a method 2F, 2G, or M2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcRa">
            <summary>
            The recalculated relative accuracy of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcRunRv">
            <summary>
            The recalculated average stack flow rate (run reference value) of a method 2F, 2G, or M2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcRunVelocity">
            <summary>
            The recalculated average run velocity for a method 2F, 2G, or M2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcRunWaf">
            <summary>
            The recalculated WAF for the run of a method 2FH, 2GH, or M2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcSd">
            <summary>
            The recalculated standard deviation of the differences of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcStackArea">
            <summary>
            The recalculated stack area for the method 2F, 2G, or 2H RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcStackPressure">
            <summary>
            The calculated stack pressure for the run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcTvalue">
            <summary>
            The TValue based on the number of runs in the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalculatedWafValid">
            <summary>
            Indicates if the CalculatedWAF for the run of a flow RATA can be recalculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcWetMolecularWeight">
            <summary>
            The recalculated wet molecular weight for the Flow RATA run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCalcWetMw">
            <summary>
            The recalculated dry molecular weight for a method 2F, 2G, or M2H flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataCheckWaf">
            <summary>
            Indicates if WAF for the Operating Level should be calculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataClaimCode">
            <summary>
            An exemption code associated with the RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataClaimCodeValid">
            <summary>
            Indicates if the Test Claim Code for a RATA is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataEndDate">
            <summary>
            Last run End Date of RATA
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataEndHour">
            <summary>
            Last run End Hour of RATA
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataEndMinute">
            <summary>
            Last run End Minute of RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataFrequency">
            <summary>
            Code that indicates the expiration date of the RATA based on calculated results.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataFrequencyCodeLookupTable">
            <summary>
            RATA Frequency Code Lookup Table
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataFrequencyDetermined">
            <summary>
            Dummy variable to create proper order of checks.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataFrequentlyUsedLevels">
            <summary>
            The frequently used operating levels at which a flow RATA was performed.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataHigherLevel">
            <summary>
            The higher to two operating levels in a multi-level RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataInvalidProbes">
            <summary>
            A list of invalid probe types used in a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataLevelList">
            <summary>
            A comma delimited list of the operating levels in the RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataLevelValid">
            <summary>
            Indicates whether calculations can be performed for the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataMaximumTraversePointCount">
            <summary>
            The maximum number of traverse points in the flow RATA runs used to calculate the wall effects adjustment factor.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataMaximumTraversePointCountForAllRuns">
            <summary>
            The maximum number of traverse points in all runs of the operating level of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataMinimumTraversePointCount">
            <summary>
            The minimum number of traverse points in the flow RATA runs used to calculate the wall effects adjustment factor.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataMinimumWallPoints">
            <summary>
            The minimum number of wall points used to calculate the replacement velocity in the exterior method 1 traverse points in the run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataNumberOfLoadLevels">
            <summary>
            The number of different operating levels in the run records of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataOperatingLevelValid">
            <summary>
            Indicates if the Operating Level Code for a RATA Summary and children records is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataPercentCo2Valid">
            <summary>
            Indicates if PercentCO2 in the Flow RATA Run record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataPercentMoistureValid">
            <summary>
            Indicates if PercentMoisture in the Flow RATA Run record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataPercentO2Valid">
            <summary>
            Indicates if PercentO2 in the Flow RATA Run record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataProbeTypes">
            <summary>
            The probe types associated with the RATA Run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRecords">
            <summary>
            All RATA Test Summary records for the monitoring system.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRectangularDuctWaf">
            <summary>
            The rectangular duct WAF for a location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataReferenceMethodValid">
            <summary>
            Indicates if RATA Reference Method Code is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRefMethodCode">
            <summary>
            The Reference Method Code for the RATA.  (Note: This is used to check Protocol Gas record, so it only applies to one-level RATAs.)
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataReplacementPointCount">
            <summary>
            The number of method 1 traverse points in a run of a flow RATA which are used to calculate the replacement velocity.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataResult">
            <summary>
            Calculated RATA result.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRunBeginTimeValid">
            <summary>
            Indicates if the Begin Date, Hour, and Minute for a RATA run are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRunCount">
            <summary>
            Number of runs used in an operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRunEndTimeValid">
            <summary>
            Indicates if the end date/hour/minutes in the RATA run record is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRunNumberValid">
            <summary>
            Indicates if the Run Number for a RATA Run and children records is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRunRecords">
            <summary>
            All Run records associated with a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataRunTimesValid">
            <summary>
            Indicates if the reported Run Begin and End Date/Hour/Minute of a RATA are consistent.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataStackDiameterValid">
            <summary>
            Indicates if stack diameter is valid for a flow RATA
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataStackFlowArray">
            <summary>
            An array of the stack flow rates for all the runs of a Method 2H RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumAdjustedVelocity">
            <summary>
            The sum of the velocities adjusted for wall effects for a run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumCemValues">
            <summary>
            Sum of the CEM values in the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumDifferences">
            <summary>
            Sum of differences between the CEM value and reference value in the operating level of a RATA
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumGrossUnitLoad">
            <summary>
            Sum of the average gross unit loads in the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryApsIndicator">
            <summary>
            Indicates if alternate performance specification was used to evaluate the results of the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryAverageGrossUnitLoad">
            <summary>
            The calculated average gross unit load for the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryBaf">
            <summary>
            The bias adjustment factor calculated for an operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryConfidenceCoefficient">
            <summary>
            The confidence cofficient calculated from the runs of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryMeanCemValue">
            <summary>
            Mean of the CEM values in the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryMeanDifference">
            <summary>
            Mean of the differences between the reference value and CEM value in the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryMeanReferenceValue">
            <summary>
            Mean of the reference values in the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryRecords">
            <summary>
            All Summary records associated with a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryRelativeAccuracy">
            <summary>
            The relative accuracy calculated for an operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryStandardDeviation">
            <summary>
            The standard deviation of the differences calculated from the runs of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSummaryTvalue">
            <summary>
            The T-Value based on the number of runs of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumReferenceValues">
            <summary>
            Sum of the reference values in the operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumSquareDifferences">
            <summary>
            Sum of the squares of the differences between the CEM value and reference value in the operating level of a RATA
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumTemperature">
            <summary>
            The sum of the stack temperatures of all traverse points in a flow RATA run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumVelocity">
            <summary>
            The calculated average velocity without wall effects of all traverse points in a flow RATA run.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSumWaf">
            <summary>
            Sum of calculated WAFs in an operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSuppDataId">
            <summary>
            The ID of the QA Supp Data record associated with the RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataSystemValid">
            <summary>
            Indicates if system type is valid for the RATA
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataTestClaimCodeValid">
            <summary>
            Indicates if the Test Claim Code of a RATA is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataTraverseCalcVelocity">
            <summary>
            The recalculated RATA Traverse velocity (without wall effects).
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataTraversePointCount">
            <summary>
            The number of method 1 traverse points in a run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataTraversePointIdValid">
            <summary>
            Indicates if the RATA Traverse Point IDs consist of three alphanumeric characters.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataTraverseRecords">
            <summary>
            All RATA Traverse records associated with a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataTraverseValid">
            <summary>
            Indicates if RATA Traverse data is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataTraverseValidityDetermined">
            <summary>
            Indicates if all validity checks have been performed prior to recalculating traverse velocity.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataUnusedRunCount">
            <summary>
            Number of runs not used in an operating level of a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataWafCalculated">
            <summary>
            Indicates if WAF for Operating was calculated.  Used for leveling.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataWafRunCount">
            <summary>
            Number of runs used in an operating level of a RATA to calculate the WAF.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataWafRunNumbers">
            <summary>
            The RunNumbers of all RATA runs for the operating level that contained wall effects data.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataWafTestTraversePointCount">
            <summary>
            The number of traverse points in the rectangular duct WAF test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataWallPointsConsistent">
            <summary>
            Indicates if the number of wall points used to determine the replacement velocity are the same for all exterior method 1 traverse points in the run of a flow RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RataZeroValue">
            <summary>
            Indicates if a zero value was reported for the reference or measured value in a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RectangularDuctWafRecords">
            <summary>
            The Rectangular Duct WAF records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ReferenceMethodCodeLookupTable">
            <summary>
            Lookup table for Reference Method Codes for RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RequiredTestCodeToRequiredIdAndSystemOrComponentTypeCrossCheckTable">
            <summary>
            Indicates whether MonitoringSystemID, ComponentID, or both must be reported in the QA certification event record based on the RequiredTestCode.  Also determines system/component types appropriate for the test code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.RoundedFlowRataValues">
            <summary>
            Indicates if all CEM and Reference Values in a Flow RATA were rounded to the nearest 1000 scfh.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SevenDayUpscaleCalcAps">
            <summary>
            The recalculated APS indicator for the upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SevenDayUpscaleCalcResult">
            <summary>
            The recalculated result (CE or Diff) for the upscale injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SevenDayUpscaleInjectionValidated">
            <summary>
            A dummy parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SevenDayZeroCalcAps">
            <summary>
            The recalculated APS indicator for the zero injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SevenDayZeroCalcResult">
            <summary>
            The recalculated result (CE or Diff) for the zero injection.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SevenDayZeroInjectionValidated">
            <summary>
            A dummy parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SimultaneousAppeRuns">
            <summary>
            Indicates if any runs in the APPE test overlapped.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SimultaneousLinearityInjectionForAlternateRange">
            <summary>
            Indicates if an injection was conducted at the same time as an injection in another linearity check for the alternate range of a component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SimultaneousLinearityInjections">
            <summary>
            Indicates if linearity injections were performed simultaneously.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SimultaneousRataRuns">
            <summary>
            Indicates if RATA runs were performed simultaneously.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SimultaneousUnitDefaultRuns">
            <summary>
            Indicates if any runs in the unit default test overlapped.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SlcCollectionPeriod">
            <summary>
            Indicates whether the standard or alternative historical load usage data collection period was used for achieving a single-load flow claim exemption.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SpanRecords">
            <summary>
            Span Records at location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SystemComponentRecords">
            <summary>
            The Monitor_System_Component records linked to the current component including the fields from the associated system record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SystemParameterLookupTable">
            <summary>
            Lookup table that stores system-wide values.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SystemRataSummaryRecords">
            <summary>
            All RATA Summary records for a monitoring system, including associated RATA information.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.SystemSystemComponentRecords">
            <summary>
            All Monitor_System_Component records for the current system including the fields from the associated component record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestBasisCodeLookupTable">
            <summary>
            A list of valid test basis codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestBeginDateValid">
            <summary>
            Indicates if the reported begin time of a test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestBeginHourValid">
            <summary>
            Indicates if the reported begin hour of a test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestBeginMinuteValid">
            <summary>
            Indicates if the reported begin minute of a test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestDatesConsistent">
            <summary>
            Indicates if the reported begin time of a test is prior to its end time.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestEndDateValid">
            <summary>
            Indicates if the reported end date of a test os valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestEndHourValid">
            <summary>
            Indicates if the reported end hour of a test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestEndMinuteValid">
            <summary>
            Indicates if the reported end minute of a test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestExtensionExemptionBeginDate">
            <summary>
            First day of quarter in test extension exemption record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestExtensionExemptionEndDate">
            <summary>
            End day of quarter in test extension exemption record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestExtensionExemptionRecords">
            <summary>
            The Test Extension Exemption records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestNumberValid">
            <summary>
            Indicates if Test Number is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestQualificationRecords">
            <summary>
            All Test Qualification records associated with a RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestReasonCodeLookupTable">
            <summary>
            A list of valid test reason codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestReportingPeriodBeginDate">
            <summary>
            The first day of the reporting period.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestReportingPeriodValid">
            <summary>
            Indicates if reporting period is valid for a test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestResultCodeLookupTable">
            <summary>
            A list of valid test result codes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestSpanDetermined">
            <summary>
            Used for leveling.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestSpanScaleValid">
            <summary>
            Indicates if span scale of a test is a valid code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestSpanValue">
            <summary>
            The span value for the component type of the test according to the monitoring plan.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestTolerancesCrossCheckTable">
            <summary>
            Acceptable tolerances between reported and calculated values for tests.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TestTypeToRequiredTestCodeCrossCheckTable">
            <summary>
            Indicates the test types that are included in the QA Cert Event required test code.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TransmitterTransducerTestCalcResult">
            <summary>
            The recalculated result of a fuel flowmeter transmitter transducer test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TransmitterTransducerTestComponentTypeValid">
            <summary>
            Indicates if the component tested in the fuel flowmeter transmitter transducer test has a valid component type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TransmitterTransducerTestRecords">
            <summary>
            All fuel flowmeter transmitter transducer test summary records for the component.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TransmitterTransducerTestResultDetermined">
            <summary>
            Indicates if the result of the transmitter transducer test has been recalcuated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.TvaluesCrossCheckTable">
            <summary>
            A table of T-Values based on the number of runs in the RATA.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultFlaggedLevelSumReferenceValue">
            <summary>
            The sum of the reference values in the runs of the "flagged" operating level of an unit default Test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultFlaggedNoxRate">
             <summary>
             The average NOx Rate of the "flagged" operating level of a unit default test.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultFlaggedOpLevel">
            <summary>
            The OperatingLevelForRun in the unit default test where the RunUsedIndicator is equal to 1.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultFuelValid">
            <summary>
            Indicates if the fuel code in the Unit Default test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultIncompleteLevel">
            <summary>
            The OperatingLevelForRun with an insufficient number of runs.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultLastOpLevel">
            <summary>
            The OperatingLevelForRun in the previous unit default test run record.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultLastRunNumber">
            <summary>
            The RunNumber of the previous run of the unit default test when sort in OperatingLevelForRun, RunNumber order.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultLevelCount">
            <summary>
            A counter fo the current operating level of an Unit default Test being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultLevelRunCount">
            <summary>
            A counter fo the number of runs in the operating level of the Unit Default Test being evaluated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultLevelSumReferenceValue">
            <summary>
            The sum of the reference values in the runs of an operating level of an unit default Test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultMaximumNoxRate">
             <summary>
             The maximum average NOx Rate of all operating levels of a unit default test.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultNoxRateDetermined">
            <summary>
            Indicates if the default emission rate has been recalculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultRunRecords">
            <summary>
            All Run records for the Unit Default test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultRunSequence">
            <summary>
            A string of run numbers in the unit default test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultRunSequenceConsecutive">
            <summary>
            Indicates if the sequence of run numbers in the unit default test is consecutive.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultRunSequenceValid">
            <summary>
            Indicates if the sequence of run numbers in the unit default test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultRunTimesValid">
            <summary>
            Indicates if the run times in the unit default test are valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultRunUsedIndicatorsConsistent">
            <summary>
            Indicates if all runs in the flagged operating level of a Unit Default test are equal to 1.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultTestBeginDate">
            <summary>
            The begin date of the first run of the Unit Default test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultTestBeginHour">
            <summary>
            The begin hour of the first run of the Unit Default test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultTestBeginMinute">
            <summary>
            The begin minute of the first run of the Unit Default test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultTestEndDate">
            <summary>
            The end date of the last run of the unit default test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultTestEndHour">
            <summary>
            The end hour of the last run of the unit default test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultTestEndMinute">
            <summary>
            The end minute of the last run of the unit default test.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultTestNoxRate">
             <summary>
             The NOx default emission rate recalculated from the values in the runs of unit default test.
            
             </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitDefaultTestRecords">
            <summary>
            All unit default test records for the location.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UnitStackConfigurationRecords">
            <summary>
            The Unit Stack Configuration records for all of a facility's locations that were retrieved for the evaluation.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UpscaleCalibrationInjectionValid">
            <summary>
            Indicates that the results of the upscale injection of a 7day calibration test can be recalculated.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.UpscaleOocGasLevelValid">
            <summary>
            Indicates that the upscale gas level code of an online offline calibration test is valid.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ValidPgvpRecord">
            <summary>
            This is used for levelling only.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Qa.Parameters.QaParameters.ZeroCalibrationInjectionValid">
            <summary>
            Indicates that the results of the zero-level injection of a 7day calibration test can be recalculated.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Qa.Parameters.QaParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise returning null.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <returns>Returns the requested check parameter as an object if it exists, and as a null if it does not.</returns>
        </member>
        <member name="M:ECMPS.Checks.Qa.Parameters.QaParameters.SetCheckParameter(System.String,System.Object)">
            <summary>
            Sets the parameter value using the category property if it is not null, otherwise using the Process object if it is not null, and otherwise does nothing.
            </summary>
            <param name="parameterId">The string id used to access the parameter in the check parameter collection.</param>
            <param name="parameterValue">The value to which to set the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.Qa.Parameters.QaParameters.Init(ECMPS.Checks.CheckEngine.cProcess)">
            <summary>
            Initializes the values in the check parameter object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Qa.Parameters.QaParameters.RegisterParameters">
            <summary>
            Registers each check parameter.
            </summary>
        </member>
        <member name="T:ECMPS.ErrorSuppression.cErrorSuppressCriteria">
            <summary>
            The class used to contain and execute individual Error Suppression.
            </summary>
        </member>
        <member name="M:ECMPS.ErrorSuppression.cErrorSuppressCriteria.#ctor(System.Int64,System.Int64,System.Nullable{ECMPS.Definitions.SeverityCode.eSeverityCd},System.Nullable{System.Int64},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Creates an Error Suppression object.
            </summary>
            <param name="esSpecId">The key to the ES Spec row.</param>
            <param name="checkCatalogResultId">The key to the suppressed Check Catalog Result.</param>
            <param name="severityCd">The new Severity Code for the suppression.</param>
            <param name="facId">The Facility Id on which to apply the suppression.</param>
            <param name="locationNameList">A comma delimited list of location names to which the suppression applies.</param>
            <param name="esMatchDataTypeCd">The Match Data Type.</param>
            <param name="matchDataValue">The Match Data Value.</param>
            <param name="esMatchTimeTypeCd">The Match Time Type.</param>
            <param name="matchHistoricalInd">The Match Time Historical Indicator.</param>
            <param name="matchTimeBeginValue">The Match Time Begin Value.</param>
            <param name="matchTimeEndValue">The Match Time End Value.</param>
        </member>
        <member name="M:ECMPS.ErrorSuppression.cErrorSuppressCriteria.Evaluate(ECMPS.ErrorSuppression.cErrorSuppressValues)">
            <summary>
            Evaluates the passed data to determine the new severity code.
            </summary>
            <param name="errorSuppressValues">The Error Suppression Values to evaluate.</param>
            <returns></returns>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.CheckCatalogResultId">
            <summary>
            The key to the suppressed Check Catalog Result.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.EsMatchDataTypeCd">
            <summary>
            The Match Data Type.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.EsMatchTimeTypeCd">
            <summary>
            The Match Time Type.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.EsSpecId">
            <summary>
            The key to the ES Spec row.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.FacId">
            <summary>
            The Facility Id on which to apply the suppression.
            
            This should be null if the suppression applies to all facilities.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.LocationNameList">
            <summary>
            A comma delimited list of location names to which the suppression applies.
            
            This should be null if the suppression does not apply to specific location, 
            and will be null if the Facility Id is null.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.MatchDataValue">
            <summary>
            The Match Data Value.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.MatchHistoricalInd">
            <summary>
            The Match Time Historical Indicator.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.MatchTimeBeginValue">
            <summary>
            The Match Time Begin Value.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.MatchTimeEndValue">
            <summary>
            The Match Time End Value.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressCriteria.SeverityCd">
            <summary>
            The new Severity Code for the suppression.
            </summary>
        </member>
        <member name="T:ECMPS.ErrorSuppression.cErrorSuppressValues">
            <summary>
            This is the base class for the Error Suppression Values classes.
            </summary>
        </member>
        <member name="M:ECMPS.ErrorSuppression.cErrorSuppressValues.#ctor(System.Int64,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            The constructor for the Error Suppression Values Class.
            </summary>
            <param name="facId">The Facility Id of the data being checked.</param>
            <param name="locationName">The Location Name of the data being checked.</param>
            <param name="esMatchDataTypeCd">The Match Data Type.</param>
            <param name="matchDataValue">The Match Data Value.</param>
            <param name="esMatchTimeTypeCd">The Match Time Type.</param>
            <param name="matchTimeValue">The Match Time Value.</param>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressValues.EsMatchDataTypeCd">
            <summary>
            The Match Data Type.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressValues.EsMatchTimeTypeCd">
            <summary>
            The Match Time Type.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressValues.FacId">
            <summary>
            The Facility Id of the data being checked.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressValues.LocationName">
            <summary>
            The Location Name of the data being checked.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressValues.MatchDataValue">
            <summary>
            The Match Data Value.
            </summary>
        </member>
        <member name="P:ECMPS.ErrorSuppression.cErrorSuppressValues.MatchTimeValue">
            <summary>
            The Match Time Value.
            </summary>
        </member>
    </members>
</doc>
