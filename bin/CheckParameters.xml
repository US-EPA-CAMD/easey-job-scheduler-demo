<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CheckParameters</name>
    </assembly>
    <members>
        <member name="T:ECMPS.Checks.Parameters.cCheckCategory">
            <summary>
            The base for all Category objects
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCategory.#ctor(ECMPS.Checks.Parameters.cCheckProcess,System.String)">
            <summary>
            Instantiates a cCheckCategory object
            </summary>
            <param name="ACheckProcess">The process object associated with the check category object</param>
            <param name="ACategoryCd">The cateogry code associated with the check category object</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCategory.#ctor(ECMPS.Checks.Parameters.cCheckProcess,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Instantiates a cCheckCategory object
            </summary>
            <param name="ACheckProcess">The process object associated with the check category object.</param>
            <param name="ACategoryCd">The cateogry code associated with the check category object.</param>
            <param name="AParentCategory">The parent category of this category.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCategory.#ctor">
            <summary>
            Instantiates a cCheckCategory object primarily for unit testing purposes.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckCategory.FCategoryCd">
            <summary>
            The category code of the category object instance.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckCategory.FCheckProcess">
            <summary>
            Check process in which the category is running.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckCategory.FParentCategory">
            <summary>
            The parent category of this category.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckCategory.FRunningRuleCheck">
            <summary>
            Indicates which rule check is being processed by a check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCategory.CategoryCd">
            <summary>
            The category code of the category object instance.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCategory.CheckProcess">
            <summary>
            The check process object parent of the category object instance.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCategory.ParentCategory">
            <summary>
            The parent category of this category.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCategory.RunningRuleCheck">
            <summary>
            Indicates which rule check is being processed by a check
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckCondition">
            <summary>
            A check condition including the metheod to evaluate it.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.#ctor(System.Int32,ECMPS.Checks.Parameters.cCheckParameter,System.Object,ECMPS.Checks.Parameters.eConditionOperator,System.Boolean)">
            <summary>
            Creates a cCheckCondtion instance.
            </summary>
            <param name="AAndGroup">The and group of the condtion.</param>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="AOperator">The comparison operator.</param>
            <param name="ANegate">Whether to negate the comparison.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCondition.AndGroup">
            <summary>
            The and group for the condition.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCondition.CheckParameter">
            <summary>
            The check parameter to compare to the value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCondition.CompareValue">
            <summary>
            The value to compare to the check parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCondition.Negate">
            <summary>
            Whether to negate the comparison.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckCondition.Operator">
            <summary>
            The comparison operator.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.Evaluate">
            <summary>
            Evaluates the condition and returns the result.
            </summary>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.AlwaysFalse(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Always returns null.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.BeginsWith(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value begins with the compare value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.Contains(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value contains the compare value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.Equals(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value equals the compare value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.EndsWith(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value ends with the compare value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.GreaterThan(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value is greater than the compare value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.GreaterThanOrEqual(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value is greater than or equal to the compare value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.InList(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value is in the list in the compare value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.LessThan(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value is less than the compare value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckCondition.LessThanOrEqual(ECMPS.Checks.Parameters.cCheckParameter,System.Object,System.Boolean)">
            <summary>
            Compares the parameter to the compare value.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value is less than or equal to the compare value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameter">
            <summary>
            The root class for all parameters.  The class is abstract and cannot be instantiated.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Instantiates a cCheckParameter class and sets the name and data type properties
            of the parameter
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="AParameterDataType">The data type of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FCheckParameters">
            <summary>
            The parent check parameters object for this parameter.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FDataType">
            <summary>
            The property field for the data type of the parameter
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FInitParameterizedCheck">
            <summary>
            The property field for the rule check id of the check that initialized the parameter value.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FIsArray">
            <summary>
            The property field that indicates whether the parameter is an array.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FIsSet">
            <summary>
            Indicates whether the parameter has been set.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FKey">
            <summary>
            The property field for the parameter key.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FLastErrorAction">
            <summary>
            The property field that indicates the action that produced the last error.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FLastErrorMessage">
            <summary>
            The property Field that holds the last error message.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FName">
            <summary>
            The property field for the parameter name.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameter.FOwner">
            <summary>
            The property field for the category owner of the parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.DataType">
            <summary>
            The property for the data type of the parameter
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.InitParameterizedCheck">
            <summary>
            The property for the rule check id of the check that initialized the parameter value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.IsArray">
            <summary>
            The property that indicates whether the parameter is an array.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.IsNull">
            <summary>
            Indicates whether the parameter is null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.IsSet">
            <summary>
            Indicates whether the parameter has been set.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.Key">
            <summary>
            The property field for the parameter key.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.LastErrorAction">
            <summary>
            The property that indicates the action that produced the last error.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.LastErrorMessage">
            <summary>
            The property that holds the last error message.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.Name">
            <summary>
            The property for the parameter name.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.Owner">
            <summary>
            The property for the category owner of the parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.NullDefaultedObject">
            <summary>
            Returns the value as an object but with any nulls or dbnulls defaulted.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameter.LegacyValue">
            <summary>
            Returns the value as an object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.OwnerIsOrAncestorOf(ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Check to see if the owner is an ancestor of the passed check category.
            </summary>
            <param name="ACategory">The potential descendant to check.</param>
            <returns>True if the owner is an ancestor of the check category.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.Reset">
            <summary>
            Clears the value, initializing rule check id and owner
            as well as the last error action and message, if they are set.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.ValueAsString">
            <summary>
            Returns the current value of the parameter as a string.
            </summary>
            <returns>The current value of the parameter as a string.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.FindOrAddCheckParameter(ECMPS.Checks.Parameters.cCheckParameter,ECMPS.Checks.Parameters.cCheckParameter[]@,System.Int32@)">
            <summary>
            Appends the Check Parameter if it is not already in the list.
            </summary>
            <param name="ACheckParameter">The parameter to append</param>
            <param name="ACheckParameterList">The list into which to append</param>
            <param name="ACheckParameterCnt">The current count of parameters in the list</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.MergeCheckParameterList(ECMPS.Checks.Parameters.cCheckParameter[],ECMPS.Checks.Parameters.cCheckParameter[]@,System.Int32@)">
            <summary>
            Appends the check parameters in the source that do not exist in the target list
            into the target list.
            </summary>
            <param name="ASourceParameterList">The source list of parameters to append</param>
            <param name="ATargetParameterList">The target list into which to append parameters</param>
            <param name="ATargetParameterCnt">The current count of parameters in the target list</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.NormalizeParameterList(ECMPS.Checks.Parameters.cCheckParameter[])">
            <summary>
            Returns a list of check parameters with nulls removed and no empty cells.
            </summary>
            <param name="ASourceParameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.ToString">
            <summary>
            Displays information that identifies the parameter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.GetDefaultObjectForNull">
            <summary>
            Returns the 'Type' default value for null or dbnull of the parameter.
            </summary>
            <returns>The 'Type'</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.ValueAsObject">
            <summary>
            Returns the current value of the parameter as an object.
            </summary>
            <returns>The current value of the parameter as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.UpdateValueCheck(ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Determines whether an update by te specified category can proceed.
            </summary>
            <param name="ACategory">The category to check.</param>
            <returns>True if the update can proceed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.SetValueCheckAndPrep(ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Inforces the rules for duplicate parameter setting.
            </summary>
            <param name="AOwner">The current category setting the parameter.</param>
            <returns>Returns true if the parameter can be set, false if it can not.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameter.ResetValue">
            <summary>
            Resets the value of the parameter to its uninitialized value.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterBands">
            <summary>
            This class contains the lists of checks leveled into bands based on
            the output check parameter dependencies between the checks.  The class
            also provides the method for determining and loading the bands.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBands.#ctor(System.String)">
            <summary>
            Instantiates a CCheckParameterBands object and save the passed category codes.
            </summary>
            <param name="ACategoryCd"></param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterBands.BandCount">
            <summary>
            Indicates the number of check bands
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterBands.CategoryCd">
            <summary>
            The category code associated with the checks for the check parameter bands
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterBands.TotalChecks">
            <summary>
            Indicates the total number of checks in all check bands
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBands.Populate(ECMPS.Checks.DatabaseAccess.cDatabase,ECMPS.Checks.Parameters.cCheckParameters,System.Boolean,System.String@)">
            <summary>
            Populates the check bands for the process and category codes of the oject's instance.
            </summary>
            <param name="AAuxDatabase">Database connection to an ECMPS_AUX schema</param>
            <param name="ACheckParameters">The check parameters object containing the parameter implementations</param>
            <param name="AForRun">When set to true, only checks with a run flag of 'Y' are populated.</param>
            <param name="AErrorMessage">Error message set when result is false.</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBands.Populate(ECMPS.Checks.DatabaseAccess.cDatabase,ECMPS.Checks.Parameters.cCheckParameters,System.String@)">
            <summary>
            Populates the check bands for the process and category codes of the oject's instance.
            Only checks with a run flag of 'Y' are populated.
            </summary>
            <param name="AAuxDatabase">Database connection to an ECMPS_AUX schema</param>
            <param name="ACheckParameters">The check parameters object containing the parameter implementations</param>
            <param name="AErrorMessage">Error message set when result is false.</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBands.GetCheck(System.Int32,System.Int32)">
            <summary>
            Returns the check corresponding to the passed band and check position.
            </summary>
            <param name="ABandPos">The position of the band in which the check resides</param>
            <param name="ACheckPos">The position of the check in the band in which it resides</param>
            <returns>The check corresponding to the passed band and check position</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBands.GetCheckCount(System.Int32)">
            <summary>
            Returns the count of checks in the check band corresponding to the passed band position
            </summary>
            <param name="ABandPos">The position of the check band</param>
            <returns>The count of checks in the check band corresponding to the passed band position</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterCollection">
            <summary>
            Implements a dictionary with a string lookup key and a cCheckParameter value.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.dCheckConditionEvaluator">
            <summary>
            Delegate check comparison comparison methods.
            </summary>
            <param name="ACheckParameter">The check parameter to compare.</param>
            <param name="ACompareValue">The value to compare.</param>
            <param name="ANegate"></param>
            <returns>Returns true if the parameter value is less than or equal to the compare value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.eParameterDataType">
            <summary>
            Indicates the data type of the parameter value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterDataType.Object">
            <summary>
            Object Value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterDataType.Boolean">
            <summary>
            Boolean Value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterDataType.DataRowView">
            <summary>
            DataRowView Value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterDataType.DataView">
            <summary>
            DataView Value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterDataType.Date">
            <summary>
            Date Value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterDataType.Decimal">
            <summary>
            Decimal Value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterDataType.Integer">
            <summary>
            Integer Value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterDataType.String">
            <summary>
            String Value
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.eParameterUsageType">
            <summary>
            Indicates how a check uses a particular parameter
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterUsageType.Required">
            <summary>
            Required Input Parameter
            </summary> 
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterUsageType.Optional">
            <summary>
            Optional Input Parameter
            </summary> 
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterUsageType.Condition">
            <summary>
            Condition Input Parameter
            </summary> 
        </member>
        <member name="F:ECMPS.Checks.Parameters.eParameterUsageType.Output">
            <summary>
            Output Parameter
            </summary> 
        </member>
        <member name="T:ECMPS.Checks.Parameters.eDateBorderType">
            <summary>
            Indicates whether a dbnull date (or hour) should be treated as a begin or end date.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eDateBorderType.Began">
            <summary>
            Treat DBNULL date as a begin date.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eDateBorderType.Ended">
            <summary>
            Treat DBNULL date as an end date.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.eFilterPairCompare">
            <summary>
            Indicates the comparison method for a filter condition
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.Equals">
            <summary>
            Determine if table value equals the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.BeginsWith">
            <summary>
            Determine if table value begins with the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.Contains">
            <summary>
            Determine if table value contains the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.EndsWith">
            <summary>
            Determine if table value ends with the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.InList">
            <summary>
            Determine if table value is in the reference value list
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.LessThan">
            <summary>
            Determine if table value is less than the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.LessThanOrEqual">
            <summary>
            Determine if table value is less than or equal to the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.GreaterThanOrEqual">
            <summary>
            Determine if table value is greater than or equal to the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairCompare.GreaterThan">
            <summary>
            Determine if table value is greater than the reference value
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.eFilterPairStringCompare">
            <summary>
            Indicates the string comparison method for a filter condition
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairStringCompare.Equals">
            <summary>
            Determine if table value equals the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairStringCompare.BeginsWith">
            <summary>
            Determine if table value begins with the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairStringCompare.Contains">
            <summary>
            Determine if table value contains the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairStringCompare.EndsWith">
            <summary>
            Determine if table value ends with the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairStringCompare.InList">
            <summary>
            Determine if table value is in the reference value list
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.eFilterPairRelativeCompare">
            <summary>
            Indicates the relative comparison method for a filter condition
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairRelativeCompare.Equals">
            <summary>
            Determine if table value equals the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairRelativeCompare.LessThan">
            <summary>
            Determine if table value is less than the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairRelativeCompare.LessThanOrEqual">
            <summary>
            Determine if table value is less than or equal to the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairRelativeCompare.GreaterThanOrEqual">
            <summary>
            Determine if table value is greater than or equal to the reference value
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eFilterPairRelativeCompare.GreaterThan">
            <summary>
            Determine if table value is greater than the reference value
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.eConditionOperator">
            <summary>
            Enumeration of check condition comparison methods.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.Equals">
            <summary>Return true if field equals the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.NotEqual">
            <summary>Return true if field does not equal the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.BeginsWith">
            <summary>Return true if field begins with the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.Contains">
            <summary>Return true if field contains the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.EndsWith">
            <summary>Return true if field ends with the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.InList">
            <summary>Return true if field in the list represented in the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.LessThan">
            <summary>Return true if field is less than the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.LessThanOrEqual">
            <summary>Return true if field is less than or equal to the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.GreaterThanOrEqual">
            <summary>Return true if field is greater than or equal to the value</summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eConditionOperator.GreaterThan">
            <summary>Return true if field is greater than the value</summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameters">
            <summary>
            An abstract class the contains the collection of parameters for a process.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.#ctor(ECMPS.Checks.Parameters.cCheckProcess,ECMPS.Checks.DatabaseAccess.cDatabase)">
            <summary>
            Creates and instance of a cCheckParameters object
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.#ctor">
            <summary>
            Constructor used for testing.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameters.FCheckParameterCollection">
            <summary>
            A dictionary of check parameters contained in this check parameters object.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameters.FDatabaseAux">
            <summary>
            The AUX database connection object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameters.CheckParameterList">
            <summary>
            A dictionary of check parameters contained in this check parameters object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameters.CheckProcess">
            <summary>
            The check process associated with the check parameters
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameters.ProcessCd">
            <summary>
            The process code of the check process assiciated with the check parameters
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.ContainsCheckParameter(System.String)">
            <summary>
            Determines whether a parameter by name exists in the check parameters object.
            </summary>
            <param name="AParameterName">The parameter name for the parameter in CHECK_PARAM_ID_NAME </param>
            <returns>True if the parameter exists.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.GetCheckParameter(System.String)">
            <summary>
            Gets the check parameter corresponding to the passed parameter name.
            </summary>
            <param name="AParameterName">The parameter name for the parameter in CHECK_PARAM_ID_NAME </param>
            <returns>The parameter matching the parameter name if found, otherwise null.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.Reset(ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Resets the value of each parameter for the passed owner, resetting all parameters
            if the owner is null.
            </summary>
            <param name="AOwner">The owner of check parameters that should be reset.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.Reset">
            <summary>
            Resets the value of all parameters.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.InstantiateCheckParameterProperties">
            <summary>
            This method should instantiate each of the check parameter properties implemented in
            the child check parameters objects.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.InitializeCheckParameterList">
            <summary>
            Populates the dictionary of check parameters used to lookup check parameters by name.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameters.AddCheckParameter(System.String,ECMPS.Checks.Parameters.cCheckParameter,System.String@)">
            <summary>
            Adds a check parameter to the dictionary of check parameters used to lookup check parameters by name.
            </summary>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameter">The check parameter.</param>
            <param name="AErrorMessage">The error message returned if the result is false.</param>
            <returns>Returns true unless the parameter already exists or an error occurred during the update.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParametersCheckEngine">
            <summary>
            An abstract class the contains the collection of parameters for a process for
            all check engine check parameters classes.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParametersCheckEngine.#ctor(ECMPS.Checks.Parameters.cCheckProcess,ECMPS.Checks.DatabaseAccess.cDatabase)">
            <summary>
            Creates and instance of a cCheckParameters__CheckEngine object
            </summary>
            <param name="ACheckProcess">The check process associated with the check parameters.</param>
            <param name="ADatabaseAux">The database object for the AUX schema.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParametersCheckEngine.#ctor">
            <summary>
            Constructor used for testing.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParametersCheckEngine.ContainsLegacyParameter(System.String)">
            <summary>
            Determines whether a parameter by name exists in the check parameters object.
            </summary>
            <param name="AParameterName">The parameter name for the parameter in CHECK_PARAM_ID_NAME </param>
            <returns>True if the parameter exists.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParametersCheckEngine.ContainsLegacyParameter(System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Determines whether a parameter by name exists in the check parameters object.
            </summary>
            <param name="AParameterName">The parameter name for the parameter in CHECK_PARAM_ID_NAME </param>
            <param name="AOwner">Limits the check to the this category if not null.</param>
            <returns>True if the parameter exists.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParametersCheckEngine.GetLegacyParameter(System.String)">
            <summary>
            Gets the check parameter for the check engine corresponding to the passed parameter name.
            </summary>
            <param name="AParameterName">The parameter name for the parameter in CHECK_PARAM_ID_NAME </param>
            <returns>The parameter matching the parameter name if found, otherwise null.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParametersCheckEngine.GetLegacyParameter(System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Gets the check parameter for the check engine corresponding to the passed parameter name.
            </summary>
            <param name="AParameterName">The parameter name for the parameter in CHECK_PARAM_ID_NAME </param>
            <param name="AOwner">Limits the get to the this category if not null.</param>
            <returns>The parameter matching the parameter name if found, otherwise null.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParametersCheckEngine.RegisterParameter(System.Int32,System.String)">
            <summary>
            Adds the passed parameter to the parameter dictionary.
            </summary>
            <param name="parameterKey">The primary key (Check_Param_Id) of the parameter.</param>
            <param name="parameterName">The internal name (Check_Param_Id_Name) of the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParametersCheckEngine.InitializeCheckParameterList">
            <summary>
            Calls the base version of the method to add parameters implemented as properties of
            this object, and then adds parameters to the parameter list for parameters not 
            implemented as properties of this object.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2">
            <summary>
            The parent type of all type parameters used by the check engine, that represent an array.
            </summary>
            <typeparam name="Type">The base type of the parameter value</typeparam>
            <typeparam name="NullableType">The nullable type of the parameter value</typeparam>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates an instance of cCheckParameterAbstractArray and sets the Name and DataType property.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="AParameterDataType">The data type of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.FNullDefaultedValue">
            <summary>
            The value of the array with elements as the base type and defaulted when null or dbnull.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.FValue">
            <summary>
            The value of the array property with elements as a nullable type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.NullDefaultedValue">
            <summary>
            The value of the array with elements as the base type and defaulted when null or dbnull.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.Value">
            <summary>
            The value of the array property with elements as a nullable type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.NullDefaultedObject">
            <summary>
            Returns the array property NullDefaultedValue as an object. 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.LegacyValue">
            <summary>
            Returns the array property Value as an object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.SetValue(ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sets the parameter to null and assigns a category owner.
            </summary>
            <param name="AOwner">The category setting the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.SetValue">
            <summary>
            Sets the parameter to null and leaves the category owner null, indicating the process
            set the parameter.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.SetValue(`1[],ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sets the parameter to the passed array and assigns a category owner.
            </summary>
            <param name="AArray">The array to assign to the parameter.</param>
            <param name="AOwner">The category setting the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.SetValue(`1[])">
            <summary>
            Sets the parameter to the passed array and leaves the category owner null, indicating 
            the process set the parameter.
            </summary>
            <param name="AArray">The array to assign to the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.SetValue(System.Int32,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sets the parameter to an array of the specified length and null elements.
            </summary>
            <param name="ALength">The length of the resulting array.</param>
            <param name="AOwner">The category setting the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.SetValue(System.Int32)">
            <summary>
            Sets the parameter to an array of the specified length and null elements, 
            and leaves the category owner null, indicating the process set the parameter.
            </summary>
            <param name="ALength">The length of the resulting array.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.SetValue(System.Int32,`1,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sets the parameter to an array of the specified length and elements valued to AValue.
            </summary>
            <param name="ALength">The length of the resulting array.</param>
            <param name="AArray">The initial value of each array element.</param>
            <param name="AOwner">The category setting the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.SetValue(System.Int32,`1)">
            <summary>
            Sets the parameter to an array of the specified length and elements valued to AValue, 
            and leaves the category owner null, indicating the process set the parameter.
            </summary>
            <param name="ALength">The length of the resulting array.</param>
            <param name="AArray">The initial value of each array element.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.UpdateValue(`1,System.Int32,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Replaces a current parameter array element with the passed value.
            </summary>
            <param name="AValue">The value that should replace the current parameter value array element.</param>
            <param name="AIndex">The current parameter array element index.</param>
            <param name="ACategory">The category updating the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.UpdateValue(`1[],ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Replaces a current parameter array element with the passed value.
            </summary>
            <param name="AArray">The value that should replace the current parameter value array element.</param>
            <param name="ACategory">The category updating the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.LegacySetValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="AOwner">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.LegacyUpdateValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method updates the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="ACategory">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.ValueAsObject">
            <summary>
            Returns the current value of the parameter as an object.
            </summary>
            <returns>The current value of the parameter as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractArray`2.ConvertObjectType(System.Object,`1[]@,System.String@)">
            <summary>
            Converts the input object to the nullable type of the parameter.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">Set to the exception message if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView">
            <summary>
            The base class for any DataView property.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Instantiates a cCheckParameterAbstractDataView object, setting the array property to false,
            and the parameter name and types, and the source data table properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.FScopedDataTable">
            <summary>
            Contains a subset of the data in the source table that is returned as the data 
            for the parameter.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.FSourceDataTable">
            <summary>
            The source data table.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.SourceTableName">
            <summary>
            The name of the source data table for the parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.NullDefaultedValue">
            <summary>
            Returns the value since the base value type (DataView) excepts nulls.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.Value">
            <summary>
            Returns the default view of the Scoped Table 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.NullDefaultedObject">
            <summary>
            Returns NullDefaultedValue as an object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.LegacyValue">
            <summary>
            Returns Value as an object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean)">
            <summary>
            Returns a data view containing records from the parameter that match the filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <returns>Returns the parameter rows that match the filter specifications</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns a data view containing records from the parameter that match the filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <returns>Returns the parameter rows that match the filter specifications</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.Filter(System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Returns a data view containing records from the parameter that match the filter specifications.
            </summary>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <returns>Returns the parameter rows that match the filter specifications</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.IsColumn(System.String)">
            <summary>
            Returns true if the passed column name is a column in the DataView of the parameter.
            </summary>
            <param name="AColumnName">The column name to test for existence in the DataView.</param>
            <returns>Returns true if the column name is in the DataView.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.GetDefaultForNull">
            <summary>
            Returns this parameter's default DataView value for nulls.
            </summary>
            <returns>Returns the default DataView value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default DataView value for nulls as an object.
            </summary>
            <returns>Returns the default DataView value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.GetNull">
            <summary>
            Returns null typed as a DataView.
            </summary>
            <returns>Returns null as a DataView.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.GetTypeValue(System.Data.DataView)">
            <summary>
            Returns the passed value if it is not null, otherwise it returns the default DataView for nulls.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.LegacySetValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="AOwner">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.LegacyUpdateValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method updates the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="ACategory">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.ValueAsObject">
            <summary>
            Returns the current value of the parameter as an object.
            </summary>
            <returns>The current value of the parameter as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractDataView.ResetValue">
            <summary>
            Sets the value property field to null, typed as a DataView.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2">
            <summary>
            The parent type of all type parameters used by the check engine, that represent a
            non referenced non array value.
            </summary>
            <typeparam name="Type">The base type of the parameter value</typeparam>
            <typeparam name="NullableType">The nullable type of the parameter value</typeparam>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates an instance of cCheckParameterAbstractValue and sets the Name and DataType property.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="AParameterDataType">The data type of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.FNullDefaultedValue">
            <summary>
            The value as the base type and defaulted when null or dbnull.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.FValue">
            <summary>
            The value with elements as a nullable type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.NullDefaultedValue">
            <summary>
            The value as the base type and defaulted when null or dbnull.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.Value">
            <summary>
            The value with elements as a nullable type.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.NullDefaultedObject">
            <summary>
            Returns property NullDefaultedValue as an object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.LegacyValue">
            <summary>
            Returns property Value as an object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.LegacySetValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="AOwner">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.LegacyUpdateValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method updates the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="ACategory">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.ValueAsObject">
            <summary>
            Returns the current value of the parameter as an object.
            </summary>
            <returns>The current value of the parameter as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.SetValue(ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sets the parameter to null and assigns a category owner.
            </summary>
            <param name="AOwner">The category setting the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.SetValue">
            <summary>
            Sets the parameter to null and leaves the category owner null, indicating the process
            set the parameter.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.SetValue(`1,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sets the parameter to the passed value and assigns a category owner.
            </summary>
            <param name="AValue">The value to assign to the parameter.</param>
            <param name="AOwner">The category setting the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.SetValue(`1)">
            <summary>
            Sets the parameter to the passed value and leaves the category owner null, indicating 
            the process set the parameter.
            </summary>
            <param name="AValue">The value to assign to the parameter.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.UpdateValue(`1,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Replaces a current parameter value with the passed value.
            </summary>
            <param name="AValue">The value that should replace the current parameter value array element.</param>
            <param name="ACategory">The category updating the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValue`2.ConvertObjectType(System.Object,`1@,System.String@)">
            <summary>
            Converts the input object to the nullable type of the parameter.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">Set to the exception message if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2">
            <summary>
            The parent type of all type parameters used by the check engine, that represent a
            referenced value.
            </summary>
            <typeparam name="Type">The base type of the parameter value</typeparam>
            <typeparam name="NullableType">The nullable type of the parameter value</typeparam>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates an instance of cCheckParameterAbstractValueReference and sets the Name and DataType property.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="AParameterDataType">The data type of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.FReferencedParameter">
            <summary>
            The parameter referenced by this parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.NullDefaultedValue">
            <summary>
            The NullDefaultedValue of the referenced parameter, when set,
            otherwise the null defaulted value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.ReferencedParameter">
            <summary>
            The parameter referenced by this parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.Value">
            <summary>
            The Value of the referenced parameter, when set, otherwise null.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.NullDefaultedObject">
            <summary>
            Returns the property NullDefaultedValue as an object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.LegacyValue">
            <summary>
            Returns the property Value as an object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.SetValue(ECMPS.Checks.Parameters.cCheckParameterAbstractValue{`0,`1},ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sets the parameter reference to the passed value and assigns a category owner.
            </summary>
            <param name="AParameter">The parameter to reference.</param>
            <param name="AOwner">The category setting the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.SetValue(ECMPS.Checks.Parameters.cCheckParameterAbstractValue{`0,`1})">
            <summary>
            Sets the parameter reference to the passed value and leaves the category owner 
            null, indicating the process set the parameter.
            </summary>
            <param name="AParameter">The parameter to reference.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.ValueAsObject">
            <summary>
            Returns the current value of the parameter as an object.
            </summary>
            <returns>The current value of the parameter as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.LegacySetValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="AOwner">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.LegacyUpdateValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method updates the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="ACategory">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterAbstractValueReference`2.ResetValue">
            <summary>
            Sets the ReferencedParameter property to null.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterBooleanArray">
            <summary>
            The boolean array parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.#ctor(System.Nullable{System.Int32},System.String,System.Boolean,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a boolean array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a boolean array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to false.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.DefaultForNull">
            <summary>
            The default bool value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.AggregateValue(System.Boolean,System.Int32,System.Boolean,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Peforms a boolean and or a boolean or on the specified element of the current parameter 
            array and the passed value.  If the current parameter array element is not set or is null 
            then the parameter array element is assinged the passed value.
            </summary>
            <param name="AValue">The value to 'or' or 'and' to the current parameter value array element.</param>
            <param name="AIndex">The current parameter array element index.</param>
            <param name="AOrTogether">Perform a boolean or if true and a boolean and if false.</param>
            <param name="ACategory">The category updating the parameter</param>
            <returns>Returns the result of the boolean operation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.GetDefaultForNull">
            <summary>
            Returns this array parameter with each element's value as the default bool value for nulls.
            </summary>
            <returns>Returns the default bool value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.GetDefaultObjectForNull">
            <summary>
            Returns this array parameter with each element's value as the default bool value for nulls,
            as an object.
            </summary>
            <returns>Returns the default bool value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.GetNull">
            <summary>
            Returns null typed as a nullable bool.
            </summary>
            <returns>Returns null as a nullable bool.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.GetTypeValue(System.Nullable{System.Boolean})">
            <summary>
            Converts the passed value from the nullable bool to bool by returning the
            passed value if it is not null, otherwise returning the default bool for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.ConvertObjectType(System.Object,System.Nullable{System.Boolean}[]@,System.String@)">
            <summary>
            Converts the input object to a nullable bool array.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanArray.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable bool array.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterBooleanValue">
            <summary>
            The boolean value parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.#ctor(System.Nullable{System.Int32},System.String,System.Boolean,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a boolean value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a boolean value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to false.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.DefaultForNull">
            <summary>
            The default bool value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.AggregateValue(System.Boolean,System.Boolean,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Peforms a boolean and or a boolean or on the current parameter value and the passed value.
            If the current parameter value is not set or is null then the parameter value is assinged
            the passed value.
            </summary>
            <param name="AValue">The value to 'or' and 'and' to the current parameter value.</param>
            <param name="AOrTogether">Perform a boolean or if true and a boolean and if false.</param>
            <param name="ACategory">The category updating the parameter</param>
            <returns>Returns the result of the boolean operation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.GetDefaultForNull">
            <summary>
            Returns this parameter's default bool value for nulls.
            </summary>
            <returns>Returns the default bool value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default bool value for nulls as an object.
            </summary>
            <returns>Returns the default bool value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.GetNull">
            <summary>
            Returns null typed as a nullable bool.
            </summary>
            <returns>Returns null as a nullable bool.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.GetTypeValue(System.Nullable{System.Boolean})">
            <summary>
            Converts the passed value from the nullable bool to bool by returning the
            passed value if it is not null, otherwise returning the default bool for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.ConvertObjectType(System.Object,System.Nullable{System.Boolean}@,System.String@)">
            <summary>
            Converts the input object to a nullable bool.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValue.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable bool.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterBooleanValueReference">
            <summary>
            The boolean value reference parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValueReference.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a boolean value reference parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to false.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValueReference.GetDefaultForNull">
            <summary>
            Returns the referenced parameter's default bool value for nulls.
            </summary>
            <returns>Returns the referenced parameter's default bool value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValueReference.GetDefaultObjectForNull">
            <summary>
            Return the referenced parameter's default bool value for nulls as an object.
            </summary>
            <returns>Returns the referenced parameter's the default bool value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValueReference.GetNull">
            <summary>
            Returns null typed as a nullable bool.
            </summary>
            <returns>Returns null as a nullable bool.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterBooleanValueReference.GetTypeValue(System.Nullable{System.Boolean})">
            <summary>
            Converts the passed value from the nullable bool to bool by returning the
            passed value if it is not null, otherwise returning the default bool for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue">
            <summary>
            The DataRowView value parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a DataRowView value reference parameter object setting the Parameter 
            name and data type.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue.IsColumn(System.String)">
            <summary>
            Returns true if the passed column name is a column in the DataRowView of the parameter.
            </summary>
            <param name="AColumnName">The column name to test for existence in the DataRowView.</param>
            <returns>Returns true if the column name is in the DataRowView.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue.GetDefaultForNull">
            <summary>
            Returns this parameter's default DataRowView value for nulls.
            </summary>
            <returns>Returns the default DataRowView value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default DataRowView value for nulls as an object.
            </summary>
            <returns>Returns the default DataRowView value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue.GetNull">
            <summary>
            Returns null typed as a DataRowView.
            </summary>
            <returns>Returns null as a DataRowView.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue.GetTypeValue(System.Data.DataRowView)">
            <summary>
            Returns the passed value if it is not null, otherwise it returns the default DataRowView for nulls.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue.ConvertObjectType(System.Object,System.Data.DataRowView@,System.String@)">
            <summary>
            Converts the input object to a data row.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValue.ResetValue">
            <summary>
            Sets the value property field to null, typed as a DataRowView.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValueReference">
            <summary>
            The DataRowView value reference parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValueReference.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a DataRowView value parameter object setting the Parameter name and 
            data type.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValueReference.IsColumn(System.String)">
            <summary>
            Returns true if the passed column name is a column in the DataRowView of the referenced 
            parameter.
            </summary>
            <param name="AColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValueReference.GetDefaultForNull">
            <summary>
            Returns the referenced parameter's default DataRowView value for nulls.
            </summary>
            <returns>Returns the referenced parameter's default DataRowView value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValueReference.GetDefaultObjectForNull">
            <summary>
            Return the referenced parameter's default DataRowView value for nulls as an object.
            </summary>
            <returns>Returns the referenced parameter's the default DataRowView value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValueReference.GetNull">
            <summary>
            Returns null typed as a DataRowView.
            </summary>
            <returns>Returns null as a DataRowView.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataRowViewValueReference.GetTypeValue(System.Data.DataRowView)">
            <summary>
            Returns the passed value if it is not null, otherwise it returns the default DataRowView for nulls.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataViewDaily">
            <summary>
            Implements the data view parameter for daily data.  The parameter automatically handles the
            sorting and filtering so that filter on daily data is quicker.  This parameter type should
            only be used when the processing expects the data to be in Date and Location order.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDaily.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewDaily object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewDaily.FMonLocName">
            <summary>
            The name of the monitor location field in the source data table.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewDaily.FOpDateName">
            <summary>
            The name of the operating date field in the source data table.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewDaily.FScopingRowPosition">
            <summary>
            The row position within the source data of the current scope.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDaily.InitValue(System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the passed op date and monitor location id.  The
            scoping depends on the sequential requests for scoping be in date and location order.
            </summary>
            <param name="AOpDate">The operating date of the requested scoped data.</param>
            <param name="AMonLocId">The monitor location id of the requested scoped data.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDaily.InitValue(System.DateTime,System.String)">
            <summary>
            Scopes the source data to the passed op date and monitor location id.  The
            scoping depends on the sequential requests for scoping be in date and location order.
            </summary>
            <param name="AOpDate">The operating date of the requested scoped data.</param>
            <param name="AMonLocId">The monitor location id of the requested scoped data.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDaily.Scope(System.DateTime,System.String)">
            <summary>
            Based on the current scoped position, searches for a succeeding position with a date 
            and monitor location id that matches the passed value.  If it gets to a position
            for which the date and monitor location id are after the passed values without
            finding one that matches, the scoped position is set to the preceeding position and the
            scoped table is empty.  If the source table is null then the scoped table is null and
            last error is set.
            </summary>
            <param name="AOpDate">The operating date of the requested scoped data.</param>
            <param name="AMonLocId">The monitor location id of the requested scoped data.</param>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged">
            <summary>
            Implements the data view parameter for date ranged data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,System.String,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewDateRange object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.  Also sets
            the began and ended date field name properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ABeganDateFieldName">The name of the began date field.</param>
            <param name="AEndedDateFieldName">The name of the ended date field.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewDateRange object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.  Also sets
            the began and ended date field name properties to "BEGAN_DATE" AND "END_DATE".
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.FBeganDateFieldName">
            <summary>
            The name of the began date field.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.FEndedDateFieldName">
            <summary>
            The name of the ended date field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.BeganDateFieldName">
            <summary>
            The name of the began date field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.EndedDateFieldName">
            <summary>
            The name of the ended date field.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.DateTime)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Filter(System.DateTime,System.DateTime)">
            <summary>
            Filters the scoped data using the active specifications.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Filter(System.DateTime,System.DateTime,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Filter(System.DateTime)">
            <summary>
            Filters the scoped data using the active specifications.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Filter(System.DateTime,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.DateTime,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.DateTime,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(System.DateTime,System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(System.DateTime,System.DateTime,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.Parameters.cCheckCategory,System.String,System.DateTime,System.DateTime,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOwner">The check category making the request.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(System.String,System.DateTime,System.DateTime,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(System.DateTime,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(ECMPS.Checks.Parameters.cCheckCategory,System.String,System.DateTime,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOwner">The check category making the request.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.InitValue(System.String,System.DateTime,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Scope(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active and 
            filter specification.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ABeganDate">The beginning of the active date range.</param>
            <param name="AEndedDate">The end of the active date range.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Scope(System.DateTime,System.DateTime)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active specification.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Scope(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active and 
            filter specification.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AOpDate">The operating date to test rows against</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewDateRanged.Scope(System.DateTime)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active specification.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric">
            <summary>
            Implements the data view parameter for generic data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewGeneric object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.String)">
            <summary>
            Scopes the source data to the filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AOwner">The check category making the request.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.String)">
            <summary>
            Scopes the source data to the filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.InitValue(ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Nulls the parameter value.
            </summary>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.InitValue">
            <summary>
            Nulls the parameter value.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.InitValue(ECMPS.Checks.Parameters.cCheckCategory,System.String,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the filter specifications.
            </summary>
            <param name="AOwner">The check category making the request.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.InitValue(System.String,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the filter specifications.
            </summary>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.ApplySort(System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Apply a sort to the Scoped Data Table's default view, producing a debug line if the
            application fails.
            </summary>
            <param name="ADataSort">The sort to apply</param>
            <param name="AOwner">The category requesting the sort.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.ApplySort(System.String)">
            <summary>
            Apply a sort to the Scoped Data Table's default view, producing a debug line if the
            application fails.
            </summary>
            <param name="ADataSort">The sort to apply</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewGeneric.Scope(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed filter specification.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly">
            <summary>
            Implements the data view parameter for hourly data.  The parameter automatically handles the
            sorting and filtering so that filter on hourly data is quicker.  This parameter type should
            only be used when the processing expects the data to be in Date, Hour and Location order.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewHourly object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly.FMonLocName">
            <summary>
            The name of the monitor location field in the source data table.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly.FOpDateName">
            <summary>
            The name of the operating date field in the source data table.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly.FOpHourName">
            <summary>
            The name of the operating hour field in the source data table.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly.FScopingRowPosition">
            <summary>
            The row position within the source data of the current scope.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly.InitValue(System.DateTime,System.Int32,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the passed op date and hour, and monitor location id.  The
            scoping depends on the sequential requests for scoping be in date, hour and location order.
            </summary>
            <param name="AOpDate">The operating date of the requested scoped data.</param>
            <param name="AOpHour">The operating hour of the requested scoped data.</param>
            <param name="AMonLocId">The monitor location id of the requested scoped data.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly.InitValue(System.DateTime,System.Int32,System.String)">
            <summary>
            Scopes the source data to the passed op date and hour, and monitor location id.  The
            scoping depends on the sequential requests for scoping be in date, hour and location order.
            </summary>
            <param name="AOpDate">The operating date of the requested scoped data.</param>
            <param name="AOpHour">The operating hour of the requested scoped data.</param>
            <param name="AMonLocId">The monitor location id of the requested scoped data.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourly.Scope(System.DateTime,System.Int32,System.String)">
            <summary>
            Based on the current scoped position, searches for a succeeding position with a date,
            hour and monitor location id that matches the passed value.  If it gets to a position
            for which the date, hour and monitor location id are after the passed values without
            finding one that matches, the scoped position is set to the preceeding position and the
            scoped table is empty.  If the source table is null then the scoped table is null and
            last error is set.
            </summary>
            <param name="AOpDate">The operating date of the requested scoped data.</param>
            <param name="AOpHour">The operating hour of the requested scoped data.</param>
            <param name="AMonLocId">The monitor location id of the requested scoped data.</param>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged">
            <summary>
            Implements the data view parameter for hour ranged data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,System.String,System.String,System.String,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewHourRanged object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.  Also sets
            the began and ended date and hour field name properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ABeganDateFieldName">The name of the began date field.</param>
            <param name="ABeganHourFieldName">The name of the began hour field.</param>
            <param name="AEndedDateFieldName">The name of the ended date field.</param>
            <param name="AEndedHourFieldName">The name of the ended hour field.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewHourRanged object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.  Also sets
            the began and ended date and hour field name properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.FBeganHourFieldName">
            <summary>
            The name of the began hour field.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.FEndedHourFieldName">
            <summary>
            The name of the ended hour field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.BeganHourFieldName">
            <summary>
            The name of the began hour field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.EndedHourFieldName">
            <summary>
            The name of the ended hour field.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Filter(System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Filter(System.DateTime,System.Int32,System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.Int32)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Filter(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.Int32)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Filter(System.DateTime,System.Int32)">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Filter(System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Filters the scoped data using the active and filter specifications.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <returns>A data view of the filter results.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.Int32,System.DateTime,System.Int32,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(System.DateTime,System.Int32,System.DateTime,System.Int32,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(System.DateTime,System.Int32,System.DateTime,System.Int32,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.Parameters.cCheckCategory,System.String,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOwner">The check category making the request.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(System.String,System.DateTime,System.Int32,System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="AEndedHour">The active period ended hour.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.Int32,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.Int32,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.Int32,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.DateTime,System.Int32,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(System.DateTime,System.Int32,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(System.DateTime,System.Int32,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(ECMPS.Checks.Parameters.cCheckCategory,System.String,System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOwner">The check category making the request.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.InitValue(System.String,System.DateTime,System.Int32,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Scope(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active and 
            filter specification.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The end of the active date range.</param>
            <param name="AEndedHour">The end of the active hour range.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Scope(System.DateTime,System.Int32,System.DateTime,System.Int32)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active specification.
            </summary>
            <param name="ABeganDate">The active period began date.</param>
            <param name="ABeganHour">The active period began hour.</param>
            <param name="AEndedDate">The end of the active date range.</param>
            <param name="AEndedHour">The end of the active hour range.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Scope(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.DateTime,System.Int32)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active and 
            filter specification.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewHourRanged.Scope(System.DateTime,System.Int32)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active specification.
            </summary>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="AOpHour">The operating hour to test rows against</param>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy">
            <summary>
            Implements the data view parameter for generic data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewLegacy object, setting the array property 
            to false, and the parameter name and types.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.FDataView">
            <summary>
            The data view assigned to the parameter.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.NullDefaultedValue">
            <summary>
            Returns the value since the base value type (DataView) excepts nulls.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.Value">
            <summary>
            Returns the default view of the Scoped Table 
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.NullDefaultedObject">
            <summary>
            Returns NullDefaultedValue as an object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.LegacyValue">
            <summary>
            Returns Value as an object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.InitValue(System.Data.DataView,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sets the parameter value.
            </summary>
            <param name="AValue">The dataview to which the parameter should be set.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.InitValue(System.Data.DataView)">
            <summary>
            Sets the parameter value.
            </summary>
            <param name="AValue">The dataview to which the parameter should be set.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.InitValue(ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Nulls the parameter value.
            </summary>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.InitValue">
            <summary>
            Nulls the parameter value.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.GetDefaultForNull">
            <summary>
            Returns this parameter's default DataView value for nulls.
            </summary>
            <returns>Returns the default DataView value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default DataView value for nulls as an object.
            </summary>
            <returns>Returns the default DataView value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.GetNull">
            <summary>
            Returns null typed as a DataView.
            </summary>
            <returns>Returns null as a DataView.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.GetTypeValue(System.Data.DataView)">
            <summary>
            Returns the passed value if it is not null, otherwise it returns the default DataView for nulls.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.LegacySetValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="AOwner">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.LegacyUpdateValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method updates the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="ACategory">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.ValueAsObject">
            <summary>
            Returns the current value of the parameter as an object.
            </summary>
            <returns>The current value of the parameter as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLegacy.ResetValue">
            <summary>
            Sets the value property field to null, typed as a DataView.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased">
            <summary>
            Implements the data view parameter for date ranged data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewLocationBased object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.  Also sets
            the began and ended date field name properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="AMonitorLocationIdFieldName">The name of the monitor location id field.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewDateRange object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.  Also sets
            the began and ended date field name properties to "BEGAN_DATE" AND "END_DATE".
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.FMonitorLocationIdFieldName">
            <summary>
            The name of the monitor location id field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.MonitorLocationIdFieldName">
            <summary>
            The name of the monitor location id field.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.String,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AMonitorLocationId">The monitor location id to locate.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.String,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AMonitorLocationId">The monitor location id to locate.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.String,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AMonitorLocationId">The monitor location id to locate.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.InitValue(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.String,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="AMonitorLocationId">The monitor location id to locate.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.InitValue(System.String,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AMonitorLocationId">The monitor location id to locate.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.InitValue(System.String,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AMonitorLocationId">The monitor location id to locate.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.InitValue(ECMPS.Checks.Parameters.cCheckCategory,System.String,System.String,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AOwner">The check category making the request.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AMonitorLocationId">The monitor location id to locate.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.InitValue(System.String,System.String,System.Boolean,ECMPS.Checks.TypeUtilities.cFilterCondition[])">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AMonitorLocationId">The monitor location id to locate.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.Scope(ECMPS.Checks.TypeUtilities.cFilterCondition[],System.Boolean,System.String)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active and 
            filter specification.
            </summary>
            <param name="ARowFilter">The filter condtions to apply to the parameter rows.</param>
            <param name="ANotFilter">The negates the result from applying the row filter.</param>
            <param name="AMonitorLocationId">The name of the monitor location id field.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewLocationBased.Scope(System.String)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active specification.
            </summary>
            <param name="AMonitorLocationId">The name of the monitor location id field.</param>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased">
            <summary>
            Implements the data view parameter for date ranged data.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,System.String,System.String,System.String,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewUnitOrLocationBased object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.  Also sets
            the began and ended date field name properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="AUnitMonLocIdFieldName">The name of the unit monitor location id field.</param>
            <param name="AStackMonLocIdFieldName">The name of the stack monitor location id field.</param>
            <param name="ABeganDateFieldName">The name of the began date field.</param>
            <param name="AEndedDateFieldName">The name of the ended date field.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.#ctor(System.Nullable{System.Int32},System.String,System.Data.DataTable,System.String,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates and instance of a cCheckParameterDataViewUnitOrLocationBased object, setting the array property 
            to false, and the parameter name and types, and the source data table properties.  Also sets
            the began and ended date field name properties.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ASourceDataTable">The source data table for the parameter.</param>
            <param name="AUnitMonLocIdFieldName">The name of the unit monitor location id field.</param>
            <param name="AStackMonLocIdFieldName">The name of the stack monitor location id field.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.FBeganDateFieldName">
            <summary>
            The name of the began date field.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.FEndedDateFieldName">
            <summary>
            The name of the ended date field.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.FStackMonLocIdFieldName">
            <summary>
            The name of the stack monitor location id field.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.FUnitMonLocIdFieldName">
            <summary>
            The name of the unit monitor location id field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.BeganDateFieldName">
            <summary>
            The name of the began date field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.EndedDateFieldName">
            <summary>
            The name of the ended date field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.StackMonLocIdFieldName">
            <summary>
            The name of the stack monitor location id field.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.UnitMonLocIdFieldName">
            <summary>
            The name of the unit monitor location id field.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.InitValue(System.String,System.DateTime,System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AMonitorLocationIdList">A comma separated list of monitor location ids to locate.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.InitValue(System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AMonitorLocationIdList">A comma separated list of monitor location ids to locate.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.InitValue(System.String,System.DateTime,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AMonitorLocationIdList">A comma separated list of monitor location ids to locate.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
            <param name="AOwner">The check category making the request.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.InitValue(System.String,System.DateTime,System.String)">
            <summary>
            Scopes the source data to the active and filter specifications.
            </summary>
            <param name="AMonitorLocationIdList">A comma separated list of monitor location ids to locate.</param>
            <param name="AOpDate">The operating date to test rows against</param>
            <param name="ADataSort">The sort to apply to the resulting data's default view.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.Scope(System.String,System.DateTime)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active and 
            filter specification.
            </summary>
            <param name="AMonitorLocationIdList">A comma separated list of monitor location ids to locate.</param>
            <param name="AOpDate">The operating date to test rows against</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.Scope(System.String,System.DateTime,System.DateTime)">
            <summary>
            Sets the Scoped Data Table from Source Data Table and based on the passed active specification.
            </summary>
            <param name="AMonitorLocationIdList">A comma separated list of monitor location ids to locate.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.ScopeFilter(System.DateTime,System.String)">
            <summary>
            Filters from Source Data Table and based on the passed active and 
            filter specification.
            </summary>
            <param name="AMonitorLocationIdList">A comma separated list of monitor location ids to locate.</param>
            <param name="AOpDate">The operating date to test rows against</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDataViewUnitOrLocationBased.ScopeFilter(System.DateTime,System.DateTime,System.String)">
            <summary>
            Filter from Source Data Table and based on the passed active specification.
            </summary>
            <param name="AMonitorLocationIdList">A comma separated list of monitor location ids to locate.</param>
            <param name="ABeganDate">The active period began date.</param>
            <param name="AEndedDate">The active period ended date.</param>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDateArray">
            <summary>
            The date array parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.#ctor(System.Nullable{System.Int32},System.String,System.DateTime,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a date array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.eDateBorderType,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a date array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to DateTime.MinValue if the
            passed ADateBorderType is Began and DateTime.MaxValue if the ADateBorderType is Ended.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADateBorderType">Indicates whether the date represents a begin or end date in a range.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a date array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to DateTime.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDateArray.DefaultForNull">
            <summary>
            The default DateTime value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.GetDefaultForNull">
            <summary>
            Returns this array parameter with each element's value as the default DateTime value for nulls.
            </summary>
            <returns>Returns the default DateTime value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.GetDefaultObjectForNull">
            <summary>
            Returns this array parameter with each element's value as the default DateTime value for nulls,
            as an object.
            </summary>
            <returns>Returns the default DateTime value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.GetNull">
            <summary>
            Returns null typed as a nullable DateTime.
            </summary>
            <returns>Returns null as a nullable DateTime.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.GetTypeValue(System.Nullable{System.DateTime})">
            <summary>
            Converts the passed value from the nullable DateTime to DateTime by returning the
            passed value if it is not null, otherwise returning the default DateTime for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.ConvertObjectType(System.Object,System.Nullable{System.DateTime}[]@,System.String@)">
            <summary>
            Converts the input object to a nullable DateTime array.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateArray.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable DateTime array.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDateValue">
            <summary>
            The date value parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.#ctor(System.Nullable{System.Int32},System.String,System.DateTime,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a date value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.eDateBorderType,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a date value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to DateTime.MinValue if the
            passed ADateBorderType is Began and DateTime.MaxValue if the ADateBorderType is Ended.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADateBorderType">Indicates whether the date represents a begin or end date in a range.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a date value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to DateTime.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.AsBeginDateTime">
            <summary>
            Returns the Value defaulted to DateTime.MinValue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.AsEndDateTime">
            <summary>
            Returns the Value defaulted to DateTime.MaxValue.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDateValue.DefaultForNull">
            <summary>
            The default DateTime value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.GetDefaultForNull">
            <summary>
            Returns this parameter's default DateTime value for nulls.
            </summary>
            <returns>Returns the default DateTime value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default DateTime value for nulls as an object.
            </summary>
            <returns>Returns the default DateTime value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.GetNull">
            <summary>
            Returns null typed as a nullable DateTime.
            </summary>
            <returns>Returns null as a nullable DateTime.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.GetTypeValue(System.Nullable{System.DateTime})">
            <summary>
            Converts the passed value from the nullable DateTime to DateTime by returning the
            passed value if it is not null, otherwise returning the default DateTime for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.ConvertObjectType(System.Object,System.Nullable{System.DateTime}@,System.String@)">
            <summary>
            Converts the input object to a nullable DateTime.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValue.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable DateTime.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDateValueReference">
            <summary>
            The date value reference parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValueReference.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a date value reference parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to DateTime.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValueReference.GetDefaultForNull">
            <summary>
            Returns the referenced parameter's default DateTime value for nulls.
            </summary>
            <returns>Returns the referenced parameter's default DateTime value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValueReference.GetDefaultObjectForNull">
            <summary>
            Return the referenced parameter's default DateTime value for nulls as an object.
            </summary>
            <returns>Returns the referenced parameter's the default DateTime value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValueReference.GetNull">
            <summary>
            Returns null typed as a nullable DateTime.
            </summary>
            <returns>Returns null as a nullable DateTime.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDateValueReference.GetTypeValue(System.Nullable{System.DateTime})">
            <summary>
            Converts the passed value from the nullable DateTime to DateTime by returning the
            passed value if it is not null, otherwise returning the default DateTime for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDecimalArray">
            <summary>
            The decimal array parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.#ctor(System.Nullable{System.Int32},System.String,System.Decimal,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a decimal array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a decimal array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to decimal.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.DefaultForNull">
            <summary>
            The default decimal value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.AggregateValue(System.Decimal,System.Int32,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sums the specified element of the current parameter array and the passed value.  If the 
            current parameter array element is not set or is null then the parameter array element is 
            assinged the passed value.
            </summary>
            <param name="AValue">The value to sum to the current parameter value array element.</param>
            <param name="AIndex">The current parameter array element index.</param>
            <param name="ACategory">The category updating the parameter</param>
            <returns>The result of the summation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.GetDefaultForNull">
            <summary>
            Returns this array parameter with each element's value as the default decimal value for nulls.
            </summary>
            <returns>Returns the default decimal value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.GetDefaultObjectForNull">
            <summary>
            Returns this array parameter with each element's value as the default decimal value for nulls,
            as an object.
            </summary>
            <returns>Returns the default decimal value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.GetNull">
            <summary>
            Returns null typed as a nullable decimal.
            </summary>
            <returns>Returns null as a nullable decimal.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.GetTypeValue(System.Nullable{System.Decimal})">
            <summary>
            Converts the passed value from the nullable decimal to decimal by returning the
            passed value if it is not null, otherwise returning the default decimal for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.ConvertObjectType(System.Object,System.Nullable{System.Decimal}[]@,System.String@)">
            <summary>
            Converts the input object to a nullable decimal array.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalArray.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable decimal array.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDecimalValue">
            <summary>
            The decimal value parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.#ctor(System.Nullable{System.Int32},System.String,System.Decimal,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a decimal value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a decimal value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to decimal.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.DefaultForNull">
            <summary>
            The default decimal value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.AggregateValue(System.Decimal,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sums the current parameter value and the passed value.  If the current parameter value
            is not set or is null then the parameter value is assinged the passed value.
            </summary>
            <param name="AValue">The value to sum to the current parameter value.</param>
            <param name="ACategory">The category updating the parameter</param>
            <returns>Returns the result of the summation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.GetDefaultForNull">
            <summary>
            Returns this parameter's default decimal value for nulls.
            </summary>
            <returns>Returns the default decimal value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default decimal value for nulls as an object.
            </summary>
            <returns>Returns the default decimal value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.GetNull">
            <summary>
            Returns null typed as a nullable decimal.
            </summary>
            <returns>Returns null as a nullable decimal.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.GetTypeValue(System.Nullable{System.Decimal})">
            <summary>
            Converts the passed value from the nullable decimal to decimal by returning the
            passed value if it is not null, otherwise returning the default decimal for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.ConvertObjectType(System.Object,System.Nullable{System.Decimal}@,System.String@)">
            <summary>
            Converts the input object to a nullable decimal.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValue.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable decimal.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterDecimalValueReference">
            <summary>
            The decimal value reference parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValueReference.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a decimal value reference parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to decimal.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValueReference.GetDefaultForNull">
            <summary>
            Returns the referenced parameter's default decimal value for nulls.
            </summary>
            <returns>Returns the referenced parameter's default decimal value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValueReference.GetDefaultObjectForNull">
            <summary>
            Return the referenced parameter's default decimal value for nulls as an object.
            </summary>
            <returns>Returns the referenced parameter's the default decimal value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValueReference.GetNull">
            <summary>
            Returns null typed as a nullable decimal.
            </summary>
            <returns>Returns null as a nullable decimal.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterDecimalValueReference.GetTypeValue(System.Nullable{System.Decimal})">
            <summary>
            Converts the passed value from the nullable decimal to decimal by returning the
            passed value if it is not null, otherwise returning the default decimal for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterIntegerArray">
            <summary>
            The integer array parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.#ctor(System.Nullable{System.Int32},System.String,System.Int32,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a integer array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a integer array parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to decimal.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.DefaultForNull">
            <summary>
            The default int value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.AggregateValue(System.Int32,System.Int32,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sums the specified element of the current parameter array and the passed value.  If the 
            current parameter array element is not set or is null then the parameter array element is 
            assinged the passed value.
            </summary>
            <param name="AValue">The value to sum to the current parameter value array element.</param>
            <param name="AIndex">The current parameter array element index.</param>
            <param name="ACategory">The category updating the parameter</param>
            <returns>The result of the summation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.GetDefaultForNull">
            <summary>
            Returns this array parameter with each element's value as the default int value for nulls.
            </summary>
            <returns>Returns the default int value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.GetDefaultObjectForNull">
            <summary>
            Returns this array parameter with each element's value as the default int value for nulls,
            as an object.
            </summary>
            <returns>Returns the default int value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.GetNull">
            <summary>
            Returns null typed as a nullable int.
            </summary>
            <returns>Returns null as a nullable int.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.GetTypeValue(System.Nullable{System.Int32})">
            <summary>
            Converts the passed value from the nullable int to int by returning the
            passed value if it is not null, otherwise returning the default int for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.ConvertObjectType(System.Object,System.Nullable{System.Int32}[]@,System.String@)">
            <summary>
            Converts the input object to a nullable int array.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerArray.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable int array.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterIntegerValue">
            <summary>
            The integer value parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.#ctor(System.Nullable{System.Int32},System.String,System.Int32,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a integer value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a integer value parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to decimal.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.DefaultForNull">
            <summary>
            The default int value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.AggregateValue(System.Int32,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Sums the current parameter value and the passed value.  If the current parameter value
            is not set or is null then the parameter value is assinged the passed value.
            </summary>
            <param name="AValue">The value to sum to the current parameter value.</param>
            <param name="ACategory">The category updating the parameter</param>
            <returns>Returns the result of the summation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.GetDefaultForNull">
            <summary>
            Returns this parameter's default int value for nulls.
            </summary>
            <returns>Returns the default int value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default int value for nulls as an object.
            </summary>
            <returns>Returns the default int value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.GetNull">
            <summary>
            Returns null typed as a nullable int.
            </summary>
            <returns>Returns null as a nullable int.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.GetTypeValue(System.Nullable{System.Int32})">
            <summary>
            Converts the passed value from the nullable int to int by returning the
            passed value if it is not null, otherwise returning the default int for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.ConvertObjectType(System.Object,System.Nullable{System.Int32}@,System.String@)">
            <summary>
            Converts the input object to a nullable int.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValue.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable int.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterIntegerValueReference">
            <summary>
            The integer value reference parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValueReference.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a integer value reference parameter object setting the Parameter name and data type,
            and setting the default value to use in place of a null or dbnull to decimal.MinValue.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValueReference.GetDefaultForNull">
            <summary>
            Returns the referenced parameter's default int value for nulls.
            </summary>
            <returns>Returns the referenced parameter's default int value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValueReference.GetDefaultObjectForNull">
            <summary>
            Return the referenced parameter's default int value for nulls as an object.
            </summary>
            <returns>Returns the referenced parameter's the default int value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValueReference.GetNull">
            <summary>
            Returns null typed as a nullable int.
            </summary>
            <returns>Returns null as a nullable int.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterIntegerValueReference.GetTypeValue(System.Nullable{System.Int32})">
            <summary>
            Converts the passed value from the nullable int to int by returning the
            passed value if it is not null, otherwise returning the default int for null.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterLegacy">
            <summary>
            The root class for all parameters.  The class is abstract and cannot be instantiated.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterLegacy.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Instantiates a cCheckParameterCheckEngine class and sets the name and data type properties
            of the parameter
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterLegacy.FNullDefaultedValue">
            <summary>
            The value as the base type and defaulted when null or dbnull.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.cCheckParameterLegacy.FLegacyValue">
            <summary>
            The legacy value.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterLegacy.NullDefaultedValue">
            <summary>
            The value as the base type and defaulted when null or dbnull.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterLegacy.IsLegacyType">
            <summary>
            Indicates whether this parameter type is used to bypass the implementation of the
            underlying parameter as a property of the check parameters object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterLegacy.LegacyValue">
            <summary>
            Returns property Value as an object.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterLegacy.NullDefaultedObject">
            <summary>
            Returns property NullDefaultedValue as an object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterLegacy.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default bool value for nulls as an object.
            </summary>
            <returns>Returns the default bool value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterLegacy.LegacySetValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="AOwner">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterLegacy.LegacyUpdateValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Replaces a current parameter value with the passed value.
            </summary>
            <param name="ALegacyValue">The value that should replace the current parameter value array element.</param>
            <param name="ACategory">The category updating the parameter</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterLegacy.ValueAsObject">
            <summary>
            Returns the current value of the parameter as an object.
            </summary>
            <returns>The current value of the parameter as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterLegacy.ResetValue">
            <summary>
            Sets the value property field to null, typed as a nullable bool.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterObjectValue">
            <summary>
            The string value parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a string value parameter object setting the Parameter name and data type.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AggregateDelimiter">
            <summary>
            The deliniter used to separate aggregated (concatenated) strings.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterObjectValue.DefaultForNull">
            <summary>
            The default int value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsBool(System.Boolean)">
            <summary>
            Returns the value as a boolean defaulting the return value if the parameter value
            is null, dbnull, or is not a boolean value.
            </summary>
            <param name="ADefault">The default value.</param>
            <returns>The boolean value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsBool">
            <summary>
            Returns the value as a boolean defaulting the return value to false if the parameter value
            is null, dbnull, or is not a boolean value.
            </summary>
            <returns>The boolean value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsBoolArray">
            <summary>
            Returns the value as a boolean array defaulting the return value to null if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The boolean array of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsDataRowView">
            <summary>
            Returns the value as a DataRowView defaulting the return value to null if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The DataRowView value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsDataView">
            <summary>
            Returns the value as a DataView defaulting the return value to null if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The DataView value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsDateTime(ECMPS.Checks.Parameters.eDateBorderType)">
            <summary>
            Returns the value as a DateTime defaulting the return value to null if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <param name="ADateBorderType">Whether the date is a began or ended date.</param>
            <returns>The DateTime value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsDecimal(System.Decimal)">
            <summary>
            Returns the value as a Decimal defaulting the return value to the default value if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <param name="ADefault">The default value.</param>
            <returns>The Decimal value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsDecimal">
            <summary>
            Returns the value as a Decimal defaulting the return value to the minumum value if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The Decimal value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsDecimalArray">
            <summary>
            Returns the value as a Decimal array defaulting the return value to the minumum value if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The Decimal array of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsDecimalNullable">
            <summary>
            Returns the value as a Decimal? defaulting the return value to the minumum value if the 
            parameter value is dbnull, or is not a convertable type.
            </summary>
            <returns>The Decimal? value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsInt(System.Int32)">
            <summary>
            Returns the value as a int defaulting the return value to the default value if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <param name="ADefault">The default value.</param>
            <returns>The int value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsInt">
            <summary>
            Returns the value as a int defaulting the return value to the minimum value if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The int value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsIntArray">
            <summary>
            Returns the value as a int array defaulting the return value to the minumum value if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The int array of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsIntNullable">
            <summary>
            Returns the value as a int? defaulting the return value to the minumum value if the 
            parameter value is dbnull, or is not a convertable type.
            </summary>
            <returns>The int? value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsString">
            <summary>
            Returns the value as a string defaulting the return value to the default value if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The int value of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.AsStringArray">
            <summary>
            Returns the value as a string array defaulting the return value to the minumum value if the 
            parameter value is null, dbnull, or is not a convertable type.
            </summary>
            <returns>The string array of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.GetDefaultForNull">
            <summary>
            Returns this parameter's default string value for nulls.
            </summary>
            <returns>Returns the default string value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default string value for nulls as an object.
            </summary>
            <returns>Returns the default string value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.GetNull">
            <summary>
            Returns null typed as a string.
            </summary>
            <returns>Returns null as a string.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.GetTypeValue(System.Object)">
            <summary>
            Returns the passed value if it is not null, otherwise it returns the default string for nulls.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.ConvertObjectType(System.Object,System.Object@,System.String@)">
            <summary>
            Converts the input object to a string.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterObjectValue.ResetValue">
            <summary>
            Sets the value property field to null, typed as a string.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterStringArray">
            <summary>
            The string array parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a string array parameter object setting the Parameter name and data type,
            setting the default value to use in place of a null or dbnull to the passed value,
            and setting the aggregate delimiter property to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="AAggregateDelimiter">The delimiter between strings aggregated into the value.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.#ctor(System.Nullable{System.Int32},System.String,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a string array parameter object setting the Parameter name and data type,
            setting the default value to use in place of a null or dbnull to a null string,
            and setting the aggregate delimiter property to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="AAggregateDelimiter">The delimiter between strings aggregated into the value.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a string array parameter object setting the Parameter name and data type,
            setting the default value to use in place of a null or dbnull to a null string,
            and setting the aggregate delimiter property to a comma.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterStringArray.AggregateDelimiter">
            <summary>
            The deliniter used to separate aggregated (concatenated) strings.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterStringArray.DefaultForNull">
            <summary>
            The default int value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.AggregateValue(System.String,System.Int32,System.String,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Concatenates the specified element of the current parameter array and the passed value using 
            the passed delimiter.  If the current parameter array element is not set or is null then the 
            parameter array element is assinged the passed value.
            </summary>
            <param name="AValue">The value to concatenate to the current parameter value.</param>
            <param name="AIndex">The current parameter array element index.</param>
            <param name="AAggregateDelimiter">The delimiter used in the concatenation.</param>
            <param name="ACategory">The category updating the parameter</param>
            <returns>Returns the result of the concatenation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.AggregateValue(System.String,System.Int32,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            Concatenates the specified element of the current parameter value and the passed value using 
            the default delimiter for the parameter.  If the current parameter array element is not set or 
            is null then the parameter array element is assinged the passed value.
            </summary>
            <param name="AValue">The value to concatenate to the current parameter value.</param>
            <param name="AIndex">The current parameter array element index.</param>
            <param name="ACategory">The category updating the parameter</param>
            <returns>Returns the result of the concatenation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.GetDefaultForNull">
            <summary>
            Returns this array parameter with each element's value as the default string value for nulls.
            </summary>
            <returns>Returns the default string value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.GetDefaultObjectForNull">
            <summary>
            Returns this array parameter with each element's value as the default string value for nulls,
            as an object.
            </summary>
            <returns>Returns the default string value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.GetNull">
            <summary>
            Returns null typed as a string.
            </summary>
            <returns>Returns null as a string.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.GetTypeValue(System.String)">
            <summary>
            Returns the passed value if it is not null, otherwise it returns the default string for nulls.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.ConvertObjectType(System.Object,System.String[]@,System.String@)">
            <summary>
            Converts the input object to a string array.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringArray.ResetValue">
            <summary>
            Sets the value property field to null, typed as a string array.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterStringValue">
            <summary>
            The string value parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a string value parameter object setting the Parameter name and data type,
            setting the default value to use in place of a null or dbnull to the passed value,
            and setting the aggregate delimiter property to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ADefaultForNull">The default value to use in place of a null or dbnull.</param>
            <param name="AAggregateDelimiter">The delimiter between strings aggregated into the value.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.#ctor(System.Nullable{System.Int32},System.String,System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a string value parameter object setting the Parameter name and data type,
            setting the default value to use in place of a null or dbnull to a null string,
            and setting the aggregate delimiter property to the passed value.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="AAggregateDelimiter">The delimiter between strings aggregated into the value.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a string value parameter object setting the Parameter name and data type,
            setting the default value to use in place of a null or dbnull to a null string,
            and setting the aggregate delimiter property to a comma.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterStringValue.AggregateDelimiter">
            <summary>
            The deliniter used to separate aggregated (concatenated) strings.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterStringValue.DefaultForNull">
            <summary>
            The default int value when the value is null or dbnull.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.AggregateValue(System.String,System.String)">
            <summary>
            Concatenates the current parameter value and the passed value using the passed delimiter.  
            If the current parameter value is not set or is null then the parameter value is assinged 
            the passed value.
            </summary>
            <param name="AValue">The value to concatenate to the current parameter value.</param>
            <param name="AAggregateDelimiter">The delimiter used in the concatenation.</param>
            <returns>Returns the result of the concatenation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.AggregateValue(System.String)">
            <summary>
            Concatenates the current parameter value and the passed value using the default delimiter
            for the parameter.  If the current parameter value is not set or is null then the parameter
            value is assinged the passed value.
            </summary>
            <param name="AValue">The value to concatenate to the current parameter value.</param>
            <returns>Returns the result of the concatenation.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.GetDefaultForNull">
            <summary>
            Returns this parameter's default string value for nulls.
            </summary>
            <returns>Returns the default string value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.GetDefaultObjectForNull">
            <summary>
            Retursn this parameter's default string value for nulls as an object.
            </summary>
            <returns>Returns the default string value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.GetNull">
            <summary>
            Returns null typed as a string.
            </summary>
            <returns>Returns null as a string.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.GetTypeValue(System.String)">
            <summary>
            Returns the passed value if it is not null, otherwise it returns the default string for nulls.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.ConvertObjectType(System.Object,System.String@,System.String@)">
            <summary>
            Converts the input object to a string.
            </summary>
            <param name="AInputValue">The object to convert.</param>
            <param name="AOutputValue">The converted value.</param>
            <param name="AErrorMessage">The error message returned if the conversion fails.</param>
            <returns>Returns false if the conversion failed.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValue.ResetValue">
            <summary>
            Sets the value property field to null, typed as a string.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterStringValueReference">
            <summary>
            The string value reference parameter object used by the check engine.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValueReference.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Create and instance of a string value parameter object setting the Parameter name and data type,
            setting the default value reference to use in place of a null or dbnull to a null string,
            and setting the aggregate delimiter property to a comma.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValueReference.GetDefaultForNull">
            <summary>
            Returns the referenced parameter's default string value for nulls.
            </summary>
            <returns>Returns the referenced parameter's default string value for nulls.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValueReference.GetDefaultObjectForNull">
            <summary>
            Return the referenced parameter's default string value for nulls as an object.
            </summary>
            <returns>Returns the referenced parameter's the default string value for nulls as an object.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValueReference.GetNull">
            <summary>
            Returns null typed as a string.
            </summary>
            <returns>Returns null as a string.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterStringValueReference.GetTypeValue(System.String)">
            <summary>
            Returns the passed value if it is not null, otherwise it returns the default string for nulls.
            </summary>
            <param name="ANullableValue">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterCheckEngine">
            <summary>
            The root class for all parameters.  The class is abstract and cannot be instantiated.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngine.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Instantiates a cCheckParameterCheckEngine class and sets the name and data type properties
            of the parameter
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="AParameterDataType">The data type of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckParameterCheckEngine.IsLegacyType">
            <summary>
            Indicates whether this parameter type is used to bypass the implementation of the
            underlying parameter as a property of the check parameters object.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngine.LegacySetValue(System.Object)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngine.LegacyUpdateValue(System.Object)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngine.LegacySetValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method sets the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="AOwner">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngine.LegacyUpdateValue(System.Object,ECMPS.Checks.Parameters.cCheckCategory)">
            <summary>
            This method updates the value of the parameter using an object value.
            If the object value is not of a correct type the method returns a false.
            </summary>
            <param name="ALegacyValue">The object value by which to set the value.</param>
            <param name="AOwner">The category setting the parameter</param>
            <returns>True if the setting was successful.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckParameterCheckEngineTyped`2">
            <summary>
            The parent type of all type parameters used by the check engine.
            </summary>
            <typeparam name="Type">The base type of the parameter value</typeparam>
            <typeparam name="NullableType">The nullable type of the parameter value</typeparam>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngineTyped`2.#ctor(System.Nullable{System.Int32},System.String,ECMPS.Checks.Parameters.eParameterDataType,ECMPS.Checks.Parameters.cCheckParameters)">
            <summary>
            Creates an instance of cCheckParameterCheckEngineTyped and sets the Name and DataType property.
            </summary>
            <param name="AParameterKey">The key of the parameter.</param>
            <param name="AParameterName">The name of the parameter.</param>
            <param name="AParameterDataType">The data type of the parameter.</param>
            <param name="ACheckParameters">The parent check parameters object.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngineTyped`2.GetDefaultForNull">
            <summary>
            Returns the default value for representing Null or DBNULL values.
            </summary>
            <returns>The default value for representing Null or DBNULL values.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngineTyped`2.GetNull">
            <summary>
            Returns null as the nullable type of the parameter.
            </summary>
            <returns>Null as the nullable type of the parameter.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckParameterCheckEngineTyped`2.GetTypeValue(`1)">
            <summary>
            Returns the base type value reflecting the passed nullable type value.
            </summary>
            <param name="ANullableValue">The nullabe type value to convert.</param>
            <returns>The base type value corresponding to the passed nullable type value.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cCheckProcess">
            <summary>
            The base for all Process objects
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckProcess.#ctor(System.String)">
            <summary>
            Instantiates a cCheckProcess object
            </summary>
            <param name="AProcessCd">The process code associated with the check process object</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cCheckProcess.#ctor">
            <summary>
            Instantiates a cCheckProcess object primarily for unit testing purposes.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cCheckProcess.ProcessCd">
            <summary>
            The process code of the category object instance.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cParameterizedCheck">
            <summary>
            Represents a check including the rule check id, check type code and check number,
            and required, optional and condition parameters individually and as input parameter,
            and output parameters.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cParameterizedCheck.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Creates an instance of cParameterizedCheck and sets the Rule Check Id, Check Type Code
            and Check Number parameters.
            </summary>
            <param name="ARuleCheckId">The rule check id of the associated check</param>
            <param name="ACheckTypeCd">The check type id of the associated check</param>
            <param name="ACheckNumber">The check number of the assocaited check</param>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckConditions">
            <summary>
            An array of arrays of check conditins in which the results of evaluating the conditions in
            the inner arrays are anded together to gets results that are ored together for the outer array.
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckName">
            <summary>
            The check type code and check number associated with the Parameterized Check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckNumber">
            <summary>
            The check number associated with the Parameterized Check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckTypeCd">
            <summary>
            The check type code associated with the Parameterized Check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckParametersInput">
            <summary>
            The input (required, optional and condition) parameters associated with the Parameterized Check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckParametersInputCondition">
            <summary>
            The condition parameters associated with the Parameterized Check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckParametersInputOptional">
            <summary>
            The optional parameters associated with the Parameterized Check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckParametersInputRequired">
            <summary>
            The required parameters associated with the Parameterized Check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.CheckParametersOutput">
            <summary>
            The output parameters associated with the Parameterized Check
            </summary>
        </member>
        <member name="P:ECMPS.Checks.Parameters.cParameterizedCheck.RuleCheckId">
            <summary>
            The rule check id associated with the Parameterized Check
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cParameterizedCheck.EvaluateCheckConditions">
            <summary>
            Evaluates the check conditions for the check and returns the results.
            </summary>
            <returns>The result of evaluating this checks check conditions.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cParameterizedCheck.IsSameCheck(ECMPS.Checks.Parameters.cParameterizedCheck)">
            <summary>
            Returns true if the passed parameterized check is for the same check as this 
            parameterized check.
            </summary>
            <param name="AOtherParameterizedCheck">The rule check to check.</param>
            <returns>True if the this and the passed parameterized check are for the same check</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cParameterizedCheck.Populate(ECMPS.Checks.DatabaseAccess.cDatabase,ECMPS.Checks.Parameters.cCheckParameters,System.String@)">
            <summary>
            Populates the parameters and conditions for the rule checks.
            </summary>
            <param name="AAuxDatabase">The AUX schema database.</param>
            <param name="ACheckParameters">The check parameters for the associates process.</param>
            <param name="AErrorMessage">The error message indicating why the population failed.</param>
            <returns>Returns true if the process succeeded.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cParameterizedCheck.ToString">
            <summary>
            Show the check type and number the check object represents.
            </summary>
            <returns>Returns the check type and number the check object represents</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cParameterizedCheck.AreSameCheck(ECMPS.Checks.Parameters.cParameterizedCheck,ECMPS.Checks.Parameters.cParameterizedCheck)">
            <summary>
            Checks to determine whether the checks underlying two parameterized checks are the same check.
            </summary>
            <param name="AParameterizedCheckOne">One of the parameterized checks to check.</param>
            <param name="AParameterizedCheckTwo">One of the parameterized checks to check.</param>
            <returns>Returns true if the underlygin checks are the same or both parameterized checks are null.</returns>
        </member>
        <member name="T:ECMPS.Checks.Parameters.eDatabaseOpenType">
            <summary>
            Indicates whether a database is closed, by another process, or opened by current process.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eDatabaseOpenType.Opened">
            <summary>
            Indicates that the process that called the database open closed method 
            acutally opened a closed database.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eDatabaseOpenType.AlreadyOpened">
            <summary>
            Indicates that the database open closed method did not open the database
            because it was already open.
            </summary>
        </member>
        <member name="F:ECMPS.Checks.Parameters.eDatabaseOpenType.Error">
            <summary>
            Indicates that an error occured while trying to open a database.
            </summary>
        </member>
        <member name="T:ECMPS.Checks.Parameters.cUtilities">
            <summary>
            Contains utility methods used by check parameters and its user.
            </summary>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cUtilities.Database_OpenClosed(ECMPS.Checks.DatabaseAccess.cDatabase,System.String@)">
            <summary>
            Opens the database if it was closed.
            </summary>
            <param name="ADatabase">The database to open</param>
            <param name="AErrorMessage">The error message corresponding to a return value of Error</param>
            <returns>Opened if the database was opened, AlreadyOpened if it was open on the call to the method and Error if an error occured while opening the database.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cUtilities.Database_CloseOpened(ECMPS.Checks.DatabaseAccess.cDatabase,ECMPS.Checks.Parameters.eDatabaseOpenType)">
            <summary>
            Closes a database if it was opened by the calling process.
            </summary>
            <param name="ADatabase">The database to close.</param>
            <param name="ADatabaseOpenType">Indicator of whether the calling process opened the database.</param>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cUtilities.Database_ExecuteScalar(System.String,ECMPS.Checks.DatabaseAccess.cDatabase,System.Int32,System.Int32@,System.String@)">
            <summary>
            Calls cDatabase.ExecuteScalar, returning cDatabase.InternalError as its error message if an
            error occurs.
            </summary>
            <param name="ASql">The SQL statement to execute.</param>
            <param name="ADatabase">The database to execute the SQL against.</param>
            <param name="ADefault">The default value returned if the value returned is null or dbnull.</param>
            <param name="AResultScalar">The resulting value</param>
            <param name="AErrorMessage">The error message returned when the return value is false.</param>
            <returns>True if the SQL executed correctly.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cUtilities.Database_GetDataTable(System.String,ECMPS.Checks.DatabaseAccess.cDatabase,System.Data.DataTable@,System.String@)">
            <summary>
            Calls cDatabase.GetDataTable, returning cDatabase.InternalError as its error message if an
            error occurs.
            </summary>
            <param name="ASql">The SQL statement to execute.</param>
            <param name="ADatabase">The database to execute the SQL against.</param>
            <param name="AResultTable">The resulting table.</param>
            <param name="AErrorMessage">The error message returned when the return value is false.</param>
            <returns>True if the SQL executed correctly.</returns>
        </member>
        <member name="M:ECMPS.Checks.Parameters.cUtilities.CloneTable(System.Data.DataTable)">
            <summary>
            Creates an empty clone of the passed table.
            </summary>
            <param name="ASourceTable"></param>
            <returns></returns>
        </member>
    </members>
</doc>
